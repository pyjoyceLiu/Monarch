overage_signal cov->size 2980, flag collect 0
----- executor 2 signal number : 261
----- executor 2 executes write_coverage_signal cov->size 10029, flag collect 0
2023/03/29 03:44:13 for select break: 1
2023/03/29 03:44:13 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 2544
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 373
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 469, flag collect 0
----- executor 2 signal number : 243
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 424
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 11015, flag collect 0
time breakdown 0: 27, 4906, 0
before receive testcase: 0 0
----- executor 2 signal number : 1545
----- executor 2 executes write_coverage_signal cov->size 11767, flag collect 0
----- executor 2 signal number : 3444
----- executor 2 executes write_coverage_signal cov->size 40, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 16555, flag collect 0
time breakdown 3: 29, 4906, 0
before receive testcase: 0 0
----- executor 2 signal number : 1271
executor 2 server cover_cnt 17 output_pos_value 14092
time breakdown 1: 28, 4907, 0
before receive testcase: 0 0
2023/03/29 03:44:13 for select break: 1
2023/03/29 03:44:13 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:13 wg wait finish
2023/03/29 03:44:13 ------ all executors finish execution
2023/03/29 03:44:13 exec time: 4929
2023/03/29 03:44:13 ----- PS len: 4
2023/03/29 03:44:13 [CLIENT] executor 3 has 5 replies
2023/03/29 03:44:13 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:13 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:13 [SERVER] executor 2 has 17 replies
2023/03/29 03:44:13 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 03:44:13 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/29 03:44:13 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:44:13 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:44:13 fuzzer receive 211 signal and 0 cover from executor 3
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 1568 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 596 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 552 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 953 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 261 signal and 0 cover from userspace component
time breakdown 2: 22, 4912, 0
before receive testcase: 0 0
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 2544 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 373 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 243 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 424 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 1545 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 3444 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/29 03:44:13 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 03:44:13 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:13 ----- no new client coverage: false, true
2023/03/29 03:44:13 NetFailure, Node crash: false false
2023/03/29 03:44:13 mutate testcase with failures
2023/03/29 03:44:13 ----- insertCall()
2023/03/29 03:44:13 ----- generateCall 3761 stat stat
2023/03/29 03:44:13 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:13 prog length: 6
2023/03/29 03:44:13 HasCrashFail:false HasNetFail:false
03:44:13 ---executing program 0:
---
---
---
open(&(0x7f0000001140)='./file0\x00', 0x8840, 0x0)
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f0000000180), 0x0, 0x0, 0x0)
sync()
chmod(&(0x7f0000000000)='./file0\x00', 0x1d1)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=@known='user.incfs.size\x00')
stat(&(0x7f0000000100)='./file0\x00', &(0x7f00000001c0))
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 784
remove dir: /root/cephfs-client/dfs-0-536
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-537 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-537
receive_execute: 10, 4
receive_execute: 12, 4
receive_execute: 12, 4
receive_execute: 6, 4
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2624, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 2624, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 162
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 558, pid 2624, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 558, flag collect 0
----- executor 3 signal number : 307
----- completed 3
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 397, pid 2624, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 397, flag collect 0
----- executor 3 signal number : 86
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 2624, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 29
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2624, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 58, 0
execute_one time: 1, 73
2023/03/29 03:44:18 for select break: 1
2023/03/29 03:44:18 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 16, 4985, 0
executor 1 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1549
----- executor 2 executes write_coverage_signal cov->size 24602, flag collect 0
----- executor 2 signal number : 1134
----- executor 2 executes write_coverage_signal cov->size 6752, flag collect 0
----- executor 2 signal number : 672
----- executor 2 executes write_coverage_signal cov->size 2325, flag collect 0
----- executor 2 signal number : 69
2023/03/29 03:44:18 for select break: 1
2023/03/29 03:44:18 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 16, 4986, 0
----- executor 2 signal number : 7612
----- executor 2 executes write_coverage_signal cov->size 3450, flag collect 0
----- executor 2 signal number : 365
----- executor 2 executes write_coverage_signal cov->size 8135, flag collect 0
----- executor 2 signal number : 2128
----- executor 2 executes write_coverage_signal cov->size 2932, flag collect 0
----- executor 2 signal number : 469
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 2262, flag collect 0
----- executor 2 signal number : 329
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 539
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 9001, flag collect 0
----- executor 2 signal number : 1771
----- executor 2 executes write_coverage_signal cov->size 18961, flag collect 0
----- executor 2 signal number : 3998
----- executor 2 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 2 signal number : 10
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 14, 4987, 0
before receive testcase: 0 1
----- executor 2 signal number : 1625
executor 2 server cover_cnt 17 output_pos_value 22511
2023/03/29 03:44:18 for select break: 1
2023/03/29 03:44:18 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 10, 4992, 0
before receive testcase: 0 0
2023/03/29 03:44:18 for select break: 1
2023/03/29 03:44:18 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:44:18 wg wait finish
2023/03/29 03:44:18 ------ all executors finish execution
2023/03/29 03:44:18 exec time: 4998
2023/03/29 03:44:18 ----- PS len: 4
2023/03/29 03:44:18 [CLIENT] executor 3 has 6 replies
2023/03/29 03:44:18 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:44:18 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/29 03:44:18 fuzzer receive 307 signal and 0 cover from executor 3
2023/03/29 03:44:18 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/29 03:44:18 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/29 03:44:18 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 03:44:18 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:18 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:18 [SERVER] executor 2 has 17 replies
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 1549 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 1134 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 672 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 7612 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 365 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 2128 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 469 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 329 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 539 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 1771 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 3998 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/29 03:44:18 ------- fuzzer executor 2 receive 1625 signal and 0 cover from userspace component
2023/03/29 03:44:18 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:18 ----- no new client coverage: false, true
2023/03/29 03:44:18 NetFailure, Node crash: false false
2023/03/29 03:44:18 mutate testcase with failures
2023/03/29 03:44:18 ----- insertCall()
2023/03/29 03:44:18 ----- generateCall 3766 sync sync
2023/03/29 03:44:18 ----- mutateArg()
2023/03/29 03:44:18 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:18 prog length: 6
2023/03/29 03:44:18 HasCrashFail:false HasNetFail:false
03:44:18 ---executing program 0:
---
---
---
open(&(0x7f0000001140)='./file0\x00', 0x8840, 0x0)
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f0000000180), 0x0, 0x0, 0x0)
sync()
chmod(&(0x7f0000000000)='./file0\x00', 0x1d1)
sync()
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=@known='user.incfs.size\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 696
remove dir: /root/cephfs-client/dfs-0-537
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-538 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-538
receive_execute: 14, 18
receive_execute: 7, 17
receive_execute: 12, 18
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 2629, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 2629, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 162
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 558, pid 2629, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 558, flag collect 0
----- executor 3 signal number : 307
----- completed 3
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 397, pid 2629, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 397, flag collect 0
----- executor 3 signal number : 86
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 27, 2
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 2629, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 29
----- completed 5
execute_one loop: 0, 0, 6
----- executor 3 write_call_output, size 169, pid 2629, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 169, flag collect 0
----- executor 3 signal number : 12
----- completed 6
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 4966, 102, 0
execute_one time: 0, 5068
2023/03/29 03:44:28 for select break: 1
2023/03/29 03:44:28 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 32, 9967, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 3574, flag collect 0
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1550
----- executor 2 executes write_coverage_signal cov->size 23420, flag collect 0
2023/03/29 03:44:28 for select break: 1
2023/03/29 03:44:28 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1088
----- executor 2 executes write_coverage_signal cov->size 6752, flag collect 0
----- executor 2 signal number : 671
----- executor 2 executes write_coverage_signal cov->size 3155, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:44:28 for select break: 1
2023/03/29 03:44:28 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 30, 9970, 0
before receive testcase: 0 0
----- executor 2 signal number : 7593
----- executor 2 executes write_coverage_signal cov->size 6430, flag collect 0
----- executor 2 signal number : 394
----- executor 2 executes write_coverage_signal cov->size 16028, flag collect 0
----- executor 2 signal number : 3550
----- executor 2 executes write_coverage_signal cov->size 2932, flag collect 0
----- executor 2 signal number : 475
----- executor 2 executes write_coverage_signal cov->size 286, flag collect 0
----- executor 2 signal number : 135
----- executor 2 executes write_coverage_signal cov->size 2752, flag collect 0
----- executor 2 signal number : 340
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 487
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 8932, flag collect 0
time breakdown 0: 40, 9959, 0
before receive testcase: 0 0
----- executor 2 signal number : 1758
----- executor 2 executes write_coverage_signal cov->size 21411, flag collect 0
----- executor 2 signal number : 4395
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 9
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1651
executor 2 server cover_cnt 17 output_pos_value 24275
2023/03/29 03:44:28 for select break: 1
2023/03/29 03:44:28 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:28 wg wait finish
2023/03/29 03:44:28 ------ all executors finish execution
2023/03/29 03:44:28 exec time: 9993
2023/03/29 03:44:28 ----- PS len: 4
2023/03/29 03:44:28 [CLIENT] executor 3 has 6 replies
2023/03/29 03:44:28 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:28 [SERVER] executor 2 has 17 replies
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/29 03:44:28 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 1550 signal and 0 cover from userspace component
2023/03/29 03:44:28 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 1088 signal and 0 cover from userspace component
2023/03/29 03:44:28 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 671 signal and 0 cover from userspace component
2023/03/29 03:44:28 fuzzer receive 307 signal and 0 cover from executor 3
2023/03/29 03:44:28 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:44:28 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/29 03:44:28 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 7593 signal and 0 cover from userspace component
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 394 signal and 0 cover from userspace component
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 3550 signal and 0 cover from userspace component
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 475 signal and 0 cover from userspace component
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 135 signal and 0 cover from userspace component
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 340 signal and 0 cover from userspace component
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 487 signal and 0 cover from userspace component
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 1758 signal and 0 cover from userspace component
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 4395 signal and 0 cover from userspace component
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/03/29 03:44:28 ------- fuzzer executor 2 receive 1651 signal and 0 cover from userspace component
time breakdown 2: 24, 9976, 0
before receive testcase: 0 0
2023/03/29 03:44:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:28 ----- no new client coverage: false, true
2023/03/29 03:44:28 NetFailure, Node crash: false false
2023/03/29 03:44:28 mutate testcase with failures
2023/03/29 03:44:28 ----- mutateArg()
2023/03/29 03:44:28 ----- splice()
2023/03/29 03:44:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:28 prog length: 13
2023/03/29 03:44:28 HasCrashFail:false HasNetFail:false
03:44:28 ---executing program 0:
---
---
---
open(&(0x7f0000000100)='./file0\x00', 0x8840, 0x0)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
flock(r0, 0x1)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
flock(r1, 0x6)
dup2(r1, r1)
r2 = dup(r1)
dup2(r0, r2)
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f0000000180), 0x0, 0x0, 0x0)
sync()
chmod(&(0x7f0000000000)='./file0\x00', 0x1d1)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=@known='user.incfs.size\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1768
remove dir: /root/cephfs-client/dfs-0-538
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-539 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-539
receive_execute: 14, 18
receive_execute: 5, 19
receive_execute: 11, 19
receive_execute: 11, 19
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 619, pid 2634, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2634, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2634, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 2634, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 22
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2634, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 308, pid 2634, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 308, flag collect 0
----- executor 3 signal number : 4
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2634, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2634, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 2634, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 8
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 2634, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 132
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 676, pid 2634, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 676, flag collect 0
----- executor 3 signal number : 261
----- completed 11
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 397, pid 2634, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 397, flag collect 0
----- executor 3 signal number : 56
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 2634, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 29
----- completed 13
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 1, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 17, 53, 1
execute_one time: 1, 71
2023/03/29 03:44:33 for select break: 1
2023/03/29 03:44:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:44:33 for select break: 1
2023/03/29 03:44:33 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:44:33 for select break: 1
2023/03/29 03:44:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 30, 4968, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 21229, flag collect 0
----- executor 2 signal number : 1461
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1137
----- executor 2 executes write_coverage_signal cov->size 2748, flag collect 0
----- executor 2 signal number : 545
----- executor 2 executes write_coverage_signal cov->size 2327, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7285
----- executor 2 executes write_coverage_signal cov->size 2980, flag collect 0
----- executor 2 signal number : 273
----- executor 2 executes write_coverage_signal cov->size 10475, flag collect 0
----- executor 2 signal number : 2511
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 401
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 5550, flag collect 0
----- executor 2 signal number : 440
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 32, 4967, 0
before receive testcase: 0 0
----- executor 2 signal number : 537
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 17676, flag collect 0
----- executor 2 signal number : 3647
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 30, 4967, 0
before receive testcase: 0 0
----- executor 2 signal number : 1676
executor 2 server cover_cnt 15 output_pos_value 20217
2023/03/29 03:44:33 for select break: 1
2023/03/29 03:44:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:33 wg wait finish
2023/03/29 03:44:33 ------ all executors finish execution
2023/03/29 03:44:33 exec time: 4992
2023/03/29 03:44:33 ----- PS len: 4
2023/03/29 03:44:33 [CLIENT] executor 3 has 13 replies
2023/03/29 03:44:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:33 [SERVER] executor 2 has 15 replies
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 1461 signal and 0 cover from userspace component
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 1137 signal and 0 cover from userspace component
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 545 signal and 0 cover from userspace component
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 7285 signal and 0 cover from userspace component
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 273 signal and 0 cover from userspace component
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 2511 signal and 0 cover from userspace component
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 401 signal and 0 cover from userspace component
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 440 signal and 0 cover from userspace component
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 537 signal and 0 cover from userspace component
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:44:33 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:44:33 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 3647 signal and 0 cover from userspace component
2023/03/29 03:44:33 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/29 03:44:33 ------- fuzzer executor 2 receive 1676 signal and 0 cover from userspace component
2023/03/29 03:44:33 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/29 03:44:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:33 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/29 03:44:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:33 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/29 03:44:33 fuzzer receive 132 signal and 0 cover from executor 3
2023/03/29 03:44:33 fuzzer receive 261 signal and 0 cover from executor 3
2023/03/29 03:44:33 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/29 03:44:33 fuzzer receive 29 signal and 0 cover from executor 3
time breakdown 2: 24, 4973, 0
before receive testcase: 0 0
2023/03/29 03:44:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:33 ----- no new client coverage: false, true
2023/03/29 03:44:33 NetFailure, Node crash: false false
2023/03/29 03:44:33 mutate testcase with failures
2023/03/29 03:44:33 ----- insertCall()
2023/03/29 03:44:33 ----- generateCall 2458 open open
2023/03/29 03:44:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:33 prog length: 6
2023/03/29 03:44:33 HasCrashFail:false HasNetFail:false
03:44:33 ---executing program 0:
---
---
---
open(&(0x7f0000001140)='./file0\x00', 0x8840, 0x0)
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f0000000180), 0x0, 0x0, 0x0)
sync()
chmod(&(0x7f0000000000)='./file0\x00', 0x1d1)
open(&(0x7f0000000100)='./file0/file0\x00', 0x202400, 0x100)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=@known='user.incfs.size\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 816
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-539
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-540 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-540
receive_execute: 10, 11
receive_execute: 3, 12
receive_execute: 9, 12
receive_execute: 8, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 2640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 2640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 162
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 699, pid 2640, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 699, flag collect 0
----- executor 3 signal number : 318
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 397, pid 2640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 397, flag collect 0
----- executor 3 signal number : 86
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 2640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 29
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 7, 50, 0
execute_one time: 1, 57
2023/03/29 03:44:38 for select break: 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:44:38 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1545
----- executor 2 executes write_coverage_signal cov->size 24741, flag collect 0
----- executor 2 signal number : 1101
----- executor 2 executes write_coverage_signal cov->size 6752, flag collect 0
----- executor 2 signal number : 672
----- executor 2 executes write_coverage_signal cov->size 2387, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 20, 4981, 1
before receive testcase: 0 1
executor 1 write_server_output
----- executor 2 signal number : 7568
----- executor 2 executes write_coverage_signal cov->size 3450, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 363
----- executor 2 executes write_coverage_signal cov->size 9424, flag collect 0
----- executor 2 signal number : 2563
----- executor 2 executes write_coverage_signal cov->size 2932, flag collect 0
----- executor 2 signal number : 477
2023/03/29 03:44:38 for select break: 1
2023/03/29 03:44:38 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 3534, flag collect 0
----- executor 2 signal number : 364
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:44:38 for select break: 1
2023/03/29 03:44:38 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 4983, 0
before receive testcase: 0 0
----- executor 2 signal number : 1230
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 13335, flag collect 0
----- executor 2 signal number : 1868
----- executor 2 executes write_coverage_signal cov->size 20832, flag collect 0
----- executor 2 signal number : 4067
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 9
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1591
executor 2 server cover_cnt 17 output_pos_value 23728
2023/03/29 03:44:38 for select break: 1
2023/03/29 03:44:38 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:38 wg wait finish
2023/03/29 03:44:38 ------ all executors finish execution
2023/03/29 03:44:38 exec time: 4999
2023/03/29 03:44:38 ----- PS len: 4
2023/03/29 03:44:38 [CLIENT] executor 3 has 6 replies
2023/03/29 03:44:38 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:44:38 [SERVER] executor 2 has 17 replies
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 03:44:38 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 1545 signal and 0 cover from userspace component
2023/03/29 03:44:38 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 1101 signal and 0 cover from userspace component
2023/03/29 03:44:38 fuzzer receive 318 signal and 0 cover from executor 3
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 672 signal and 0 cover from userspace component
2023/03/29 03:44:38 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/29 03:44:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 7568 signal and 0 cover from userspace component
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 363 signal and 0 cover from userspace component
2023/03/29 03:44:38 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 2563 signal and 0 cover from userspace component
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 477 signal and 0 cover from userspace component
2023/03/29 03:44:38 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 364 signal and 0 cover from userspace component
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 1230 signal and 0 cover from userspace component
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
time breakdown 2: 15, 4987, 0
before receive testcase: 0 0
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 1868 signal and 0 cover from userspace component
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 4067 signal and 0 cover from userspace component
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/03/29 03:44:38 ------- fuzzer executor 2 receive 1591 signal and 0 cover from userspace component
2023/03/29 03:44:38 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:38 ----- no new client coverage: false, true
time breakdown 3: 21, 4979, 0
before receive testcase: 0 0
2023/03/29 03:44:38 NetFailure, Node crash: false false
2023/03/29 03:44:38 mutate testcase with failures
2023/03/29 03:44:38 ----- insertCall()
2023/03/29 03:44:38 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/29 03:44:38 ----- mutateArg()
2023/03/29 03:44:38 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:38 prog length: 6
2023/03/29 03:44:38 HasCrashFail:false HasNetFail:false
03:44:38 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001140)='./file0\x00', 0x8840, 0x0)
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f0000000180), 0x0, 0x0, 0x0)
fcntl$lock(r0, 0x26, &(0x7f0000000100)={0x1, 0x1, 0xffff, 0xffffffffffffffb1})
sync()
chmod(&(0x7f0000000140)='./file0\x00', 0x1c1)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=@known='user.incfs.size\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 992
remove dir: /root/cephfs-client/dfs-0-540
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-541 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-541
receive_execute: 11, 33
receive_execute: 5, 33
receive_execute: 8, 34
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 33
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 2645, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 2645, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 162
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2645, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 558, pid 2645, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 558, flag collect 0
----- executor 3 signal number : 307
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 397, pid 2645, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 397, flag collect 0
----- executor 3 signal number : 86
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 2645, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 29
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 1, 9
2023/03/29 03:44:43 for select break: 1
2023/03/29 03:44:43 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:44:43 for select break: 1
2023/03/29 03:44:43 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1550
----- executor 2 executes write_coverage_signal cov->size 22350, flag collect 0
2023/03/29 03:44:43 for select break: 1
2023/03/29 03:44:43 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 43, 4961, 0
before receive testcase: 0 0
time breakdown 1: 42, 4961, 0
before receive testcase: 0 0
----- executor 2 signal number : 1043
----- executor 2 executes write_coverage_signal cov->size 2752, flag collect 0
----- executor 2 signal number : 541
----- executor 2 executes write_coverage_signal cov->size 2025, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7557
time breakdown 3: 44, 4960, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 2980, flag collect 0
----- executor 2 signal number : 277
----- executor 2 executes write_coverage_signal cov->size 10666, flag collect 0
----- executor 2 signal number : 2673
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 398
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 3534, flag collect 0
----- executor 2 signal number : 364
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 8895, flag collect 0
----- executor 2 signal number : 1618
----- executor 2 executes write_coverage_signal cov->size 18921, flag collect 0
----- executor 2 signal number : 4068
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 9
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1596
executor 2 server cover_cnt 17 output_pos_value 23266
2023/03/29 03:44:43 for select break: 1
2023/03/29 03:44:43 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:43 wg wait finish
2023/03/29 03:44:43 ------ all executors finish execution
2023/03/29 03:44:43 exec time: 5003
2023/03/29 03:44:43 ----- PS len: 4
2023/03/29 03:44:43 [CLIENT] executor 3 has 6 replies
2023/03/29 03:44:43 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:44:43 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:43 [SERVER] executor 2 has 17 replies
2023/03/29 03:44:43 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/29 03:44:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
time breakdown 2: 38, 4970, 0
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 1550 signal and 0 cover from userspace component
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 1043 signal and 0 cover from userspace component
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 541 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 7557 signal and 0 cover from userspace component
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 277 signal and 0 cover from userspace component
2023/03/29 03:44:43 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:43 fuzzer receive 307 signal and 0 cover from executor 3
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 2673 signal and 0 cover from userspace component
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 398 signal and 0 cover from userspace component
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 364 signal and 0 cover from userspace component
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:44:43 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/29 03:44:43 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 1618 signal and 0 cover from userspace component
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 4068 signal and 0 cover from userspace component
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/03/29 03:44:43 ------- fuzzer executor 2 receive 1596 signal and 0 cover from userspace component
2023/03/29 03:44:43 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:43 ----- no new client coverage: false, true
2023/03/29 03:44:43 NetFailure, Node crash: false false
2023/03/29 03:44:43 mutate testcase with failures
2023/03/29 03:44:43 ----- mutateArg()
2023/03/29 03:44:43 ----- mutateArg()
2023/03/29 03:44:43 ----- insertCall()
2023/03/29 03:44:43 ----- generateCall 3766 sync sync
2023/03/29 03:44:43 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:43 prog length: 6
2023/03/29 03:44:43 HasCrashFail:false HasNetFail:false
03:44:43 ---executing program 0:
---
---
---
open(&(0x7f00000000c0)='./file0\x00', 0x8840, 0x0)
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f0000000180), 0x0, 0x0, 0x0)
sync()
chmod(&(0x7f0000000000)='./file0\x00', 0x1d1)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000100)=@known='user.incfs.metadata\x00')
sync()
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 704
----- executor 0 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-541
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 6
executor 3 create dir /root/cephfs-client/dfs-0-542 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-542
receive_execute: 5, 25
receive_execute: 13, 26
receive_execute: 14, 25
receive_execute: 14, 25
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
----- executor 3 write_call_output, size 619, pid 2650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 2650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 162
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 558, pid 2650, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 558, flag collect 0
----- executor 3 signal number : 307
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 397, pid 2650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 397, flag collect 0
----- executor 3 signal number : 86
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 537, pid 2650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 537, flag collect 0
----- executor 3 signal number : 34
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 169, pid 2650, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 169, flag collect 0
----- executor 3 signal number : 6
----- completed 6
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 28
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4954, 79, 0
execute_one time: 1, 5033
[ 1099.591853] ceph: get acl 100000006a0.fffffffffffffffe failed, err=-512
2023/03/29 03:44:48 for select break: 1
2023/03/29 03:44:48 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 39, 5039, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1549
----- executor 2 executes write_coverage_signal cov->size 22849, flag collect 0
----- executor 2 signal number : 1054
----- executor 2 executes write_coverage_signal cov->size 4000, flag collect 0
----- executor 2 signal number : 658
----- executor 2 executes write_coverage_signal cov->size 2022, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:44:48 for select break: 1
2023/03/29 03:44:48 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 7970
----- executor 2 executes write_coverage_signal cov->size 3450, flag collect 0
----- executor 2 signal number : 369
2023/03/29 03:44:48 for select break: 1
2023/03/29 03:44:48 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 8252, flag collect 0
time breakdown 0: 39, 5040, 2
before receive testcase: 0 0
----- executor 2 signal number : 2472
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 411
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 4214, flag collect 0
----- executor 2 signal number : 381
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 39, 5040, 0
before receive testcase: 0 0
----- executor 2 signal number : 999
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 8918, flag collect 0
----- executor 2 signal number : 1653
----- executor 2 executes write_coverage_signal cov->size 20524, flag collect 0
----- executor 2 signal number : 4502
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 11
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1617
executor 2 server cover_cnt 17 output_pos_value 23956
2023/03/29 03:44:48 for select break: 1
2023/03/29 03:44:48 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:48 wg wait finish
2023/03/29 03:44:48 ------ all executors finish execution
2023/03/29 03:44:48 exec time: 5072
2023/03/29 03:44:48 ----- PS len: 4
2023/03/29 03:44:48 [CLIENT] executor 3 has 6 replies
2023/03/29 03:44:48 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:48 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:48 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:44:48 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/29 03:44:48 fuzzer receive 307 signal and 0 cover from executor 3
2023/03/29 03:44:48 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/29 03:44:48 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/29 03:44:48 [SERVER] executor 2 has 17 replies
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 1549 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 1054 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 658 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 7970 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 369 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 2472 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 411 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 381 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 999 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:44:48 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 1653 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 4502 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/03/29 03:44:48 ------- fuzzer executor 2 receive 1617 signal and 0 cover from userspace component
time breakdown 2: 30, 5047, 0
before receive testcase: 0 0
2023/03/29 03:44:48 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:48 ----- no new client coverage: false, true
2023/03/29 03:44:48 NetFailure, Node crash: false false
2023/03/29 03:44:48 mutate testcase with failures
2023/03/29 03:44:48 ----- insertCall()
2023/03/29 03:44:48 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/29 03:44:48 ----- insertCall()
2023/03/29 03:44:48 ----- generateCall 121 chmod chmod
2023/03/29 03:44:48 ----- insertCall()
2023/03/29 03:44:48 ----- generateCall 2809 rename rename
2023/03/29 03:44:48 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:48 prog length: 8
2023/03/29 03:44:48 HasCrashFail:false HasNetFail:false
03:44:48 ---executing program 0:
---
---
---
open(&(0x7f0000001140)='./file0\x00', 0x8840, 0x0)
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f0000000180), 0x0, 0x0, 0x0)
sync()
chmod(&(0x7f0000000000)='./file0\x00', 0x1d1)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=@known='user.incfs.size\x00')
rename(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file0\x00')
chmod(&(0x7f0000000200)='./file0\x00', 0x58)
lsetxattr$security_capability(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f00000001c0)=@v3={0x3000000, [{}, {0x7f, 0x2}], 0xee01}, 0x18, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1416
remove dir: /root/cephfs-client/dfs-0-542
remove dir time 28
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-543 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-543
receive_execute: 12, 29
receive_execute: 10, 30
receive_execute: 3, 30
receive_execute: 8, 30
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2655, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 2655, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 162
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 558, pid 2655, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 558, flag collect 0
----- executor 3 signal number : 307
----- completed 3
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 397, pid 2655, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 397, flag collect 0
----- executor 3 signal number : 86
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 2655, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 29
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2655, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 521, pid 2655, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 521, flag collect 0
----- executor 3 signal number : 35
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 453, pid 2655, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 453, flag collect 0
----- executor 3 signal number : 14
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 26, 53, 0
execute_one time: 2, 79
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
time breakdown 3: 41, 4875, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1553
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1150
----- executor 2 executes write_coverage_signal cov->size 2752, flag collect 0
----- executor 2 signal number : 543
----- executor 2 executes write_coverage_signal cov->size 2640, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7451
----- executor 2 executes write_coverage_signal cov->size 2980, flag collect 0
----- executor 2 signal number : 276
----- executor 2 executes write_coverage_signal cov->size 10902, flag collect 0
----- executor 2 signal number : 2538
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 396
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 1896, flag collect 0
----- executor 2 signal number : 319
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 538
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 8945, flag collect 0
----- executor 2 signal number : 1820
----- executor 2 executes write_coverage_signal cov->size 23537, flag collect 0
----- executor 2 signal number : 4343
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 38, 4876, 0
before receive testcase: 0 0
time breakdown 1: 40, 4876, 0
before receive testcase: 0 0
----- executor 2 signal number : 1631
executor 2 server cover_cnt 17 output_pos_value 22876
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 4913
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 8 replies
2023/03/29 03:44:53 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 307 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 17 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1553 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1150 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 543 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 7451 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 276 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 2538 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 396 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 319 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 538 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1820 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 4343 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1631 signal and 0 cover from userspace component
time breakdown 2: 33, 4883, 0
before receive testcase: 0 0
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 3
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
open(&(0x7f00000001c0)='./file0\x00', 0x8c0, 0x0)
llistxattr(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
open$dir(&(0x7f0000000000)='./file0\x00', 0x311000, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-543
remove dir time 14
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-544 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-544
receive_execute: 13, 17
receive_execute: 4, 18
receive_execute: 11, 18
receive_execute: 9, 18
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 2660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 148, pid 2660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 148, flag collect 0
----- executor 3 signal number : 68
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 30, 5, 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11523, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 29, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 4902
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 527
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 4 output_pos_value 6780
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 27, 7, 0
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 26
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 3 replies
2023/03/29 03:44:53 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 68 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
time breakdown 2: 22, 8, 0
2023/03/29 03:44:53 [SERVER] executor 2 has 4 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 4902 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 4
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0/file0\x00', 0x20c42, 0x22)
r1 = dup2(r0, r0)
fdatasync(r1)
fcntl$dupfd(r0, 0x0, r1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 488
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
remove dir: /root/cephfs-client/dfs-0-544
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-545 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-545
receive_execute: 7, 13
receive_execute: 5, 13
receive_execute: 6, 14
receive_execute: 6, 13
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
----- executor 3 write_call_output, size 85, pid 2663, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 0, pid 2663, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2663, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2663, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 18, 4, 0
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 4, 0
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 18
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 4 replies
2023/03/29 03:44:53 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 0 replies
time breakdown 1: 20, 4, 0
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- insertCall()
before receive testcase: 0 0
2023/03/29 03:44:53 ----- generateCall 2374 mkdirat mkdirat
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2723 pread64 pread64
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 251 ftruncate ftruncate
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 248 fstat fstat
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 3761 stat stat
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- mutateArg()
time breakdown 3: 20, 3, 0
before receive testcase: 0 1
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 11
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
pread64(0xffffffffffffffff, &(0x7f0000000180)=""/41, 0x29, 0x6)
ftruncate(0xffffffffffffffff, 0x8001)
r0 = openat(0xffffffffffffffff, &(0x7f0000000340)='./file0\x00', 0x1696c2, 0x0)
r1 = fcntl$dupfd(r0, 0x406, 0xffffffffffffffff)
r2 = fcntl$dupfd(r1, 0x0, r0)
fstat(r2, &(0x7f0000000240))
truncate(&(0x7f0000000200)='./file0\x00', 0x518)
setxattr$security_selinux(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)='system_u:object_r:hald_var_run_t:s0\x00', 0x24, 0x0)
mkdirat(r0, &(0x7f0000000140)='./file0\x00', 0x88)
stat(&(0x7f00000001c0)='./file0\x00', &(0x7f00000002c0))
truncate(&(0x7f0000000100)='./file0\x00', 0x9)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1528
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-545
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 2
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-546 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-546
receive_execute: 2, 4
receive_execute: 1, 5
receive_execute: 2, 4
receive_execute: 3, 5
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2666, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2666, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2666, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2666, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2666, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2666, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2666, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2666, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2666, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2666, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2666, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 0, 2
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6, 7, 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 2: 6, 7, 0
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 12
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 0 replies
time breakdown 0: 6, 8, 0
2023/03/29 03:44:53 [CLIENT] executor 3 has 11 replies
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2458 open open
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2458 open open
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 6
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x52883, 0x0)
lchown(&(0x7f0000000280)='./file1\x00', 0x0, 0x0)
open(&(0x7f0000000080)='./file1\x00', 0x101000, 0x8)
unlink(&(0x7f0000000380)='./file1\x00')
write$binfmt_script(r0, &(0x7f0000000100)=ANY=[@ANYBLOB="05df36213c3d26396ed63f"], 0xb)
open(&(0x7f0000000040)='./file1\x00', 0x40002, 0x26)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 8, 6, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 808
remove dir: /root/cephfs-client/dfs-0-546
remove dir time 3
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-547 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-547
receive_execute: 2, 5
receive_execute: 1, 5
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 2, 6
receive_execute: 1, 6
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 431, pid 2670, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 431, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2670, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2670, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2670, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2670, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2670, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 8, 5, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1953, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 4164, flag collect 0
----- executor 2 signal number : 2159
----- executor 2 executes write_coverage_signal cov->size 6045, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 324
executor 2 server cover_cnt 4 output_pos_value 3573
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 7, 7, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 14
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 6 replies
2023/03/29 03:44:53 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 4 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 2159 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 324 signal and 0 cover from userspace component
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 1
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x108840, 0x8)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 168
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-547
time breakdown 1: 7, 6, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 6, 8, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 5
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-548 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-548
receive_execute: 3, 6
receive_execute: 4, 7
receive_execute: 3, 7
receive_execute: 2, 6
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 627, pid 2673, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 627, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 11, 2, 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4297, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11546, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4909
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 6140, flag collect 0
time breakdown 1: 10, 4, 0
before receive testcase: 0 0
----- executor 2 signal number : 527
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 8, 4, 0
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 6787
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 12
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 1 replies
2023/03/29 03:44:53 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 2 has 4 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 4909 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
time breakdown 2: 9, 5, 0
before receive testcase: 0 0
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 4
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
open(&(0x7f0000000080)='./file0\x00', 0x519600, 0x0)
setxattr$security_evm(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)=@md5={0x1, "e257d8fac57f49543c63f527b71ab087"}, 0x11, 0x0)
open$dir(&(0x7f0000000780)='./file0\x00', 0xa043, 0x0)
llistxattr(&(0x7f0000000040)='./file0\x00', 0x0, 0x4)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 736
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-548
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-549 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-549
receive_execute: 2, 15
receive_execute: 2, 15
receive_execute: 3, 15
receive_execute: 3, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2675, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2675, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 661, pid 2675, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 661, flag collect 0
----- executor 3 signal number : 473
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 148, pid 2675, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 148, flag collect 0
----- executor 3 signal number : 48
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11901, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 4, 0
----- executor 2 signal number : 5020
----- executor 2 executes write_coverage_signal cov->size 337, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 549
executor 2 server cover_cnt 5 output_pos_value 7164
executor 0 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 17, 6, 0
before receive testcase: 0 0
time breakdown 3: 17, 4, 0
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 22
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 4 replies
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 5 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 5020 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 549 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 473 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2458 open open
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 3967 truncate truncate
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 3970 unlink unlink
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 232 fsetxattr$security_capability fsetxattr$security_capability
time breakdown 0: 18, 7, 0
before receive testcase: 0 0
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 12
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
fsetxattr$security_capability(0xffffffffffffffff, &(0x7f0000001500), &(0x7f0000001540)=@v1={0x1000000, [{0x3, 0x2}]}, 0xc, 0x0)
setxattr$security_evm(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000180)=ANY=[@ANYBLOB="0281affcb0282c0025ffc67ef8d21eeba1c801"], 0x13, 0x1)
lsetxattr$security_ima(&(0x7f0000001640)='./file1\x00', &(0x7f0000001680), &(0x7f00000016c0), 0x1, 0x6)
read(0xffffffffffffffff, &(0x7f00000000c0)=""/135, 0x87)
open(&(0x7f0000000000)='./file0\x00', 0x139ec2, 0x0)
setxattr$incfs_metadata(&(0x7f0000001280)='./file0\x00', &(0x7f00000012c0), &(0x7f0000001300)="d30cfb5ecd12a5445178084590c4d71cfe1741838da2d248ff02bf3425a876d2905dc5eb2ac62eb104249c97dee16bff0fda8667b54a7099092e562d4a89a448a8d5abed0eb9466419be81840f9226a94ff7617ccd5e77e8b2fa210df736b28304570f4b8f8d", 0x66, 0x0)
setxattr$incfs_size(&(0x7f0000001580)='./file0/file0\x00', &(0x7f00000015c0), &(0x7f0000001600)=0x10001, 0x8, 0x1)
lsetxattr$trusted_overlay_upper(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=ANY=[@ANYBLOB=""/4097], 0x1001, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f0000001380)='./file0/file0\x00', &(0x7f00000013c0), &(0x7f0000001400), 0x2, 0x1)
unlink(&(0x7f00000014c0)='./file0/file0\x00')
open(&(0x7f0000001440)='./file0\x00', 0x30001, 0x20)
truncate(&(0x7f0000001480)='./file0/file0\x00', 0x100000000)
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6792
remove dir: /root/cephfs-client/dfs-0-549
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-550 successfully
receive_execute: 6, 18
current dir: executor 3: /root/cephfs-client/dfs-0-550
receive_execute: 8, 18
receive_execute: 6, 19
receive_execute: 5, 18
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 0, pid 2678, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2678, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2678, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2678, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 660, pid 2678, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 660, flag collect 0
----- executor 3 signal number : 495
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 737, pid 2678, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 737, flag collect 0
----- executor 3 signal number : 183
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2678, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 432, pid 2678, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 432, flag collect 0
----- executor 3 signal number : 6
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2678, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2678, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2678, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2678, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 2, 0
execute_one time: 1, 6
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16440, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1309
----- executor 2 executes write_coverage_signal cov->size 845, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 26, 8, 0
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 23, 9, 0
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 25, 9, 0
----- executor 2 signal number : 6648
----- executor 2 executes write_coverage_signal cov->size 346, flag collect 0
----- executor 2 signal number : 236
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 723
executor 2 server cover_cnt 5 output_pos_value 8997
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 24, 12, 0
before receive testcase: 0 0
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 30
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 12 replies
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 495 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 183 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 5 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1309 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 6648 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 236 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 723 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 8
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file1\x00', 0x48840, 0x0)
r1 = dup(r0)
getdents(r1, &(0x7f0000000380)=""/4096, 0x1000)
chmod(&(0x7f0000000100)='./file1\x00', 0x168)
truncate(&(0x7f0000000340)='./file1\x00', 0x0)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file1\x00', &(0x7f0000000080), &(0x7f00000000c0)={'U-', 0x1}, 0x16, 0x3)
fsync(r0)
fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1048
remove dir: /root/cephfs-client/dfs-0-550
remove dir time 10
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-551 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-551
receive_execute: 7, 13
receive_execute: 2, 14
receive_execute: 5, 14
receive_execute: 2, 13
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 2683, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2683, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2683, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2683, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 111
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 280, pid 2683, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 280, flag collect 0
----- executor 3 signal number : 82
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 213, pid 2683, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 213, flag collect 0
----- executor 3 signal number : 58
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 308, pid 2683, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 308, flag collect 0
----- executor 3 signal number : 178
----- completed 7
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2683, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 0, 0
execute_one time: 0, 8
cover_reset in execute_call
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 10, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10283, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 13456, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 964
----- executor 2 executes write_coverage_signal cov->size 356, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 22615, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 11, 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 6498
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 11575, flag collect 0
----- executor 2 signal number : 2595
----- executor 2 executes write_coverage_signal cov->size 19992, flag collect 0
----- executor 2 signal number : 1751
executor 2 server cover_cnt 8 output_pos_value 13300
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 27
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 8 replies
2023/03/29 03:44:53 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 58 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
time breakdown 2: 16, 13, 0
2023/03/29 03:44:53 [SERVER] executor 2 has 8 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 964 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 6498 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 2595 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1751 signal and 0 cover from userspace component
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 248 fstat fstat
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 7
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x200000, 0x0)
r1 = openat(r0, &(0x7f0000000200)='./file0\x00', 0x0, 0x0)
fstat(r1, &(0x7f0000000040))
fsetxattr$security_evm(r1, &(0x7f00000000c0), 0x0, 0x0, 0x0)
r2 = fcntl$dupfd(r0, 0x406, r1)
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000000100)={0x0, <r3=>0x0})
fcntl$lock(r2, 0x24, &(0x7f0000000140)={0x0, 0x4, 0x6, 0x20000000008, r3})
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1280
remove dir: /root/cephfs-client/dfs-0-551
remove dir time 15
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-552 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-552
receive_execute: 7, 17
receive_execute: 4, 17
receive_execute: 6, 16
receive_execute: 4, 17
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2686, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2686, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2686, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2686, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2686, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2686, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2686, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
time breakdown 3: 24, 2, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:44:53 for select break: 1
time breakdown 2: 21, 3, 0
before receive testcase: 0 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 23, 3, 0
before receive testcase: 0 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 22
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 7 replies
2023/03/29 03:44:53 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
time breakdown 1: 21, 6, 0
2023/03/29 03:44:53 [SERVER] executor 2 has 0 replies
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2814 rmdir rmdir
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 235 fsetxattr$security_selinux fsetxattr$security_selinux
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2341 lchown lchown
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2458 open open
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 170 dup dup
2023/03/29 03:44:53 ----- mutateArg()
before receive testcase: 0 0
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 14
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
r1 = dup2(r0, r0)
rmdir(&(0x7f0000000000)='./file0\x00')
r2 = dup2(r1, r1)
fsetxattr$security_selinux(r2, &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:xen_device_t:s0\x00', 0x22, 0x5)
fstat(r2, &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
lchown(&(0x7f00000000c0)='./file0\x00', 0xee01, r3)
fsetxattr$trusted_overlay_origin(r1, &(0x7f0000000200), &(0x7f0000000240), 0x2, 0x0)
r4 = open(&(0x7f0000000180)='./file0\x00', 0x400100, 0x12)
lsetxattr$trusted_overlay_origin(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), 0x0, 0x0, 0x0)
dup(r4)
fcntl$dupfd(r0, 0x0, r1)
r5 = dup(0xffffffffffffffff)
dup(r5)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2032
remove dir: /root/cephfs-client/dfs-0-552
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-553 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-553
receive_execute: 4, 3
receive_execute: 4, 3
receive_execute: 4, 3
receive_execute: 0, 4
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 118, pid 2689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 3 signal number : 30
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2689, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 2689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 140
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 139, pid 2689, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 139, flag collect 0
----- executor 3 signal number : 64
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2689, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 242, pid 2689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 242, flag collect 0
----- executor 3 signal number : 22
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 2, 0
execute_one time: 1, 6
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 7, 9, 0
executor 1 write_server_output
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 4294, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11578, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4900
----- executor 2 executes write_coverage_signal cov->size 344, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
----- executor 2 signal number : 531
executor 2 server cover_cnt 5 output_pos_value 7026
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 7, 11, 0
2023/03/29 03:44:53 for select break: 1
before receive testcase: 0 0
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 14
2023/03/29 03:44:53 ----- PS len: 4
time breakdown 2: 7, 11, 0
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 5 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:44:53 [CLIENT] executor 3 has 14 replies
2023/03/29 03:44:53 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 4900 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 531 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
time breakdown 1: 4, 10, 0
before receive testcase: 0 1
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2344 linkat linkat
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 4
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
fcntl$lock(r0, 0x26, &(0x7f0000000100))
fsync(r0)
linkat(r0, &(0x7f0000000000)='./file0\x00', r0, &(0x7f0000000040)='./file0\x00', 0x1000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 808
remove dir: /root/cephfs-client/dfs-0-553
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-554 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-554
receive_execute: 6, 12
receive_execute: 3, 13
receive_execute: 4, 13
receive_execute: 3, 13
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 2692, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 2692, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 122
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 202, pid 2692, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 202, flag collect 0
----- executor 3 signal number : 88
----- completed 3
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2692, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 1, 0
execute_one time: 1, 13
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 9370, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 9850, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 930
----- executor 2 executes write_coverage_signal cov->size 451, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 21290, flag collect 0
time breakdown 3: 18, 15, 0
before receive testcase: 0 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 16, 0
----- executor 2 signal number : 6879
----- executor 2 executes write_coverage_signal cov->size 2450, flag collect 0
----- executor 2 signal number : 333
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 10314, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 2530
----- executor 2 executes write_coverage_signal cov->size 11185, flag collect 0
time breakdown 0: 16, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 1033
before receive testcase: 0 0
executor 2 server cover_cnt 8 output_pos_value 13191
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 32
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 4 replies
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 8 replies
2023/03/29 03:44:53 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
time breakdown 2: 16, 19, 0
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 930 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 6879 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 333 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 2530 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1033 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:44:53 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 20
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000001c0)='./file0\x00', 0x121040, 0xd1)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440)={0x0, 0x1, 0x0, 0x0, 0xffffffffffffffff})
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$getown(r0, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0x4c)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x1, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x26, &(0x7f0000000200)={0x2, 0x3, 0x9164, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x26, &(0x7f0000000480)={0x0, 0x2, 0x3fd})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0)={0x0, <r5=>0x0})
fcntl$lock(r3, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x10000000, 0xc9, r5})
r6 = open(&(0x7f0000000000)='./file0\x00', 0xa82, 0x0)
dup2(r6, r3)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3888
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-554
remove dir time 23
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-555 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-555
receive_execute: 4, 25
receive_execute: 8, 25
receive_execute: 5, 25
receive_execute: 6, 25
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2695, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 2695, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 2695, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 12
----- completed 17
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 592, pid 2695, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 592, flag collect 0
----- executor 3 signal number : 17
----- completed 18
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 353, pid 2695, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 353, flag collect 0
----- executor 3 signal number : 26
----- completed 19
----- executor 3 write_call_output, size 315, pid 2695, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 315, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 71, 5, 1
execute_one time: 1, 77
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 33, 79, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1436
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1099
----- executor 2 executes write_coverage_signal cov->size 1696, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 31, 81, 0
before receive testcase: 0 0
time breakdown 1: 31, 80, 0
before receive testcase: 0 0
----- executor 2 signal number : 7488
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 0
----- executor 2 signal number : 259
----- executor 2 executes write_coverage_signal cov->size 366, flag collect 0
----- executor 2 signal number : 105
----- executor 2 executes write_coverage_signal cov->size 2787, flag collect 0
----- executor 2 signal number : 355
----- executor 2 executes write_coverage_signal cov->size 30964, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7078
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1851
executor 2 server cover_cnt 11 output_pos_value 20221
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 29, 88, 0
before receive testcase: 0 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 113
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [CLIENT] executor 3 has 20 replies
2023/03/29 03:44:53 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 2 has 11 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1436 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1099 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 7488 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 259 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 105 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 355 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 7078 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1851 signal and 0 cover from userspace component
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2458 open open
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 4
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
open(&(0x7f0000000000)='./file0\x00', 0x139ec2, 0x0)
open(&(0x7f0000000040)='./file0\x00', 0x8000, 0x40)
stat(&(0x7f0000000140)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lchown(&(0x7f0000000100)='./file0\x00', r0, 0xffffffffffffffff)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 584
remove dir: /root/cephfs-client/dfs-0-555
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-556 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-556
receive_execute: 16, 8
receive_execute: 7, 8
receive_execute: 14, 8
receive_execute: 14, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 622, pid 2699, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 2699, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 134
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2699, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 19
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 494, pid 2699, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 494, flag collect 0
----- executor 3 signal number : 125
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 1, 4
time breakdown 3: 24, 6, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 9873, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1289
----- executor 2 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 25824, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 22, 7, 0
time breakdown 1: 23, 7, 0
----- executor 2 signal number : 6295
----- executor 2 executes write_coverage_signal cov->size 977, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 259
----- executor 2 executes write_coverage_signal cov->size 12272, flag collect 0
----- executor 2 signal number : 575
executor 2 server cover_cnt 5 output_pos_value 8501
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 18
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 4 replies
2023/03/29 03:44:53 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 125 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 5 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1289 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 6295 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 259 signal and 0 cover from userspace component
time breakdown 2: 15, 9, 0
before receive testcase: 0 0
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 575 signal and 0 cover from userspace component
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 7
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
unlink(&(0x7f0000000140)='./file0\x00')
chown(&(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$security_evm(&(0x7f0000000180)='./file0\x00', &(0x7f0000000240), &(0x7f0000000200)=@md5={0x1, "23b4b8773b277789fc300107c5998a32"}, 0x11, 0x1)
setxattr$security_smack_transmute(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x4, 0x2)
setxattr$trusted_overlay_origin(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0), 0x2, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1368
remove dir: /root/cephfs-client/dfs-0-556
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-557 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-557
receive_execute: 6, 9
receive_execute: 2, 10
receive_execute: 3, 10
receive_execute: 4, 9
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one time: 0, 0
----- executor 3 write_call_output, size 619, pid 2701, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2701, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 495, pid 2701, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 495, flag collect 0
----- executor 3 signal number : 25
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2701, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2701, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2701, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2701, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 18, 6, 0
execute_one time: 0, 25
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16364, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 26277, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 13, 28, 0
before receive testcase: 0 0
time breakdown 3: 15, 27, 0
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1028
----- executor 2 executes write_coverage_signal cov->size 886, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7573
----- executor 2 executes write_coverage_signal cov->size 3830, flag collect 0
----- executor 2 signal number : 364
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 23008, flag collect 0
time breakdown 1: 13, 29, 0
before receive testcase: 0 0
----- executor 2 signal number : 4057
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1993
executor 2 server cover_cnt 8 output_pos_value 16504
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 54
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 7 replies
2023/03/29 03:44:53 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 2 has 8 replies
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1028 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 7573 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 364 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 4057 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1993 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 20
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000000780))
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f00000004c0)='./file1\x00', 0x0)
setxattr$security_ima(&(0x7f00000005c0)='./file1/file0\x00', &(0x7f0000000600), &(0x7f0000000640)=ANY=[], 0xb, 0x2)
chmod(&(0x7f00000003c0)='.\x00', 0x0)
lsetxattr$security_evm(&(0x7f0000000140)='./file0\x00', &(0x7f0000000ac0), &(0x7f0000000740)=@ng={0x4, 0x1, "b188dd431478641e2e"}, 0xb, 0x1)
setxattr$security_selinux(&(0x7f00000002c0)='./file1/file0\x00', &(0x7f0000000a80), &(0x7f00000007c0)='system_u:object_r:lvm_control_t:s0\x00', 0x23, 0x0)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
open(&(0x7f0000000480)='./file0\x00', 0x0, 0x10c)
setxattr$security_evm(&(0x7f0000000400)='.\x00', &(0x7f0000000440), &(0x7f0000000200)=ANY=[@ANYBLOB="041505e6b31be89300d2effa46d956f050d5107307fb76fddf"], 0x12, 0x2)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000680)='./file1/file0\x00', &(0x7f00000006c0), &(0x7f0000000700)='./file1/../file0\x00', 0x11, 0x3)
setxattr$trusted_overlay_origin(&(0x7f0000000500)='./file1/../file0\x00', &(0x7f0000000540), &(0x7f0000000580), 0x2, 0x0)
rename(&(0x7f0000000340)='./file0\x00', &(0x7f0000000a40)='./file1/../file0\x00')
unlink(&(0x7f0000000800)='./file0\x00')
rename(&(0x7f0000000240)='./file1\x00', &(0x7f00000001c0)='./file1/../file0\x00')
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', &(0x7f0000000840), &(0x7f0000001500)="", 0x1001, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000880)='./file0\x00', &(0x7f00000008c0)='security.SMACK64IPIN\x00', &(0x7f0000000900)={'^'}, 0x2, 0x1)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file1/../file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x1)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000940)='./file0\x00', &(0x7f0000000980), &(0x7f00000009c0), 0x2, 0x1)
lsetxattr$security_ima(&(0x7f0000000a00)='./file1/../file0\x00', &(0x7f0000000300), &(0x7f0000000380)=@md5={0x1, "e9e03c5eb521232cba82108cc8ffa4b8"}, 0x11, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 8608
remove dir: /root/cephfs-client/dfs-0-557
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 12, 44, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 20
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-558 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-558
receive_execute: 21, 21
receive_execute: 3, 22
receive_execute: 19, 21
receive_execute: 20, 21
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 0, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 497, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 497, flag collect 0
----- executor 3 signal number : 7
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 32
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 331, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 331, flag collect 0
----- executor 3 signal number : 90
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 296, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 296, flag collect 0
----- executor 3 signal number : 124
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 836, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 836, flag collect 0
----- executor 3 signal number : 70
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 431, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 431, flag collect 0
----- executor 3 signal number : 104
----- completed 9
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 492, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 492, flag collect 0
----- executor 3 signal number : 62
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 653, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 653, flag collect 0
----- executor 3 signal number : 17
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 235, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 235, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 694, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 694, flag collect 0
----- executor 3 signal number : 1
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 495, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 495, flag collect 0
----- executor 3 signal number : 11
----- completed 16
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 466, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 466, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 468, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 468, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2704, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 16, 68, 0
execute_one time: 1, 84
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 42, 87, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1416
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1032
----- executor 2 executes write_coverage_signal cov->size 2055, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7017
----- executor 2 executes write_coverage_signal cov->size 6968, flag collect 0
----- executor 2 signal number : 464
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 41, 87, 0
before receive testcase: 0 0
----- executor 2 signal number : 5464
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 844
executor 2 server cover_cnt 8 output_pos_value 16335
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 115
2023/03/29 03:44:53 ----- PS len: 4
time breakdown 2: 25, 93, 0
2023/03/29 03:44:53 [CLIENT] executor 3 has 20 replies
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 8 replies
2023/03/29 03:44:53 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1416 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1032 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 124 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 70 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 7017 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 464 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 5464 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 844 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 0: 41, 88, 0
before receive testcase: 0 0
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2462 openat openat
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2458 open open
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 8
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$smack_xattr_label(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='security.SMACK64\x00', &(0x7f0000000340)={'system.posix_acl_access\x00'}, 0x19, 0x3)
stat(&(0x7f0000000380)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
setxattr$system_posix_acl(&(0x7f00000001c0)='./file0\x00', &(0x7f0000001340)='system.posix_acl_access\x00', &(0x7f0000000280)={{}, {0x1, 0x1}, [{0x2, 0x3, r1}, {0x2, 0x2, r1}, {0x2, 0x1, r2}], {0x4, 0x8cb351b0fb1577ae}, [], {}, {0x20, 0x6}}, 0xa, 0x0)
open(&(0x7f0000000180)='./file0/file0\x00', 0x100, 0x40)
chmod(&(0x7f0000000140)='./file0\x00', 0x0)
openat(r0, &(0x7f0000000000)='./file0\x00', 0x18080, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2400
remove dir: /root/cephfs-client/dfs-0-558
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-559 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-559
receive_execute: 11, 18
receive_execute: 12, 18
receive_execute: 5, 18
receive_execute: 11, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2710, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2710, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 148
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 547, pid 2710, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 547, flag collect 0
----- executor 3 signal number : 105
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2710, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2710, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2710, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 272, pid 2710, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 272, flag collect 0
----- executor 3 signal number : 101
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2710, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 4, 2, 0
execute_one time: 1, 6
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 30, 8, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13735, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1308
----- executor 2 executes write_coverage_signal cov->size 449, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 29, 9, 0
2023/03/29 03:44:53 for select break: 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 6577
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 526
executor 2 server cover_cnt 4 output_pos_value 8491
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 29
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 8 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 4 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1308 signal and 0 cover from userspace component
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 6577 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 148 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 105 signal and 0 cover from executor 3
time breakdown 2: 23, 11, 0
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 526 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 3764 symlink symlink
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 3764 symlink symlink
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 3765 symlinkat symlinkat
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2753 read read
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 12
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x1696c2, 0x0)
symlink(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)='./file0\x00')
fstat(r0, &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000280)='./file0\x00', &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
r3 = fcntl$dupfd(r0, 0x406, 0xffffffffffffffff)
read(r3, &(0x7f0000000500)=""/123, 0x7b)
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)='system.posix_acl_default\x00', &(0x7f0000000580)=ANY=[@ANYBLOB="02000000010001000000000002000500", @ANYRES32=0xee00, @ANYBLOB="02000200", @ANYRES32=r1, @ANYBLOB="0200e014197b023dc2b2090c00e34ec728365f9f749f14d3fa0ef7af05d5d7adaf170b1340113f6c16133214e401984b18153332143a7cfe20eabd41", @ANYRES32=0xee01, @ANYBLOB="02000500", @ANYRES32=r2, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="040004000000000008000400", @ANYRES32=r4, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000400", @ANYRES32=0xee00, @ANYBLOB="10000300000000002000040000000000"], 0x64, 0x0)
r5 = dup(r0)
symlinkat(&(0x7f00000002c0)='./file0\x00', r5, &(0x7f0000000300)='./file0\x00')
open$dir(&(0x7f0000000040)='./file0\x00', 0x68240, 0x0)
symlink(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2616
remove dir: /root/cephfs-client/dfs-0-559
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-560 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-560
receive_execute: 4, 16
receive_execute: 5, 18
receive_execute: 2, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 4, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 625, pid 2714, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 481
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2714, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2714, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2714, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2714, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2714, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2714, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2714, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2714, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2714, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 382, pid 2714, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 382, flag collect 0
----- executor 3 signal number : 156
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2714, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 23, 4, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11964, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5020
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 545
time breakdown 1: 20, 6, 0
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 6916
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 5, 0
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 23
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 12 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 fuzzer receive 481 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 2 has 4 replies
2023/03/29 03:44:53 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 5020 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 545 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 19, 6, 0
before receive testcase: 0 0
2023/03/29 03:44:53 fuzzer receive 156 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2341 lchown lchown
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 248 fstat fstat
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 7
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
openat(0xffffffffffffff9c, &(0x7f0000000040)='./file3\x00', 0x40041, 0x0)
r0 = open$dir(&(0x7f0000000080)='./file3\x00', 0x400000, 0x17)
fcntl$lock(r0, 0x24, &(0x7f00000000c0)={0x0, 0x54f6130259999bc0, 0x3, 0x4cd7})
r1 = open(&(0x7f0000000000)='./file3\x00', 0x141082, 0x0)
write(r1, &(0x7f0000000100)='e', 0x1)
fstat(0xffffffffffffffff, &(0x7f0000000180))
lchown(&(0x7f0000000140)='./file3\x00', 0x0, 0xee01)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1128
remove dir: /root/cephfs-client/dfs-0-560
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-561 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-561
receive_execute: 2, 10
receive_execute: 3, 10
receive_execute: 3, 10
receive_execute: 3, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 622, pid 2717, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2717, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2717, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 2717, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 35
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1597, pid 2717, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1597, flag collect 0
----- executor 3 signal number : 1041
----- completed 5
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2717, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 248, pid 2717, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 248, flag collect 0
----- executor 3 signal number : 52
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 12, 1, 0
execute_one time: 1, 13
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10299, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 8461, flag collect 0
----- executor 2 signal number : 941
----- executor 2 executes write_coverage_signal cov->size 283, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 15537, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 5626
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
2023/03/29 03:44:53 for select break: 1
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 11486, flag collect 0
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 13, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 2947
----- executor 2 executes write_coverage_signal cov->size 20186, flag collect 0
time breakdown 3: 12, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 1776
executor 2 server cover_cnt 8 output_pos_value 12785
time breakdown 1: 13, 17, 0
before receive testcase: 0 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 29
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 7 replies
2023/03/29 03:44:53 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 13, 19, 0
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 8 replies
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 941 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 5626 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 2947 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1776 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 1041 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 4
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000040)='./file3\x00', 0x141640, 0x0)
r1 = openat(r0, &(0x7f0000000000)='./file3\x00', 0x101281, 0x0)
fcntl$getownex(r0, 0x10, &(0x7f0000000080)={0x0, <r2=>0x0})
fcntl$lock(r1, 0x5, &(0x7f00000000c0)={0x2, 0x2, 0x9, 0x2, r2})
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 848
remove dir: /root/cephfs-client/dfs-0-561
remove dir time 6
-----finish removing dir
mkdir time 6
executor 3 create dir /root/cephfs-client/dfs-0-562 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-562
receive_execute: 7, 12
receive_execute: 4, 13
receive_execute: 5, 13
executor 3 before execute_one
receive_execute: 2, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 620, pid 2720, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2720, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2720, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2720, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
cover_reset in execute_call
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 19, 5, 0
executor 2 write_server_output
executor 1 write_server_output
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 4763, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 7943, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1036
----- executor 2 executes write_coverage_signal cov->size 256, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 19403, flag collect 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 6, 0
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 5686
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 12462, flag collect 0
----- executor 2 signal number : 3116
----- executor 2 executes write_coverage_signal cov->size 24882, flag collect 0
----- executor 2 signal number : 2038
before receive testcase: 0 0
executor 2 server cover_cnt 8 output_pos_value 12569
2023/03/29 03:44:53 for select break: 1
2023/03/29 03:44:53 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:53 wg wait finish
2023/03/29 03:44:53 ------ all executors finish execution
2023/03/29 03:44:53 exec time: 23
2023/03/29 03:44:53 ----- PS len: 4
2023/03/29 03:44:53 [CLIENT] executor 3 has 4 replies
2023/03/29 03:44:53 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:53 [SERVER] executor 2 has 8 replies
2023/03/29 03:44:53 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:53 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 1036 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 5686 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 3116 signal and 0 cover from userspace component
2023/03/29 03:44:53 ------- fuzzer executor 2 receive 2038 signal and 0 cover from userspace component
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:53 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 15, 10, 0
before receive testcase: 0 0
2023/03/29 03:44:53 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:53 ----- no new client coverage: false, true
2023/03/29 03:44:53 mutate testcase with failures
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 ----- insertCall()
2023/03/29 03:44:53 ----- generateCall 2458 open open
2023/03/29 03:44:53 ----- mutateArg()
2023/03/29 03:44:53 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:53 prog length: 5
2023/03/29 03:44:53 HasCrashFail:false HasNetFail:false
03:44:53 ---executing program 0:
---
---
---
sync()
symlinkat(&(0x7f00000000c0)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000000100)='./file1/file0\x00', &(0x7f0000000140), &(0x7f0000000180)={'L-', 0x6}, 0x16, 0x1)
link(&(0x7f0000000000)='./file2\x00', &(0x7f0000000080)='./file0/file0\x00')
open(&(0x7f00000001c0)='./file0\x00', 0x220102, 0x136)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 832
remove dir: /root/cephfs-client/dfs-0-562
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-563 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-563
receive_execute: 3, 8
receive_execute: 5, 8
receive_execute: 6, 8
receive_execute: 8, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 780, pid 2723, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 780, flag collect 0
----- executor 3 signal number : 376
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 469, pid 2723, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 469, flag collect 0
----- executor 3 signal number : 334
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2723, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2723, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2723, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 7, 52, 0
execute_one time: 1, 59
2023/03/29 03:44:58 for select break: 1
2023/03/29 03:44:58 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1480
----- executor 2 executes write_coverage_signal cov->size 10499, flag collect 0
2023/03/29 03:44:58 for select break: 1
2023/03/29 03:44:58 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 957
----- executor 2 executes write_coverage_signal cov->size 4000, flag collect 0
----- executor 2 signal number : 659
----- executor 2 executes write_coverage_signal cov->size 4039, flag collect 0
2023/03/29 03:44:58 for select break: 1
2023/03/29 03:44:58 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 16, 4296, 0
before receive testcase: 0 0
----- executor 2 signal number : 5376
----- executor 2 executes write_coverage_signal cov->size 2854, flag collect 0
----- executor 2 signal number : 324
----- executor 2 executes write_coverage_signal cov->size 12091, flag collect 0
----- executor 2 signal number : 2595
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 407
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 1181, flag collect 0
----- executor 2 signal number : 298
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 13, 4297, 0
before receive testcase: 0 0
time breakdown 0: 14, 4297, 0
before receive testcase: 0 0
----- executor 2 signal number : 894
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2026
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 3917
----- executor 2 executes write_coverage_signal cov->size 436, flag collect 0
----- executor 2 signal number : 11
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1657
executor 2 server cover_cnt 17 output_pos_value 20911
2023/03/29 03:44:58 for select break: 1
2023/03/29 03:44:58 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:58 wg wait finish
2023/03/29 03:44:58 ------ all executors finish execution
2023/03/29 03:44:58 exec time: 4313
2023/03/29 03:44:58 ----- PS len: 4
2023/03/29 03:44:58 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:58 [SERVER] executor 2 has 17 replies
2023/03/29 03:44:58 [CLIENT] executor 3 has 5 replies
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 03:44:58 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 1480 signal and 0 cover from userspace component
2023/03/29 03:44:58 fuzzer receive 376 signal and 0 cover from executor 3
2023/03/29 03:44:58 fuzzer receive 334 signal and 0 cover from executor 3
2023/03/29 03:44:58 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 957 signal and 0 cover from userspace component
2023/03/29 03:44:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:58 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 659 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 5376 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 324 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 2595 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 407 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 298 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 894 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 2026 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 3917 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 1657 signal and 0 cover from userspace component
time breakdown 2: 11, 4305, 0
before receive testcase: 0 0
2023/03/29 03:44:58 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:44:58 ----- no new client coverage: false, true
2023/03/29 03:44:58 mutate testcase with failures
2023/03/29 03:44:58 ----- insertCall()
2023/03/29 03:44:58 ----- generateCall 2462 openat openat
2023/03/29 03:44:58 ----- mutateArg()
2023/03/29 03:44:58 ----- insertCall()
2023/03/29 03:44:58 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:44:58 ----- insertCall()
2023/03/29 03:44:58 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/29 03:44:58 ----- insertCall()
2023/03/29 03:44:58 ----- generateCall 209 fcntl$setflags fcntl$setflags
2023/03/29 03:44:58 ----- insertCall()
2023/03/29 03:44:58 ----- generateCall 258 getdents getdents
2023/03/29 03:44:58 ----- mutateArg()
2023/03/29 03:44:58 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:58 prog length: 8
2023/03/29 03:44:58 HasCrashFail:false HasNetFail:false
03:44:58 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
open$dir(&(0x7f0000000040)='./file0\x00', 0x20100, 0x88)
r0 = openat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x20a083, 0x1c5)
r1 = openat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x240402, 0x53)
getdents(r1, &(0x7f0000000280)=""/210, 0xd2)
fcntl$setflags(r0, 0x2, 0x1)
removexattr(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)=@known='system.posix_acl_default\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1336
remove dir: /root/cephfs-client/dfs-0-563
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 8
executor 3 create dir /root/cephfs-client/dfs-0-564 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-564
receive_execute: 13, 14
receive_execute: 13, 15
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 18
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 14, 19
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2728, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2728, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2728, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2728, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2728, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2728, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 488, pid 2728, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 488, flag collect 0
----- executor 3 signal number : 106
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 2728, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 111
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 0, 5
2023/03/29 03:44:58 for select break: 1
2023/03/29 03:44:58 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 9950, flag collect 0
executor 0 write_server_output
time breakdown 3: 33, 6, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1287
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 449, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 24445, flag collect 0
2023/03/29 03:44:58 for select break: 1
2023/03/29 03:44:58 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 5886
----- executor 2 executes write_coverage_signal cov->size 16328, flag collect 0
2023/03/29 03:44:58 for select break: 1
2023/03/29 03:44:58 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 28, 11, 0
----- executor 2 signal number : 612
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 7865
2023/03/29 03:44:58 for select break: 1
2023/03/29 03:44:58 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:44:58 wg wait finish
2023/03/29 03:44:58 ------ all executors finish execution
2023/03/29 03:44:58 exec time: 27
2023/03/29 03:44:58 ----- PS len: 4
2023/03/29 03:44:58 [SERVER] executor 1 has 0 replies
2023/03/29 03:44:58 [SERVER] executor 0 has 0 replies
2023/03/29 03:44:58 [SERVER] executor 2 has 4 replies
2023/03/29 03:44:58 [CLIENT] executor 3 has 8 replies
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 1287 signal and 0 cover from userspace component
2023/03/29 03:44:58 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/29 03:44:58 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/29 03:44:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 23, 9, 0
2023/03/29 03:44:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:44:58 fuzzer receive 106 signal and 0 cover from executor 3
2023/03/29 03:44:58 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 5886 signal and 0 cover from userspace component
2023/03/29 03:44:58 ------- fuzzer executor 2 receive 612 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:44:58 fsMds: [map[] map[] map[] map[]]
time breakdown 1: 27, 12, 0
2023/03/29 03:44:58 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/29 03:44:58 mutate testcase with failures
2023/03/29 03:44:58 ----- mutateArg()
2023/03/29 03:44:58 ----- mutateArg()
2023/03/29 03:44:58 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:44:58 prog length: 2
2023/03/29 03:44:58 HasCrashFail:false HasNetFail:false
03:44:58 ---executing program 0:
---
---
---
sync()
open(&(0x7f0000000100)='./file0\x00', 0x309200, 0xe)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 168
remove dir: /root/cephfs-client/dfs-0-564
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 17
-----finish removing dir
receive_execute: 2, 20
receive_execute: 2, 19
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-565 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-565
receive_execute: 4, 20
receive_execute: 3, 20
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2732, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 344, pid 2732, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 344, flag collect 0
----- executor 3 signal number : 209
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4930, 1, 0
execute_one time: 1, 4931
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 24, 4932, 0
executor 2 write_server_output
executor 1 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1563
----- executor 2 executes write_coverage_signal cov->size 2308, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 594
----- executor 2 executes write_coverage_signal cov->size 2752, flag collect 0
----- executor 2 signal number : 552
----- executor 2 executes write_coverage_signal cov->size 1509, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 1822, flag collect 0
----- executor 2 signal number : 917
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 2980, flag collect 0
----- executor 2 signal number : 261
----- executor 2 executes write_coverage_signal cov->size 8929, flag collect 0
time breakdown 0: 23, 4934, 0
----- executor 2 signal number : 2402
time breakdown 1: 22, 4933, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 372
----- executor 2 executes write_coverage_signal cov->size 152, flag collect 0
----- executor 2 signal number : 134
----- executor 2 executes write_coverage_signal cov->size 4545, flag collect 0
----- executor 2 signal number : 338
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 473
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 11110, flag collect 0
----- executor 2 signal number : 1543
----- executor 2 executes write_coverage_signal cov->size 12593, flag collect 0
----- executor 2 signal number : 3874
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 6
----- executor 2 executes write_coverage_signal cov->size 19014, flag collect 0
----- executor 2 signal number : 1325
executor 2 server cover_cnt 17 output_pos_value 14532
before receive testcase: 0 0
time breakdown 2: 22, 4939, 0
before receive testcase: 0 1
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:45:03 wg wait finish
2023/03/29 03:45:03 ------ all executors finish execution
2023/03/29 03:45:03 exec time: 4961
2023/03/29 03:45:03 ----- PS len: 4
2023/03/29 03:45:03 [CLIENT] executor 3 has 2 replies
2023/03/29 03:45:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:45:03 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 209 signal and 0 cover from executor 3
2023/03/29 03:45:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:45:03 [SERVER] executor 2 has 17 replies
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 1563 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 594 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 552 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 917 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 261 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 2402 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 372 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 134 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 338 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 473 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 1543 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 3874 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 6 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 1325 signal and 0 cover from userspace component
2023/03/29 03:45:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:45:03 ----- no new client coverage: false, true
2023/03/29 03:45:03 mutate testcase with failures
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- generateCall 170 dup dup
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/29 03:45:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:45:03 prog length: 7
2023/03/29 03:45:03 HasCrashFail:false HasNetFail:false
03:45:03 ---executing program 0:
---
---
---
openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x121041, 0x0)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x40202, 0x0)
write(r0, &(0x7f0000000040)="9e", 0x400000)
fsync(r0)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x3)
r1 = dup(r0)
dup(r1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 976
remove dir: /root/cephfs-client/dfs-0-565
remove dir time 2
-----finish removing dir
receive_execute: 11, 4
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 3
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-566 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-566
receive_execute: 13, 4
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2736, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 386, pid 2736, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 3 signal number : 186
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 9, 3
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 55940, pid 2736, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 55940, flag collect 0
----- executor 3 signal number : 322
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 28690, pid 2736, write pid:-2126961383
----- executor 3 executes write_coverage_signal cov->size 28690, flag collect 0
----- executor 3 signal number : 502
----- completed 4
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2736, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2736, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2736, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 25, 1, 0
execute_one time: 0, 26
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 17, 27, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 12, 29, 0
before receive testcase: 0 1
time breakdown 1: 15, 29, 0
before receive testcase: 0 1
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 1 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10604, flag collect 0
----- executor 2 signal number : 1402
----- executor 2 executes write_coverage_signal cov->size 19886, flag collect 0
----- executor 2 signal number : 958
----- executor 2 executes write_coverage_signal cov->size 352, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 28993, flag collect 0
----- executor 2 signal number : 6082
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 10453, flag collect 0
----- executor 2 signal number : 2340
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1898
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:45:03 wg wait finish
2023/03/29 03:45:03 ------ all executors finish execution
2023/03/29 03:45:03 exec time: 48
2023/03/29 03:45:03 ----- PS len: 4
2023/03/29 03:45:03 [CLIENT] executor 3 has 7 replies
2023/03/29 03:45:03 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 186 signal and 0 cover from executor 3
2023/03/29 03:45:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:45:03 [SERVER] executor 2 has 7 replies
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 1402 signal and 0 cover from userspace component
2023/03/29 03:45:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 958 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:45:03 fuzzer receive 322 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 502 signal and 0 cover from executor 3
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 6082 signal and 0 cover from userspace component
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 2340 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 1898 signal and 0 cover from userspace component
executor 2 server cover_cnt 7 output_pos_value 12774
time breakdown 2: 9, 44, 0
before receive testcase: 0 0
2023/03/29 03:45:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:45:03 ----- no new client coverage: false, true
2023/03/29 03:45:03 mutate testcase with failures
2023/03/29 03:45:03 ----- mutateArg()
2023/03/29 03:45:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:45:03 prog length: 2
2023/03/29 03:45:03 HasCrashFail:false HasNetFail:false
03:45:03 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000040)='./file1\x00', 0x12c41, 0x0)
truncate(&(0x7f0000000000)='./file1\x00', 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 256
remove dir: /root/cephfs-client/dfs-0-566
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 32
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-567 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-567
receive_execute: 20, 33
receive_execute: 4, 33
receive_execute: 18, 34
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 19, 33
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 2740, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 1092, pid 2740, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1092, flag collect 0
----- executor 3 signal number : 263
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 53, 6, 0
----- executor 2 executes write_coverage_signal cov->size 11983, flag collect 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1292
----- executor 2 executes write_coverage_signal cov->size 512, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 29434, flag collect 0
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 6532
----- executor 2 executes write_coverage_signal cov->size 4400, flag collect 0
----- executor 2 signal number : 362
----- executor 2 executes write_coverage_signal cov->size 18510, flag collect 0
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 52, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 630
executor 2 server cover_cnt 5 output_pos_value 8899
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:45:03 wg wait finish
2023/03/29 03:45:03 ------ all executors finish execution
2023/03/29 03:45:03 exec time: 44
2023/03/29 03:45:03 ----- PS len: 4
2023/03/29 03:45:03 [CLIENT] executor 3 has 2 replies
2023/03/29 03:45:03 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 263 signal and 0 cover from executor 3
2023/03/29 03:45:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:45:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:45:03 [SERVER] executor 2 has 5 replies
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 1292 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 6532 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 362 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 630 signal and 0 cover from userspace component
time breakdown 2: 37, 10, 0
before receive testcase: 0 0
2023/03/29 03:45:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:45:03 ----- no new client coverage: false, true
2023/03/29 03:45:03 mutate testcase with failures
2023/03/29 03:45:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:45:03 prog length: 2
2023/03/29 03:45:03 HasCrashFail:false HasNetFail:false
03:45:03 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x1456c1, 0x0)
write$binfmt_misc(r0, &(0x7f0000000000)=ANY=[@ANYBLOB="e0d5ad094407903dfc3f275889e85383a94ef26ed6871f3a6d38aff5b3679f7b7b28dd3cc3154e0f9e57d973455f8b0cd70319a002db721a435c068e9f993077b4249a8568abe27e74543fd07c51810174ea2a8eaea4af3e7518e38d8a627e3ef3"], 0x10000000000)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 424
remove dir: /root/cephfs-client/dfs-0-567
time breakdown 0: 52, 7, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-568 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-568
receive_execute: 2, 19
receive_execute: 0, 11
receive_execute: 4, 19
receive_execute: 7, 19
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2742, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 32386, pid 2742, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 32386, flag collect 0
----- executor 3 signal number : 956
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 64, 0, 0
execute_one time: 0, 64
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 26, 65, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12414, flag collect 0
----- executor 2 signal number : 1392
----- executor 2 executes write_coverage_signal cov->size 9653, flag collect 0
----- executor 2 signal number : 905
----- executor 2 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17236, flag collect 0
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 11, 66, 0
before receive testcase: 0 0
----- executor 2 signal number : 5704
----- executor 2 executes write_coverage_signal cov->size 1433, flag collect 0
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 12693, flag collect 0
time breakdown 1: 23, 67, 0
before receive testcase: 0 0
----- executor 2 signal number : 3032
----- executor 2 executes write_coverage_signal cov->size 27802, flag collect 0
----- executor 2 signal number : 2048
executor 2 server cover_cnt 8 output_pos_value 13480
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:45:03 wg wait finish
2023/03/29 03:45:03 ------ all executors finish execution
2023/03/29 03:45:03 exec time: 88
2023/03/29 03:45:03 ----- PS len: 4
2023/03/29 03:45:03 [CLIENT] executor 3 has 2 replies
2023/03/29 03:45:03 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/29 03:45:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:45:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:45:03 [SERVER] executor 2 has 8 replies
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 1392 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 905 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 5704 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 3032 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 2048 signal and 0 cover from userspace component
time breakdown 2: 21, 70, 0
before receive testcase: 0 0
2023/03/29 03:45:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:45:03 ----- no new client coverage: false, true
2023/03/29 03:45:03 mutate testcase with failures
2023/03/29 03:45:03 ----- mutateArg()
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/29 03:45:03 ----- mutateArg()
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- generateCall 2723 pread64 pread64
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- generateCall 516 getxattr getxattr
2023/03/29 03:45:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:45:03 prog length: 11
2023/03/29 03:45:03 HasCrashFail:false HasNetFail:false
03:45:03 ---executing program 0:
---
---
---
getxattr(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)=@random={'btrfs.', '{#\x00'}, &(0x7f0000000280)=""/255, 0xff)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x40, 0x0)
fcntl$getownex(r0, 0x10, &(0x7f0000000040)={0x0, <r1=>0x0})
fcntl$lock(r0, 0x5, &(0x7f00000000c0)={0x0, 0x4, 0xe029, 0x0, r1})
fcntl$lock(r0, 0x24, &(0x7f0000000080)={0x1, 0x2, 0x90f1, 0x7fffffff, r1})
pread64(r0, &(0x7f0000000180)=""/110, 0x6e, 0xff)
read(0xffffffffffffffff, 0x0, 0x0)
r2 = openat(r0, &(0x7f0000000100)='./file0\x00', 0x8000, 0x8)
r3 = fcntl$getown(r0, 0x9)
r4 = fcntl$dupfd(r2, 0x406, r2)
fcntl$lock(r4, 0x26, &(0x7f0000000140)={0x0, 0x0, 0x6, 0x2, r3})
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2232
remove dir: /root/cephfs-client/dfs-0-568
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-569 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-569
receive_execute: 7, 13
receive_execute: 5, 13
receive_execute: 3, 13
receive_execute: 7, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2744, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 657, pid 2744, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 657, flag collect 0
----- executor 3 signal number : 470
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2744, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2744, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 2744, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 112
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 2744, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 151
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2744, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2744, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2744, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2744, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2744, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7985, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1304
----- executor 2 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17322, flag collect 0
time breakdown 0: 20, 5, 0
before receive testcase: 0 1
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 7, 0
----- executor 2 signal number : 5484
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 529
executor 2 server cover_cnt 4 output_pos_value 7397
before receive testcase: 0 1
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:45:03 wg wait finish
2023/03/29 03:45:03 ------ all executors finish execution
2023/03/29 03:45:03 exec time: 21
2023/03/29 03:45:03 ----- PS len: 4
2023/03/29 03:45:03 [CLIENT] executor 3 has 11 replies
2023/03/29 03:45:03 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 470 signal and 0 cover from executor 3
2023/03/29 03:45:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:45:03 [SERVER] executor 0 has 0 replies
time breakdown 3: 20, 5, 0
before receive testcase: 0 0
2023/03/29 03:45:03 [SERVER] executor 2 has 4 replies
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 1304 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 5484 signal and 0 cover from userspace component
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 529 signal and 0 cover from userspace component
2023/03/29 03:45:03 fuzzer receive 112 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 151 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 16, 8, 0
before receive testcase: 0 1
2023/03/29 03:45:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:45:03 ----- no new client coverage: false, true
2023/03/29 03:45:03 mutate testcase with failures
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- generateCall 2809 rename rename
2023/03/29 03:45:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:45:03 prog length: 4
2023/03/29 03:45:03 HasCrashFail:false HasNetFail:false
03:45:03 ---executing program 0:
---
---
---
lsetxattr$security_capability(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=@v1={0x1000000, [{0xfffffff8, 0x42}]}, 0xc, 0x1)
rename(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file0\x00')
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
chmod(&(0x7f0000000000)='./file0\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 744
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-569
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-570 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-570
receive_execute: 8, 14
receive_execute: 5, 13
receive_execute: 7, 13
receive_execute: 8, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2748, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 2748, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 519, pid 2748, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 359
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2748, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 96
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4164, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11893, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4733
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 7307, flag collect 0
----- executor 2 signal number : 537
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 5 output_pos_value 6623
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 18, 7, 0
before receive testcase: 0 0
time breakdown 3: 22, 5, 0
before receive testcase: 0 0
time breakdown 1: 20, 6, 0
before receive testcase: 0 0
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:45:03 wg wait finish
2023/03/29 03:45:03 ------ all executors finish execution
2023/03/29 03:45:03 exec time: 23
2023/03/29 03:45:03 ----- PS len: 4
2023/03/29 03:45:03 [CLIENT] executor 3 has 4 replies
2023/03/29 03:45:03 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 359 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 96 signal and 0 cover from executor 3
2023/03/29 03:45:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:45:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:45:03 [SERVER] executor 2 has 5 replies
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 4733 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 537 signal and 0 cover from userspace component
time breakdown 0: 21, 10, 0
before receive testcase: 0 0
2023/03/29 03:45:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:45:03 ----- no new client coverage: false, true
2023/03/29 03:45:03 mutate testcase with failures
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- mutateArg()
2023/03/29 03:45:03 ----- mutateArg()
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- mutateArg()
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- insertCall()
2023/03/29 03:45:03 ----- mutateArg()
2023/03/29 03:45:03 ----- mutateArg()
2023/03/29 03:45:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:45:03 prog length: 20
2023/03/29 03:45:03 HasCrashFail:false HasNetFail:false
03:45:03 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x8)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000140)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0xc1)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x0, 0x0, 0x1, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x0, 0x3, 0x9164, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file0\x00', &(0x7f0000000480), &(0x7f0000000040), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x0, 0x1, 0x81, 0xfffffffffffffffa})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0)={0x0, <r5=>0x0})
fcntl$lock(r3, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x10000000, 0xc9, r5})
r6 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r6, r3)
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 3840
remove dir: /root/cephfs-client/dfs-0-570
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-571 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-571
receive_execute: 7, 15
receive_execute: 6, 15
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
receive_execute: 6, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2751, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2751, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 3
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 3, 15
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 534, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 2751, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2751, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 2751, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 13
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2751, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 347, pid 2751, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 347, flag collect 0
----- executor 3 signal number : 28
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 14, 2, 15
execute_one time: 1, 31
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 14121, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 30018, flag collect 0
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 34, 0
before receive testcase: 0 0
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1114
----- executor 2 executes write_coverage_signal cov->size 1122, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 18, 34, 0
before receive testcase: 0 0
time breakdown 3: 22, 34, 0
before receive testcase: 0 0
----- executor 2 signal number : 7311
----- executor 2 executes write_coverage_signal cov->size 4725, flag collect 0
----- executor 2 signal number : 414
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 16836, flag collect 0
----- executor 2 signal number : 3745
----- executor 2 executes write_coverage_signal cov->size 27700, flag collect 0
----- executor 2 signal number : 2125
executor 2 server cover_cnt 8 output_pos_value 16205
2023/03/29 03:45:03 for select break: 1
2023/03/29 03:45:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:45:03 wg wait finish
2023/03/29 03:45:03 ------ all executors finish execution
2023/03/29 03:45:03 exec time: 55
2023/03/29 03:45:03 ----- PS len: 4
2023/03/29 03:45:03 [CLIENT] executor 3 has 20 replies
2023/03/29 03:45:03 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/29 03:45:03 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:45:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:45:03 [SERVER] executor 2 has 8 replies
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/29 03:45:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:45:03 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 1114 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 7311 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 414 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 3745 signal and 0 cover from userspace component
2023/03/29 03:45:03 ------- fuzzer executor 2 receive 2125 signal and 0 cover from userspace component
2023/03/29 03:45:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:45:03 ----- no new client coverage: false, true
time breakdown 2: 21, 39, 0
before receive testcase: 0 0
2023/03/29 03:45:03 mutate testcase with failures
2023/03/29 03:45:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:45:03 prog length: 16
2023/03/29 03:45:03 HasCrashFail:false HasNetFail:false
03:45:03 ---executing program 0:
---
---
---
stat(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
stat(&(0x7f0000000240)='./file0\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000340)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
stat(&(0x7f0000000500)='./file0\x00', &(0x7f0000000540)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
setxattr$system_posix_acl(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='system.posix_acl_default\x00', &(0x7f0000000740)=ANY=[@ANYBLOB="02000000010001000000000002000100", @ANYRES32=r0, @ANYBLOB="02000100", @ANYRES32=0xee00, @ANYBLOB='\x00\x00\x00\x00', @ANYRES32, @ANYBLOB="02000000", @ANYRES32=r1, @ANYBLOB="02000200", @ANYRES32=0xee01, @ANYBLOB="02000000", @ANYRES32=r2, @ANYBLOB="040004000000000008000200", @ANYRES32=r3, @ANYBLOB="08000500", @ANYRES32=r4, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="652677c2ebc59f0e648c92cef38dd2e6ccb27a34eb547a686b07062a94f5e0544d1730c8328381153550583df689283090b482c89cc82e9f", @ANYRES32=r5, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee00, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee00, @ANYBLOB="10000000000000002000060000000000"], 0x84, 0x1)
r6 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r7 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
listxattr(&(0x7f0000000680)='./file0\x00', &(0x7f0000000a40)=""/4096, 0x1000)
flock(r7, 0x6)
fstat(r6, &(0x7f00000006c0))
fcntl$lock(r7, 0x7, &(0x7f0000000a00)={0x1, 0x0, 0xfffffffffffffffe, 0x7fff, 0xffffffffffffffff})
r8 = fcntl$dupfd(r6, 0x0, r6)
flock(r8, 0x2)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:dpkg_lock_t:s0\x00', 0x21, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 3728
remove dir: /root/cephfs-client/dfs-0-571
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-572 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-572
receive_execute: 9, 10
receive_execute: 3, 9
receive_execute: 9, 9
receive_execute: 8, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 85, pid 2755, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2755, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2755, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2755, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2755, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2755, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2755, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 2755, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 445
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2755, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 8
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 150, pid 2755, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 150, flag collect 0
----- executor 3 signal number : 41
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 2755, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 112
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2755, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2755, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2755, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 211, pid 2755, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 211, flag collect 0
----- executor 3 signal number : 71
----- completed 15
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 220, pid 2755, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 220, flag collect 0
----- executor 3 signal number : 8
----- completed 16
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 83335, 1, 1
execute_one time: 0, 83337
2023/03/29 03:46:26 for select break: 1
2023/03/29 03:46:26 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 28592, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:26 for select break: 1
2023/03/29 03:46:26 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1476
----- executor 2 executes write_coverage_signal cov->size 32120, flag collect 0
time breakdown 1: 18, 83340, 0
before receive testcase: 0 0
time breakdown 3: 19, 83338, 0
before receive testcase: 0 0
2023/03/29 03:46:26 for select break: 1
2023/03/29 03:46:26 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 83341, 0
before receive testcase: 0 0
----- executor 2 signal number : 1167
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 880
----- executor 2 executes write_coverage_signal cov->size 21190, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7258
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 749
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4356
----- executor 2 executes write_coverage_signal cov->size 30786, flag collect 0
----- executor 2 signal number : 1774
----- executor 2 executes write_coverage_signal cov->size 2458, flag collect 0
----- executor 2 signal number : 165
----- executor 2 executes write_coverage_signal cov->size 3732, flag collect 0
----- executor 2 signal number : 369
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 546
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2862
----- executor 2 executes write_coverage_signal cov->size 21154, flag collect 0
----- executor 2 signal number : 3676
----- executor 2 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1782
executor 2 server cover_cnt 17 output_pos_value 27251
2023/03/29 03:46:26 for select break: 1
2023/03/29 03:46:26 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:26 wg wait finish
2023/03/29 03:46:26 ------ all executors finish execution
2023/03/29 03:46:26 exec time: 83361
2023/03/29 03:46:26 ----- PS len: 4
2023/03/29 03:46:26 [CLIENT] executor 3 has 16 replies
2023/03/29 03:46:26 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 445 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/29 03:46:26 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:26 [SERVER] executor 2 has 17 replies
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 1476 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 1167 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 880 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 7258 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 749 signal and 0 cover from userspace component
2023/03/29 03:46:26 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:26 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 112 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 4356 signal and 0 cover from userspace component
2023/03/29 03:46:26 fuzzer receive 71 signal and 0 cover from executor 3
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 1774 signal and 0 cover from userspace component
2023/03/29 03:46:26 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 165 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 369 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 546 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 2862 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 3676 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 1782 signal and 0 cover from userspace component
time breakdown 2: 12, 83353, 0
before receive testcase: 0 1
2023/03/29 03:46:26 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:26 ----- no new client coverage: false, true
2023/03/29 03:46:26 mutate testcase with failures
2023/03/29 03:46:26 ----- insertCall()
2023/03/29 03:46:26 ----- generateCall 2343 link link
2023/03/29 03:46:26 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:26 prog length: 6
2023/03/29 03:46:26 HasCrashFail:false HasNetFail:false
03:46:26 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000140)='./file0\x00', 0x0)
symlink(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000240)='./file0/file0\x00')
lsetxattr$security_capability(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
link(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='./file1/../file0\x00')
rename(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)='./file1\x00')
lsetxattr(&(0x7f0000000400)='./file1/../file0\x00', 0x0, 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1056
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-572
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-573 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-573
receive_execute: 5, 9
receive_execute: 19, 9
receive_execute: 18, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2761, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 545, pid 2761, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 545, flag collect 0
----- executor 3 signal number : 60
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2761, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 179, pid 2761, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 179, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 17, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 743, pid 2761, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 743, flag collect 0
----- executor 3 signal number : 82
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 322, pid 2761, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 322, flag collect 0
----- executor 3 signal number : 3
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 9, 0
execute_one time: 1, 16
2023/03/29 03:46:26 for select break: 1
2023/03/29 03:46:26 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:26 for select break: 1
2023/03/29 03:46:26 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 26, 19, 0
before receive testcase: 0 0
2023/03/29 03:46:26 for select break: 1
2023/03/29 03:46:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 26, 21, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15595, flag collect 0
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 19801, flag collect 0
----- executor 2 signal number : 957
----- executor 2 executes write_coverage_signal cov->size 801, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7662
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 30310, flag collect 0
before receive testcase: 0 0
time breakdown 3: 28, 18, 0
before receive testcase: 0 1
----- executor 2 signal number : 5936
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1403
executor 2 server cover_cnt 7 output_pos_value 17450
2023/03/29 03:46:26 for select break: 1
2023/03/29 03:46:26 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:26 wg wait finish
2023/03/29 03:46:26 ------ all executors finish execution
2023/03/29 03:46:26 exec time: 32
2023/03/29 03:46:26 ----- PS len: 4
2023/03/29 03:46:26 [CLIENT] executor 3 has 6 replies
2023/03/29 03:46:26 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:26 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:46:26 [SERVER] executor 1 has 0 replies
time breakdown 2: 14, 24, 0
2023/03/29 03:46:26 fuzzer receive 60 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:46:26 [SERVER] executor 2 has 7 replies
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 957 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 7662 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 5936 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 1403 signal and 0 cover from userspace component
2023/03/29 03:46:26 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:26 ----- no new client coverage: false, true
2023/03/29 03:46:26 mutate testcase with failures
2023/03/29 03:46:26 ----- insertCall()
2023/03/29 03:46:26 ----- generateCall 3761 stat stat
2023/03/29 03:46:26 ----- mutateArg()
2023/03/29 03:46:26 ----- insertCall()
2023/03/29 03:46:26 ----- generateCall 170 dup dup
2023/03/29 03:46:26 ----- insertCall()
2023/03/29 03:46:26 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/29 03:46:26 ----- mutateArg()
2023/03/29 03:46:26 ----- insertCall()
2023/03/29 03:46:26 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/29 03:46:26 ----- insertCall()
2023/03/29 03:46:26 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:46:26 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:26 prog length: 10
2023/03/29 03:46:26 HasCrashFail:false HasNetFail:false
03:46:26 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f00000011c0)='./file1\x00', 0x12441, 0x0)
truncate(&(0x7f0000000280)='./file1\x00', 0x5)
stat(&(0x7f0000000000)='./file1\x00', &(0x7f0000000080))
open$dir(&(0x7f0000000100)='./file1\x00', 0x1010c1, 0x140)
r1 = openat(0xffffffffffffff9c, &(0x7f0000000040)='./file1\x00', 0x0, 0x0)
r2 = dup(r1)
r3 = fcntl$dupfd(r0, 0x406, 0xffffffffffffffff)
r4 = fcntl$dupfd(r0, 0x406, 0xffffffffffffffff)
fcntl$dupfd(r3, 0x406, r4)
fcntl$addseals(r2, 0x409, 0xa)
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1240
remove dir: /root/cephfs-client/dfs-0-573
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-574 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-574
receive_execute: 4, 28
receive_execute: 8, 27
receive_execute: 9, 28
receive_execute: 9, 28
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 1
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2765, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1092, pid 2765, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1092, flag collect 0
----- executor 3 signal number : 263
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2765, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 19
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2765, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 383, pid 2765, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 383, flag collect 0
----- executor 3 signal number : 89
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2765, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2765, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2765, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2765, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2765, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 1, 7
2023/03/29 03:46:26 for select break: 1
2023/03/29 03:46:26 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:26 for select break: 1
2023/03/29 03:46:26 --------- executor 1 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10318, flag collect 0
----- executor 2 signal number : 1389
----- executor 2 executes write_coverage_signal cov->size 17214, flag collect 0
----- executor 2 signal number : 951
----- executor 2 executes write_coverage_signal cov->size 545, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:46:26 for select break: 1
2023/03/29 03:46:26 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 37, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 7719
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 12574, flag collect 0
----- executor 2 signal number : 3145
----- executor 2 executes write_coverage_signal cov->size 22445, flag collect 0
time breakdown 1: 35, 10, 0
before receive testcase: 0 0
time breakdown 0: 37, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 1396
executor 2 server cover_cnt 7 output_pos_value 14694
2023/03/29 03:46:26 for select break: 1
2023/03/29 03:46:26 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:26 wg wait finish
2023/03/29 03:46:26 ------ all executors finish execution
2023/03/29 03:46:26 exec time: 42
2023/03/29 03:46:26 ----- PS len: 4
2023/03/29 03:46:26 [CLIENT] executor 3 has 10 replies
2023/03/29 03:46:26 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:26 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:26 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 263 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 32, 15, 0
2023/03/29 03:46:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:26 [SERVER] executor 2 has 7 replies
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 1389 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 951 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 7719 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 3145 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:46:26 ------- fuzzer executor 2 receive 1396 signal and 0 cover from userspace component
2023/03/29 03:46:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:26 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:26 ----- no new client coverage: false, true
2023/03/29 03:46:26 mutate testcase with failures
2023/03/29 03:46:26 ----- insertCall()
2023/03/29 03:46:26 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/29 03:46:26 ----- splice()
2023/03/29 03:46:26 ----- insertCall()
2023/03/29 03:46:26 ----- mutateArg()
2023/03/29 03:46:26 ----- insertCall()
2023/03/29 03:46:26 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:26 prog length: 20
2023/03/29 03:46:26 HasCrashFail:false HasNetFail:false
03:46:26 ---executing program 0:
---
---
---
fcntl$setstatus(0xffffffffffffffff, 0x4, 0x40000)
ftruncate(0xffffffffffffffff, 0x7ff)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file0\x00', 0x171942, 0x2)
fsetxattr$security_ima(r0, &(0x7f00000002c0), &(0x7f0000000600)=ANY=[@ANYBLOB="35de35d1e520620986fe81bae84bfb985397561f48db28638abd082fb4e1524a37eaea2f43680ff1533b85193cacd8c1004da4d44406b6d9de231a25a69a62edd00c0b7b46630fc7b7602e86c76aff623534c936f16edee4064a233e13cff12e6ceb63355e2e00417f4adbb6e3e2783ebeaa81d433757b61dca1ed266a7470acf4fba08da3c23490c600871205e2f889836bfc7452dde4d268735b1e58d3027df4c979d8890de8e451f5abf48e8c723b64d85104ac2755c8ab5baf74823ba79e9a0bddb212b8eefc58255c7b9c89eb169d181d63f6d7641a58a68f878aca53ca503e6faed0d06c07cfd52d1c45be809315a61ff641533e06feb650ed979fa0458e7525bbd38e6665c19b6f3b9cb6eba2a77fc93e837c838ed9eb55fac42cb3d93d5635e1c046465659b17d886cee91ff9a7f8107606b9dea0587eb5f26b7ef84d206ba89207df4ac197486f44d9e23c73d5a00770a61a7"], 0x2, 0x0)
sync()
sync()
pwrite64(r0, &(0x7f0000000300)="8a4ecf184da32d67fb7071c7c7a2babc2cac365a3698b53e17649fd75ae736c0118777fdf224c4037405558ed00fcaadfec37b7930f36798321f12930854999c2a3854516c6f3cf90a5bed635923d1bfc387eeba84ae7adca2a6d5ff07b4621be1864af28de7800d1f2778ba80b76efb34f9fed8e7da4e6575105882af4fbe01154a6770153aff34d34e505bac75104e9e606823", 0x94, 0xff)
sync()
chmod(&(0x7f00000001c0)='./file0\x00', 0x0)
lchown(&(0x7f0000000440)='./file0\x00', 0xee01, 0xee01)
open$dir(&(0x7f0000000200)='./file0\x00', 0x200a00, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
sync()
open(&(0x7f0000000080)='./file1\x00', 0x440002, 0x141)
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r1 = open$dir(&(0x7f0000000100)='./file1\x00', 0x0, 0x0)
readlink(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340)=""/7, 0x7)
symlinkat(&(0x7f0000000040)='./file1\x00', r1, &(0x7f0000000140)='./file1\x00')
renameat(r1, &(0x7f0000000380)='./file1\x00', r1, &(0x7f00000003c0)='./file1\x00')
setxattr$incfs_size(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)=0x20, 0x8, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3088
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-574
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-575 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-575
receive_execute: 10, 15
receive_execute: 3, 16
receive_execute: 9, 15
receive_execute: 7, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 744, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 744, flag collect 0
----- executor 3 signal number : 242
----- completed 6
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 411, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 411, flag collect 0
----- executor 3 signal number : 22
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 789, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 789, flag collect 0
----- executor 3 signal number : 41
----- completed 9
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 497, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 497, flag collect 0
----- executor 3 signal number : 46
----- completed 11
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 7
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 33
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 603, pid 2769, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 3 signal number : 71
----- completed 16
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 571, pid 2769, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 571, flag collect 0
----- executor 3 signal number : 128
----- completed 17
----- executor 3 write_call_output, size 132, pid 2769, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 3
----- completed 18
----- executor 3 write_call_output, size 134, pid 2769, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 134, flag collect 0
----- executor 3 signal number : 4
----- completed 19
----- executor 3 write_call_output, size 338, pid 2769, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 338, flag collect 0
----- executor 3 signal number : 0
----- completed 20
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 50
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1224, 52, 0
execute_one time: 1, 1276
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 3574, flag collect 0
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1552
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1016
----- executor 2 executes write_coverage_signal cov->size 2752, flag collect 0
----- executor 2 signal number : 542
----- executor 2 executes write_coverage_signal cov->size 3468, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7157
----- executor 2 executes write_coverage_signal cov->size 3576, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 22657, flag collect 0
----- executor 2 signal number : 3584
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 403
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 16494, flag collect 0
----- executor 2 signal number : 735
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 24, 6235, 0
before receive testcase: 0 0
----- executor 2 signal number : 492
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 23, 6235, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 890, flag collect 0
----- executor 2 signal number : 224
----- executor 2 executes write_coverage_signal cov->size 23317, flag collect 0
----- executor 2 signal number : 2558
----- executor 2 executes write_coverage_signal cov->size 30915, flag collect 0
time breakdown 3: 25, 6234, 0
before receive testcase: 0 0
----- executor 2 signal number : 4860
----- executor 2 executes write_coverage_signal cov->size 62, flag collect 0
----- executor 2 signal number : 10
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 945
executor 2 server cover_cnt 17 output_pos_value 24666
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 6260
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 20 replies
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 242 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 46 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 71 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 128 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 17 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
time breakdown 2: 19, 6245, 0
before receive testcase: 0 0
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1552 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1016 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 542 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 7157 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 3584 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 403 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 735 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 224 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 2558 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 4860 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 945 signal and 0 cover from userspace component
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 7
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
openat(0xffffffffffffff9c, &(0x7f0000000140)='./file3\x00', 0x240000, 0x18)
symlink(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)='./file3\x00')
lsetxattr$security_evm(&(0x7f0000000240)='./file3\x00', &(0x7f0000000280), &(0x7f00000002c0)=@sha1={0x1, "ecb445bf82ed3a6aa70b4d8c2e0c965b03dc5be9"}, 0xfee6, 0x0)
link(&(0x7f0000000040)='./file3\x00', &(0x7f0000000640)='./file1\x00')
lsetxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=@v2={0x3, 0x2, 0x3, 0x5, 0x27, "4f773f12cfff54ba1e3749f1d18c419cbe837468ac345d9e07e51c643974b536adaeb85d9075b7"}, 0x30, 0x0)
rename(&(0x7f0000000500)='./file3\x00', &(0x7f0000000340)='./file0\x00')
unlink(&(0x7f0000000080)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1544
remove dir: /root/cephfs-client/dfs-0-575
remove dir time 15
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-576 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-576
receive_execute: 5, 16
receive_execute: 16, 17
receive_execute: 15, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 2776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 369
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 516, pid 2776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 516, flag collect 0
----- executor 3 signal number : 120
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 16, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 540, pid 2776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 540, flag collect 0
----- executor 3 signal number : 28
----- completed 4
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 585, pid 2776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 585, flag collect 0
----- executor 3 signal number : 27
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 429, pid 2776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 429, flag collect 0
----- executor 3 signal number : 25
----- completed 7
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 17, 7, 0
execute_one time: 2, 24
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 33, 27, 0
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 26738, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1434
----- executor 2 executes write_coverage_signal cov->size 27860, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1050
----- executor 2 executes write_coverage_signal cov->size 1208, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 31, 30, 0
----- executor 2 signal number : 7913
----- executor 2 executes write_coverage_signal cov->size 140, flag collect 0
----- executor 2 signal number : 82
----- executor 2 executes write_coverage_signal cov->size 3960, flag collect 0
----- executor 2 signal number : 385
----- executor 2 executes write_coverage_signal cov->size 8437, flag collect 0
----- executor 2 signal number : 1216
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6674
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1575
time breakdown 1: 32, 28, 0
before receive testcase: 0 0
executor 2 server cover_cnt 9 output_pos_value 20426
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 50
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 7 replies
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 9 replies
time breakdown 2: 21, 34, 0
before receive testcase: 0 0
2023/03/29 03:46:33 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1434 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 369 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 120 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1050 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 7913 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 82 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 385 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1216 signal and 0 cover from userspace component
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 6674 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1575 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 3967 truncate truncate
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 120 chdir chdir
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 10
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
truncate(&(0x7f0000000100)='./file0\x00', 0x401)
open(&(0x7f0000000000)='./file0\x00', 0x240, 0x0)
setxattr$security_smack_transmute(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000140), 0x4, 0x0)
r0 = dup(0xffffffffffffffff)
chdir(&(0x7f0000000340)='./file0\x00')
r1 = open(&(0x7f0000000200)='./file0\x00', 0x400, 0x64)
write$binfmt_script(r1, &(0x7f0000000240)=ANY=[@ANYBLOB="2321202e2f66696c653020545255450a9be04c9873175ff9c430cfd51c9f5c9ebdc280ee3a9c36ea9a6b2736ca5238aaae6c8b7ed1347e46475bd73a0f0936d9e3473a383d71eaa3310a0dc5a0a41a52c61388d4c4301d361214f50443d3236698974ddfe5b6c0c51262aa4134ac7e85897de3f3f65bc91d6408d1391ea3b38025e02712c221c041a31ee91a33aa36c14e81368b4bc7f2873b5d8387a50e108977579731980c9fd1d5553c9042fcff2782d722a7213d841f308e370df57b839ade8717cc05dadc4aa81c6c"], 0xdb)
fcntl$getownex(r0, 0x10, &(0x7f0000000080))
fcntl$notify(r0, 0x402, 0x8000000c)
lsetxattr$security_smack_transmute(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), 0x0, 0x0, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1664
remove dir: /root/cephfs-client/dfs-0-576
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-577 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-577
receive_execute: 11, 21
receive_execute: 5, 20
receive_execute: 10, 21
receive_execute: 9, 20
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2780, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 2780, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 471
----- completed 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 271, pid 2780, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 3 signal number : 136
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2780, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2780, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2780, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2780, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2780, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2780, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 239, pid 2780, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 239, flag collect 0
----- executor 3 signal number : 29
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 21, 0
execute_one time: 1, 36
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 32, 40, 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 27311, flag collect 0
executor 0 write_server_output
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 31, 41, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1428
----- executor 2 executes write_coverage_signal cov->size 21280, flag collect 0
----- executor 2 signal number : 1017
----- executor 2 executes write_coverage_signal cov->size 793, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 31641, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 44, 0
before receive testcase: 0 0
----- executor 2 signal number : 7442
----- executor 2 executes write_coverage_signal cov->size 2493, flag collect 0
----- executor 2 signal number : 339
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 23776, flag collect 0
----- executor 2 signal number : 5768
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1919
executor 2 server cover_cnt 8 output_pos_value 18011
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 67
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 10 replies
2023/03/29 03:46:33 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
time breakdown 2: 25, 46, 0
2023/03/29 03:46:33 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:33 fuzzer receive 471 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1428 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1017 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 7442 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 339 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 5768 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1919 signal and 0 cover from userspace component
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 3967 truncate truncate
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 17
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
r3 = fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
truncate(&(0x7f0000000380)='./file0\x00', 0x0)
r4 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$lock(r4, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x81, 0xbab0})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(0xffffffffffffffff, 0x0, 0x0)
fcntl$lock(r4, 0x6, &(0x7f0000000200)={0x1, 0x3, 0x1, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x0, 0x1, 0x81, 0xfffffffffffffffa})
fcntl$lock(r3, 0x5, &(0x7f00000003c0)={0x3, 0x1, 0x100000000000005, 0x80000000009})
r5 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r5, r4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3400
remove dir: /root/cephfs-client/dfs-0-577
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-578 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-578
receive_execute: 8, 13
receive_execute: 3, 14
receive_execute: 9, 13
receive_execute: 5, 14
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 620, pid 2783, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2783, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2783, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2783, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2783, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2783, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 283, pid 2783, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 283, flag collect 0
----- executor 3 signal number : 111
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2783, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 2783, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 9
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 505, pid 2783, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 505, flag collect 0
----- executor 3 signal number : 28
----- completed 10
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2783, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2783, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 2783, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 87
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 2783, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 1
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2783, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2783, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 342, pid 2783, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 342, flag collect 0
----- executor 3 signal number : 31
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 12, 2, 1
execute_one time: 0, 16
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 22, 17, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24295, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1424
----- executor 2 executes write_coverage_signal cov->size 30417, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 21, 19, 0
time breakdown 0: 19, 18, 0
----- executor 2 signal number : 1088
----- executor 2 executes write_coverage_signal cov->size 1185, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7314
----- executor 2 executes write_coverage_signal cov->size 5109, flag collect 0
----- executor 2 signal number : 423
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 22524, flag collect 0
----- executor 2 signal number : 5033
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1800
before receive testcase: 0 0
executor 2 server cover_cnt 8 output_pos_value 17180
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 36
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 17 replies
2023/03/29 03:46:33 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1424 signal and 0 cover from userspace component
time breakdown 2: 17, 23, 0
before receive testcase: 0 0
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1088 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 87 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 7314 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 423 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 5033 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1800 signal and 0 cover from userspace component
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 1
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file0\x00', 0x2dec9b5c9d16cdf7, 0x1b2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/cephfs-client/dfs-0-578
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-579 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-579
receive_execute: 12, 10
receive_execute: 8, 11
receive_execute: 6, 11
receive_execute: 9, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 625, pid 2787, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 481
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 22, 3, 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4248, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 11906, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5012
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 4, 0
----- executor 2 signal number : 544
executor 2 server cover_cnt 5 output_pos_value 6906
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 17, 5, 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 16
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 1 replies
2023/03/29 03:46:33 fuzzer receive 481 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 5 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 5012 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 544 signal and 0 cover from userspace component
time breakdown 1: 19, 5, 0
before receive testcase: 0 0
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 4
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000780)='./file0\x00', 0xa043, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000040)='security.SMACK64IPIN\x00', &(0x7f0000000180)=ANY=[@ANYBLOB="26ce0da5bed52a007bf72a9f53a53c3f14d93292afdbde721ae3cc48490ad1e4912f26a52374cf853374477170de6e05888677b24213598304845555b6ccf56d6c0d62c4c06274d8b4793510645d0884c08ccb49595d60baffbb9aa689"], 0x2, 0x2)
fsetxattr$system_posix_acl(r0, &(0x7f0000000240)='system.posix_acl_access\x00', &(0x7f00000003c0)={{}, {}, [], {}, [], {}, {0x20, 0x6}}, 0x24, 0x0)
open$dir(&(0x7f00000000c0)='./file0\x00', 0x400603, 0x4)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1400
remove dir: /root/cephfs-client/dfs-0-579
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-580 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-580
receive_execute: 5, 13
receive_execute: 2, 13
receive_execute: 2, 13
receive_execute: 2, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2789, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2789, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 276, pid 2789, write pid:-2126518517
----- executor 3 executes write_coverage_signal cov->size 276, flag collect 0
----- executor 3 signal number : 189
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2789, write pid:-2126518517
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 3
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
time breakdown 3: 18, 7, 0
----- executor 2 executes write_coverage_signal cov->size 4250, flag collect 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 8, 0
before receive testcase: 0 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 9, 0
before receive testcase: 0 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 23
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 4 replies
2023/03/29 03:46:33 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 189 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 5 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 5016 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 546 signal and 0 cover from userspace component
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 3
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000100)='./file0\x00', 0x8040, 0x0)
fcntl$notify(r0, 0x402, 0x1)
lremovexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='system.posix_acl_access\x00')
---

end of program
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 432
remove dir: /root/cephfs-client/dfs-0-580
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 11916, flag collect 0
----- executor 2 signal number : 5016
----- executor 2 executes write_coverage_signal cov->size 2096, flag collect 0
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
----- executor 2 signal number : 546
executor 2 server cover_cnt 5 output_pos_value 7218
time breakdown 2: 15, 11, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 31
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-581 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-581
receive_execute: 5, 32
receive_execute: 2, 32
receive_execute: 5, 33
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 619, pid 2792, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2792, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 283, pid 2792, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 283, flag collect 0
----- executor 3 signal number : 162
----- completed 3
execute_one loop: 0, 0, 0
receive_execute: 4, 32
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 38, 4, 0
----- executor 2 executes write_coverage_signal cov->size 4297, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 11567, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4899
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 527
executor 2 server cover_cnt 4 output_pos_value 6775
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 39
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 3 replies
2023/03/29 03:46:33 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 4 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 4899 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2458 open open
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2343 link link
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2343 link link
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 121 chmod chmod
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2458 open open
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 220 flock flock
time breakdown 1: 37, 7, 0
before receive testcase: 0 0
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 3967 truncate truncate
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 16
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00', 0x2100, 0x104)
write$binfmt_misc(r0, &(0x7f0000000600)=ANY=[@ANYBLOB="73797a318431ad1a16bb34799107d2d8f498dd7c04f6be423a14001bfd5d856dcba4f9909177c64b6560ceb699c47c0075e2fcfd96fcd68ea4a1f423284e242db7acb341f11d4072443b347a2a2e5a611ef3d6c32a80717c6e4063b222a0cbb52169347dd614bbd77133c21579de8e1394ea42429dc866ab8ee9d6d61e4327f1edbcc1bea25216e571d4b6753a9bfc3233c2abd904fd343971fb2365bdfb6f13446d20fc972bcbd081e85c0f25deb0cb3032427c0ff3e90486543428817b94f87c42fc2110293ff8c23603205ebfb3674b7915040c723de791271683aacf8168f099bfa0efd5597183087cecf1f4190a717a7076593824bd3d676257825841ec26956e91a95dfd7d5631c0c732bfc021530deb1a7b30abfebddf9fe70d0b59051e133ae377b6cf233080e31c40a6643ea304666192fd06c776a8c4ffbb1c25de04e21c33b1b58aab670953fc"], 0xba)
open(&(0x7f0000000440)='./file3/file0\x00', 0x305200, 0x1bc)
open(&(0x7f0000000480)='./file3/file0\x00', 0x1040, 0x80)
open(&(0x7f0000000140)='./file3\x00', 0x0, 0x124)
setxattr$security_capability(&(0x7f0000000180)='./file3\x00', &(0x7f00000001c0), &(0x7f0000000200)=@v2={0x2000000, [{0x6, 0x9f93}, {0x101, 0x42b}]}, 0x14, 0x1)
truncate(&(0x7f0000000380)='./file3\x00', 0x0)
link(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file3/file0\x00')
r1 = open$dir(&(0x7f0000000000)='./file3\x00', 0x80, 0x1d)
open$dir(&(0x7f00000004c0)='./file3\x00', 0x101000, 0x40)
flock(r1, 0x5)
setxattr$incfs_size(&(0x7f0000000100)='./file3/file0\x00', &(0x7f0000000080), &(0x7f00000000c0)=0x42ffae7b, 0x8, 0x5)
truncate(&(0x7f0000000400)='./file3/file0\x00', 0xbe9)
link(&(0x7f0000000240)='./file3/file0\x00', &(0x7f0000000280)='./file3\x00')
lsetxattr$security_ima(&(0x7f0000000500)='./file3\x00', &(0x7f0000000340), &(0x7f00000003c0)=@sha1={0x1, "aee197da3779223124560b0cdce8a733f5d7018a"}, 0x15, 0x0)
chmod(&(0x7f0000000540)='./file0\x00', 0x9)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3160
remove dir: /root/cephfs-client/dfs-0-581
time breakdown 0: 36, 7, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 34, 8, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 38
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-582 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-582
receive_execute: 5, 42
receive_execute: 3, 41
receive_execute: 4, 41
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 41
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 423, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2795, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 0, 3
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1957, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 4173, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 2164
time breakdown 0: 45, 6, 0
----- executor 2 executes write_coverage_signal cov->size 339, flag collect 0
----- executor 2 signal number : 239
executor 2 server cover_cnt 4 output_pos_value 3493
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 45, 7, 0
before receive testcase: 0 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 49
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 16 replies
2023/03/29 03:46:33 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 44, 8, 0
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 4 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 2164 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 239 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
time breakdown 3: 47, 5, 0
before receive testcase: 0 1
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2462 openat openat
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 4
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x18842, 0x0)
r1 = openat(0xffffffffffffff9c, &(0x7f0000000040)='./file0/file0\x00', 0x420600, 0x83)
openat(r0, &(0x7f0000000080)='./file0\x00', 0x202202, 0x88)
pread64(r1, 0x0, 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 640
remove dir: /root/cephfs-client/dfs-0-582
remove dir time 3
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-583 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-583
receive_execute: 1, 7
receive_execute: 2, 7
receive_execute: 6, 5
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
receive_execute: 2, 8
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 2799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 16, 2
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4157, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11068, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 4757
----- executor 2 executes write_coverage_signal cov->size 346, flag collect 0
----- executor 2 signal number : 240
time breakdown 1: 9, 22, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 580
time breakdown 0: 10, 22, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 6931
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 8, 24, 0
before receive testcase: 0 0
time breakdown 3: 11, 21, 0
before receive testcase: 0 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 34
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 4 replies
2023/03/29 03:46:33 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 5 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 4757 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 240 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 580 signal and 0 cover from userspace component
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 18
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='security.SMACK64EXEC\x00', 0x0, 0x0, 0x0)
fstat(r0, &(0x7f00000011c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0, <r2=>0x0})
stat(&(0x7f0000001340)='./file0\x00', &(0x7f00000014c0)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
lsetxattr$system_posix_acl(&(0x7f00000012c0)='./file1\x00', &(0x7f0000001300)='system.posix_acl_default\x00', &(0x7f0000001540)={{}, {0x1, 0x4}, [{0x2, 0x4, r1}, {0x2, 0x4, r3}, {0x2, 0x2, r1}, {0x2, 0x6, 0xee01}, {0x2, 0x3, r1}], {0x4, 0x3}, [{0x8, 0x0, r2}, {0x8, 0x9, r2}], {0x10, 0x4}}, 0x5c, 0x1)
fstat(r0, &(0x7f0000001240)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
lsetxattr$system_posix_acl(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)='system.posix_acl_default\x00', &(0x7f00000013c0)=ANY=[@ANYBLOB="02000000010000000000000002000000", @ANYRES32=r1, @ANYBLOB="02000000", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000400", @ANYRES32, @ANYBLOB="02000200", @ANYRES32=r4, @ANYBLOB="040002000000000008000100", @ANYRES32=0xee01, @ANYBLOB="00a3cc20d50dc6b91a3710b75cb8c1607a63dae52c3fa3b935e46ed5657351e7eb1abfb9a0913cc2adcacf11dddf84b3c954321cb72555f8eb46e30723fb2dc3a1727c1a94d37fe0d58a2805fbc6f35bf0ebbd89b5b1dc906a5a74f1123ca895934ea8e8f7f29155708f15cbc4b6058bb957013397b80491957a620434ebf272e5e600000000000000", @ANYRES32=0xee00, @ANYBLOB="08000300", @ANYRES32=0xee00, @ANYBLOB="10000300000000002000050000000000"], 0x64, 0x1)
open$dir(&(0x7f0000000180)='./file0\x00', 0x400000, 0x16)
setxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000001140)=ANY=[@ANYBLOB="00fb4a054392bc189763f2072b047bcfeb46b8c58453f4f1567241b2ad08aedd53d318a634c08b422a93e4d76ebca3c4f6d0d59b8faafaceee8ca539cf86e36305e397f7c95b3544b549d5"], 0x4a, 0x3)
lsetxattr$trusted_overlay_redirect(&(0x7f0000001380)='./file0\x00', &(0x7f00000015c0), &(0x7f0000001600)='./file1\x00', 0x8, 0x0)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r5=>0x0})
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fstat(r0, &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r7=>0x0})
stat(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r8=>0x0})
stat(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580)={0x0, 0x0, 0x0, 0x0, 0x0, <r9=>0x0})
write$binfmt_aout(r0, &(0x7f0000000700)={{0xcc, 0x0, 0x8, 0x3cd, 0x3c0, 0xfa, 0x107, 0x2}, "d285", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0xa22)
lsetxattr$system_posix_acl(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000240)='system.posix_acl_access\x00', &(0x7f0000000600)={{}, {0x1, 0x7}, [{0x2, 0x2, 0xee00}, {0x2, 0x5, 0xee01}, {0x2, 0x0, 0xffffffffffffffff}, {0x2, 0x0, r5}, {0x2, 0x4, r6}], {0x4, 0x2}, [{0x8, 0x4, 0xee01}, {0x8, 0x1, 0xee01}, {0x8, 0x1, 0xffffffffffffffff}, {0x8, 0x5, r7}, {0x8, 0x3, r8}, {0x8, 0x1, r9}, {0x8, 0x1, 0xee01}, {0x8, 0x1, 0xee00}], {0x10, 0x6}, {0x20, 0x4}}, 0x8c, 0x0)
chmod(&(0x7f0000000140)='./file0\x00', 0x82)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 11176
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-583
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-584 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-584
receive_execute: 7, 11
receive_execute: 9, 11
receive_execute: 8, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 11
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 399, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 3 signal number : 129
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 86
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 525, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 525, flag collect 0
----- executor 3 signal number : 40
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
----- executor 3 write_call_output, size 445, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 445, flag collect 0
----- executor 3 signal number : 15
----- completed 10
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 440, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 440, flag collect 0
----- executor 3 signal number : 1
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 440, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 440, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 440, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 440, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 440, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 440, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 116, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 116, flag collect 0
----- executor 3 signal number : 1
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 871, pid 2802, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 871, flag collect 0
----- executor 3 signal number : 125
----- completed 18
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 21, 0
execute_one time: 1, 36
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16546, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1082
----- executor 2 executes write_coverage_signal cov->size 2752, flag collect 0
----- executor 2 signal number : 546
----- executor 2 executes write_coverage_signal cov->size 1820, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 43, 0
time breakdown 0: 19, 41, 0
before receive testcase: 0 0
----- executor 2 signal number : 7918
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 0
----- executor 2 signal number : 257
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 386
----- executor 2 executes write_coverage_signal cov->size 30931, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 441
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 23911, flag collect 0
----- executor 2 signal number : 4635
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1448
executor 2 server cover_cnt 11 output_pos_value 18213
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 59
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 18 replies
2023/03/29 03:46:33 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 40 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 125 signal and 0 cover from executor 3
time breakdown 2: 18, 47, 0
before receive testcase: 0 0
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 11 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1082 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 546 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 7918 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 257 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 386 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 441 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 4635 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1448 signal and 0 cover from userspace component
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
time breakdown 3: 20, 40, 0
before receive testcase: 0 1
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- splice()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 3765 symlinkat symlinkat
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2458 open open
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2343 link link
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2347 llistxattr llistxattr
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 122 chown chown
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 13
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
open(&(0x7f0000000280)='./file0\x00', 0x9ffbe5a7178a6658, 0x0)
chown(&(0x7f0000000280)='./file0\x00', 0xffffffffffffffff, 0xee01)
r0 = open(&(0x7f0000001640)='./file0\x00', 0x50c40, 0x8)
setxattr$trusted_overlay_upper(&(0x7f0000001040)='./file0\x00', &(0x7f0000001080), 0x0, 0x0, 0x0)
open(0x0, 0x880, 0xa9)
stat(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000040)={0x0, 0x0, 0x0, 0x0, <r1=>0x0, <r2=>0x0})
chown(&(0x7f0000000180)='./file0\x00', r1, r2)
lchown(&(0x7f00000000c0)='./file0\x00', r1, r2)
link(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)='./file0\x00')
symlinkat(&(0x7f0000000100)='./file0\x00', r0, &(0x7f0000000140)='./file0/file0\x00')
open$dir(&(0x7f0000001600)='./file0\x00', 0x2, 0x114)
open(&(0x7f0000000340)='./file0/file0\x00', 0x20800, 0x0)
llistxattr(&(0x7f0000000240)='./file0\x00', &(0x7f00000002c0)=""/85, 0x55)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2080
remove dir: /root/cephfs-client/dfs-0-584
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 15
-----finish removing dir
receive_execute: 5, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-585 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-585
receive_execute: 12, 16
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 2807, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 2807, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 169
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2807, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 232, pid 2807, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 232, flag collect 0
----- executor 3 signal number : 65
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2807, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2807, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 2807, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 2807, write pid:-2127101003
receive_execute: 8, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 16
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10650, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1389
----- executor 2 executes write_coverage_signal cov->size 9969, flag collect 0
----- executor 2 signal number : 919
----- executor 2 executes write_coverage_signal cov->size 348, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 17538, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 27, 8, 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 24, 9, 0
before receive testcase: 0 0
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2807, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2807, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 415, pid 2807, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 3 signal number : 122
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2807, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 179, pid 2807, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 179, flag collect 0
----- executor 3 signal number : 20
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 4, 0
execute_one time: 0, 7
time breakdown 3: 28, 8, 0
before receive testcase: 0 1
----- executor 2 signal number : 5868
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 14879, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 3746
----- executor 2 executes write_coverage_signal cov->size 27815, flag collect 0
----- executor 2 signal number : 2080
executor 2 server cover_cnt 8 output_pos_value 14107
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 29
2023/03/29 03:46:33 ----- PS len: 4
time breakdown 2: 21, 12, 0
2023/03/29 03:46:33 [CLIENT] executor 3 has 13 replies
2023/03/29 03:46:33 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/29 03:46:33 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1389 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 65 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 919 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 5868 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 3746 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 2080 signal and 0 cover from userspace component
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2364 lsetxattr$user lsetxattr$user
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 3
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
lsetxattr$user(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=')\x00', 0x2, 0x6)
symlinkat(&(0x7f0000000100)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
llistxattr(&(0x7f00000002c0)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 592
remove dir: /root/cephfs-client/dfs-0-585
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 25
-----finish removing dir
receive_execute: 7, 32
receive_execute: 6, 32
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 8
executor 3 create dir /root/cephfs-client/dfs-0-586 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-586
receive_execute: 7, 33
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2810, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 3, 32
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 485, pid 2810, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 369
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 148, pid 2810, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 148, flag collect 0
----- executor 3 signal number : 48
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 0, 0
execute_one time: 0, 9
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4325, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1272
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10070, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4450
----- executor 2 executes write_coverage_signal cov->size 6185, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 38, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 532
executor 2 server cover_cnt 4 output_pos_value 6334
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 39, 12, 0
before receive testcase: 0 1
time breakdown 3: 40, 10, 0
before receive testcase: 0 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 46
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 3 replies
2023/03/29 03:46:33 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 369 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 4 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1272 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 4450 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 532 signal and 0 cover from userspace component
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
time breakdown 2: 35, 14, 0
before receive testcase: 0 0
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 3967 truncate truncate
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 5
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9ac0, 0x0)
open$dir(&(0x7f0000000040)='./file0\x00', 0x200, 0x0)
open(&(0x7f0000000000)='./file0\x00', 0x1, 0x138)
truncate(&(0x7f00000000c0)='./file0\x00', 0x1000)
lsetxattr$security_ima(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f00000001c0)=@ng={0x4, 0xd, "064454"}, 0x5, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 880
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-586
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 11
executor 3 create dir /root/cephfs-client/dfs-0-587 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-587
receive_execute: 6, 36
receive_execute: 2, 36
receive_execute: 4, 36
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2814, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 601, pid 2814, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 601, flag collect 0
----- executor 3 signal number : 201
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 393, pid 2814, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 3 signal number : 85
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 4, 36
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 507, pid 2814, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 507, flag collect 0
----- executor 3 signal number : 20
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 211, pid 2814, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 211, flag collect 0
----- executor 3 signal number : 56
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 10, 3, 0
execute_one time: 0, 13
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 21848, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 40, 16, 0
----- executor 2 signal number : 1404
----- executor 2 executes write_coverage_signal cov->size 24779, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 40, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 1035
----- executor 2 executes write_coverage_signal cov->size 746, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7140
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 24432, flag collect 0
time breakdown 3: 42, 14, 0
before receive testcase: 0 1
before receive testcase: 0 0
----- executor 2 signal number : 5257
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1941
executor 2 server cover_cnt 7 output_pos_value 16869
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 38, 23, 0
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 59
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 5 replies
2023/03/29 03:46:33 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 7 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1404 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 201 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1035 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 7140 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 5257 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1941 signal and 0 cover from userspace component
before receive testcase: 0 1
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 6
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000000)='./file0\x00', r0, &(0x7f0000000040)='./file1\x00')
r1 = fcntl$dupfd(r0, 0x0, r0)
getdents64(r1, &(0x7f0000000180)=""/91, 0x5b)
lseek(r0, 0xff0865510000002, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 864
remove dir: /root/cephfs-client/dfs-0-587
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-588 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-588
receive_execute: 3, 15
receive_execute: 12, 14
receive_execute: 10, 15
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2818, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2818, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2818, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2818, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2818, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 172
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 10, pid 2818, write pid:-2127077786
----- executor 3 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 3 signal number : 10
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 0, 9
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 27, 11, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8838, flag collect 0
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 12470, flag collect 0
----- executor 2 signal number : 930
----- executor 2 executes write_coverage_signal cov->size 388, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 26415, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 6684
----- executor 2 executes write_coverage_signal cov->size 2443, flag collect 0
----- executor 2 signal number : 331
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 18190, flag collect 0
----- executor 2 signal number : 3742
----- executor 2 executes write_coverage_signal cov->size 18355, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 1124
executor 2 server cover_cnt 8 output_pos_value 14294
time breakdown 1: 25, 13, 0
before receive testcase: 0 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 32
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 6 replies
2023/03/29 03:46:33 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 930 signal and 0 cover from userspace component
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 6684 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 331 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 3742 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1124 signal and 0 cover from userspace component
time breakdown 2: 18, 17, 0
before receive testcase: 0 0
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2753 read read
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 171 dup2 dup2
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 170 dup dup
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2458 open open
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2350 lseek lseek
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 220 flock flock
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 3765 symlinkat symlinkat
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 17
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$lock(r1, 0x6, &(0x7f0000000100)={0x1})
r2 = open(&(0x7f0000000000)='./file1\x00', 0x101000, 0x50)
flock(r2, 0x0)
r3 = open(&(0x7f0000000480)='./file0\x00', 0x200, 0x1)
open(&(0x7f0000000340)='./file1\x00', 0x2, 0x8)
read(r0, &(0x7f0000000140)=""/179, 0xb3)
symlinkat(&(0x7f00000002c0)='./file1\x00', r3, &(0x7f0000000300)='./file0/file0\x00')
dup(r0)
r4 = dup2(r3, r3)
r5 = fcntl$dupfd(r2, 0x0, r3)
lseek(r5, 0x800, 0x2)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000240)='./file0/file0\x00', &(0x7f0000000080), &(0x7f0000000200)='./file0\x00', 0x8, 0x3)
r6 = dup2(r5, r3)
r7 = fcntl$getown(r4, 0x9)
fcntl$lock(r6, 0x5, &(0x7f0000000040)={0x0, 0x0, 0x200000000000c5, 0x4ddd5b27, r7})
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2744
remove dir: /root/cephfs-client/dfs-0-588
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-589 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-589
receive_execute: 10, 23
receive_execute: 8, 24
receive_execute: 4, 24
receive_execute: 6, 24
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
----- executor 3 write_call_output, size 620, pid 2821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 2821, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 114
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 34
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 605, pid 2821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 605, flag collect 0
----- executor 3 signal number : 127
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 4
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 325, pid 2821, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 325, flag collect 0
----- executor 3 signal number : 146
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2821, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2821, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2821, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2821, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2821, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 1, 0
execute_one time: 1, 12
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 14121, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 19061, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 32, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 985
----- executor 2 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 30, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 8031
----- executor 2 executes write_coverage_signal cov->size 2434, flag collect 0
----- executor 2 signal number : 331
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 13808, flag collect 0
----- executor 2 signal number : 2835
----- executor 2 executes write_coverage_signal cov->size 27718, flag collect 0
time breakdown 3: 33, 14, 0
before receive testcase: 0 1
----- executor 2 signal number : 2114
executor 2 server cover_cnt 8 output_pos_value 15792
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 43
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 17 replies
2023/03/29 03:46:33 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 131 signal and 0 cover from executor 3
time breakdown 2: 28, 20, 0
2023/03/29 03:46:33 fuzzer receive 114 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 985 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 8031 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 331 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 146 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 2835 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 2114 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2341 lchown lchown
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 3765 symlinkat symlinkat
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 5
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='.\x00', &(0x7f0000000040), 0x0, 0x0, 0x0)
setxattr$trusted_overlay_origin(&(0x7f0000000140)='./file0/file0\x00', &(0x7f0000000180), &(0x7f00000001c0), 0x2, 0x4)
lsetxattr$security_ima(&(0x7f0000000200)='./file0/file0\x00', &(0x7f0000000240), &(0x7f0000000280)=@sha1={0x1, "eb16054473af84ad75f437095b4cb99acbfdba2d"}, 0x15, 0x1)
lchown(&(0x7f0000000080)='./file0\x00', 0xffffffffffffffff, 0xffffffffffffffff)
symlinkat(&(0x7f00000000c0)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000100)='./file0\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1184
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-589
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-590 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-590
receive_execute: 12, 17
receive_execute: 10, 18
receive_execute: 9, 18
receive_execute: 5, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 229, pid 2824, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 229, flag collect 0
----- executor 3 signal number : 169
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2824, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 21
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2824, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2824, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2824, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/29 03:46:33 for select break: 1
executor 2 write_server_output
executor 0 write_server_output
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 339, flag collect 0
----- executor 2 signal number : 251
executor 2 server cover_cnt 1 output_pos_value 255
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 27, 5, 0
before receive testcase: 0 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 28, 5, 0
before receive testcase: 0 0
time breakdown 3: 29, 4, 0
before receive testcase: 0 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 28
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 5 replies
2023/03/29 03:46:33 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 1 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 251 signal and 0 cover from userspace component
time breakdown 2: 23, 11, 0
before receive testcase: 0 0
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2344 linkat linkat
2023/03/29 03:46:33 ----- mutateArg()
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 3764 symlink symlink
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 8
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
r0 = open(&(0x7f0000000040)='./file0\x00', 0x242, 0x0)
r1 = open(&(0x7f00000001c0)='./file0\x00', 0x20200, 0x40)
linkat(r1, &(0x7f0000000200)='./file0\x00', r0, &(0x7f0000000240)='./file0\x00', 0x1000)
open$dir(&(0x7f0000000340)='./file0\x00', 0x400000, 0x140)
fsetxattr$security_smack_transmute(r0, &(0x7f0000000100), 0x0, 0x0, 0x0)
setxattr$security_evm(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f0000000280)=ANY=[@ANYRES64, @ANYRES64, @ANYRES32=r1, @ANYRES32=r0, @ANYRESDEC, @ANYRES64=r0, @ANYRES16], 0x11, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x2, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1936
remove dir: /root/cephfs-client/dfs-0-590
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 4
-----finish removing dir
mkdir time 7
executor 3 create dir /root/cephfs-client/dfs-0-591 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-591
receive_execute: 9, 11
receive_execute: 7, 11
receive_execute: 1, 11
receive_execute: 7, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2827, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2827, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2827, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2827, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2827, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2827, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2827, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 2827, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 186
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 0, 6
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
time breakdown 3: 20, 8, 0
executor 1 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 8128, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1284
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17904, flag collect 0
----- executor 2 signal number : 5346
----- executor 2 executes write_coverage_signal cov->size 712, flag collect 0
----- executor 2 signal number : 258
----- executor 2 executes write_coverage_signal cov->size 6185, flag collect 0
----- executor 2 signal number : 547
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 10, 0
executor 2 server cover_cnt 5 output_pos_value 7518
before receive testcase: 0 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 23
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 8 replies
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 2 has 5 replies
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1284 signal and 0 cover from userspace component
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 186 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 12, 12, 0
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 5346 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 258 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 547 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 0: 18, 12, 0
before receive testcase: 0 0
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2809 rename rename
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 7
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
setxattr$security_selinux(&(0x7f0000000100)='./file1/file0\x00', &(0x7f0000000140), &(0x7f00000001c0)='system_u:object_r:lvm_control_t:s0\x00', 0x23, 0x2)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
rename(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0)='./file1/file0\x00')
rename(&(0x7f0000000240)='./file1/file0\x00', &(0x7f00000004c0)='./file0\x00')
setxattr$smack_xattr_label(&(0x7f0000000080)='./file1/../file0\x00', 0x0, 0x0, 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1248
remove dir: /root/cephfs-client/dfs-0-591
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 35
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-592 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-592
receive_execute: 5, 36
receive_execute: 2, 36
receive_execute: 2, 36
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
receive_execute: 3, 36
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 511, pid 2830, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 2830, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 2830, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 32
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 836, pid 2830, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 836, flag collect 0
----- executor 3 signal number : 81
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 203, pid 2830, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 203, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 766, pid 2830, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 766, flag collect 0
----- executor 3 signal number : 14
----- completed 6
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 208, pid 2830, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 208, flag collect 0
----- executor 3 signal number : 2
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 23, 6, 0
execute_one time: 1, 29
2023/03/29 03:46:33 for select break: 1
executor 2 write_server_output
time breakdown 3: 41, 32, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 18571, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1396
----- executor 2 executes write_coverage_signal cov->size 18667, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 38, 33, 0
before receive testcase: 0 0
----- executor 2 signal number : 925
----- executor 2 executes write_coverage_signal cov->size 776, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 39, 34, 0
before receive testcase: 0 0
----- executor 2 signal number : 6966
----- executor 2 executes write_coverage_signal cov->size 2530, flag collect 0
----- executor 2 signal number : 346
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5477
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1756
executor 2 server cover_cnt 8 output_pos_value 16961
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 76
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 7 replies
2023/03/29 03:46:33 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1396 signal and 0 cover from userspace component
time breakdown 2: 38, 40, 0
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 925 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 6966 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 346 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 5477 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1756 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:46:33 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 81 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 5
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x121400, 0x100)
fcntl$getownex(r0, 0x10, &(0x7f0000000040))
r1 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x40, 0x0)
fsetxattr$security_evm(r1, &(0x7f00000000c0), 0x0, 0x0, 0x0)
write$binfmt_elf32(r1, &(0x7f0000000240)={{0x7f, 0x45, 0x4c, 0x46, 0x3f, 0xca, 0x1, 0x9, 0x6, 0x3, 0x6, 0x401, 0x18b, 0x38, 0x1de, 0x100, 0x6, 0x20, 0x1, 0x1, 0x6, 0xffff}, [{0x6474e551, 0x9, 0xfa, 0x9, 0x5, 0x45, 0x3, 0x4}], "80d8b25984c992a11c408de78cae01054a1cd2cf8b34ae3e22a150960a7538463f98d495c8f1ed08f8d86a1f08f766dc8c547cda5281880aa6aa13101c06ca5af1401483192fff4962fde84148b9d0d6bbaa9caa461d8455a4c88c80f9da560113cdaaf07199422f9843237406a1002a01c09889d647036d55ca7428c5e7765c2ea5c1dacbfdee807b5213e2d4db08caa0ce4f274c2923d48e1da82121bc7976a70cbc430abc5d0ae27d30076270fb1d82d69fd82c3fc15036bee220604fc3454225cb666f347efcc7450b5e9c800be00cbf0471f3a10e8a987f3fb92b846da560bd8b4114ada29040c59481ec101561fb093cc515aa92"}, 0x14f)
---

end of program
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2240
remove dir: /root/cephfs-client/dfs-0-592
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 29
executor 3 create dir /root/cephfs-client/dfs-0-593 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-593
receive_execute: 13, 42
receive_execute: 11, 43
receive_execute: 5, 42
receive_execute: 21, 33
executor 1 before execute_one
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
execute_one time: 0, 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 2833, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 365
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2833, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 615, pid 2833, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 615, flag collect 0
----- executor 3 signal number : 201
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 176, pid 2833, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 176, flag collect 0
----- executor 3 signal number : 128
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2833, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 1, 4
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 55, 6, 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6165, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1267
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15713, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 54, 7, 0
----- executor 2 signal number : 5406
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 530
executor 2 server cover_cnt 4 output_pos_value 7283
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 54, 8, 0
before receive testcase: 0 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 47, 8, 0
before receive testcase: 0 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:33 wg wait finish
2023/03/29 03:46:33 ------ all executors finish execution
2023/03/29 03:46:33 exec time: 60
2023/03/29 03:46:33 ----- PS len: 4
2023/03/29 03:46:33 [CLIENT] executor 3 has 5 replies
2023/03/29 03:46:33 fuzzer receive 365 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 201 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 128 signal and 0 cover from executor 3
2023/03/29 03:46:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:33 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:33 [SERVER] executor 2 has 4 replies
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 1267 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 5406 signal and 0 cover from userspace component
2023/03/29 03:46:33 ------- fuzzer executor 2 receive 530 signal and 0 cover from userspace component
2023/03/29 03:46:33 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:33 ----- no new client coverage: false, true
2023/03/29 03:46:33 mutate testcase with failures
2023/03/29 03:46:33 ----- insertCall()
2023/03/29 03:46:33 ----- generateCall 2808 removexattr removexattr
2023/03/29 03:46:33 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:33 prog length: 4
2023/03/29 03:46:33 HasCrashFail:false HasNetFail:false
03:46:33 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0xa40, 0x0)
setxattr$user(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), 0x0, 0x0, 0x0)
fsync(r0)
removexattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@known='system.posix_acl_default\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/cephfs-client/dfs-0-593
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-594 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-594
receive_execute: 14, 9
receive_execute: 11, 10
receive_execute: 11, 10
receive_execute: 12, 10
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 1, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2835, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 2835, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 162
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 322, pid 2835, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 322, flag collect 0
----- executor 3 signal number : 201
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2835, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 4, 0
execute_one time: 1, 14
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 14123, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 17654, flag collect 0
----- executor 2 signal number : 1023
----- executor 2 executes write_coverage_signal cov->size 574, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 31001, flag collect 0
time breakdown 0: 22, 18, 0
before receive testcase: 0 1
----- executor 2 signal number : 7141
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 13795, flag collect 0
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:33 for select break: 1
2023/03/29 03:46:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 3220
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 23, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 2100
executor 2 server cover_cnt 7 output_pos_value 14972
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 32
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 4 replies
2023/03/29 03:46:34 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 fuzzer receive 201 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 2 has 7 replies
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
time breakdown 2: 21, 23, 0
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1023 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 7141 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3220 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 2100 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2462 openat openat
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 5
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file3\x00', 0x141000, 0x2)
mkdirat(0xffffffffffffff9c, &(0x7f0000000580)='./file3\x00', 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000040)='./file3\x00', &(0x7f0000000380), &(0x7f00000003c0)={0x0, 0xfb, 0x15, 0x1, 0x0, "9733cce18b5e0ef92eaaebe601093713"}, 0xfffffe50, 0x2)
openat(0xffffffffffffffff, &(0x7f0000000080)='./file3\x00', 0x2, 0x1)
lsetxattr$trusted_overlay_upper(&(0x7f0000000140)='./file3\x00', &(0x7f0000000180), 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1168
remove dir: /root/cephfs-client/dfs-0-594
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-595 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-595
receive_execute: 10, 10
receive_execute: 3, 10
receive_execute: 7, 10
receive_execute: 7, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
executor 3 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 423, pid 2838, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 2838, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 162
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2838, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 6
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2838, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 2838, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 138
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 4
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 5, 0
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6076, flag collect 0
----- executor 2 signal number : 1266
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15300, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5205
----- executor 2 executes write_coverage_signal cov->size 661, flag collect 0
----- executor 2 signal number : 247
----- executor 2 executes write_coverage_signal cov->size 7113, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 6, 0
before receive testcase: 0 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 527
executor 2 server cover_cnt 5 output_pos_value 7328
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 17
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 5 replies
2023/03/29 03:46:34 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 5 replies
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1266 signal and 0 cover from userspace component
time breakdown 2: 13, 8, 0
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 138 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 5205 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 247 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- splice()
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 6
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
r1 = dup(r0)
lseek(r1, 0x0, 0x0)
mkdirat(0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00', 0x0)
lsetxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='trusted.overlay.redirect\x00', 0x0, 0x0, 0x0)
lgetxattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB='user.trusted.overlay.redirec8.'], 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 944
remove dir: /root/cephfs-client/dfs-0-595
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 17, 6, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 37
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-596 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-596
receive_execute: 2, 38
receive_execute: 4, 38
receive_execute: 3, 39
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2841, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2841, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4, pid 2841, write pid:-2127041725
----- executor 3 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 3 signal number : 4
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2841, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 273, pid 2841, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 3 signal number : 131
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 187, pid 2841, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 187, flag collect 0
----- executor 3 signal number : 23
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 42, 5, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4250, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 11644, flag collect 0
receive_execute: 3, 39
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4893
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 42, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 526
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 42, 6, 0
executor 2 server cover_cnt 4 output_pos_value 6759
before receive testcase: 0 0
time breakdown 2: 40, 8, 0
before receive testcase: 0 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 53
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 4 replies
2023/03/29 03:46:34 [CLIENT] executor 3 has 6 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 4893 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 526 signal and 0 cover from userspace component
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 4127 write$binfmt_aout write$binfmt_aout
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 6
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x1456c1, 0x0)
write$binfmt_misc(r0, 0x0, 0x10000000000)
write(r0, &(0x7f0000000000)='3', 0x1)
write$binfmt_elf64(r0, &(0x7f0000000100)={{0x7f, 0x45, 0x4c, 0x46, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40}, [{}]}, 0x78)
r1 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x111480, 0x103)
write$binfmt_aout(r1, &(0x7f0000000180)={{0x107, 0x3, 0x4, 0x241, 0x2a7, 0x5, 0x1d1, 0x3}, "f7e009d7a08e511ab52f58d0982b2f1307785f815693d6566afe5eea7365c9ba6dbd1465e49e81a2b2413376b7c1650680f75de0089093ddac86bb54919964f909c091c8725b228a08b5846e0af2627032e0ea28957ce93ca41f99cdf456cbf2663cf683650f510c6541a62127bd08c1bd1ef30f21f1185e135b50d686ddd78a4beb1595d79133586018c8c2d4aade9c02dc740af2cb91344c5efc4d26ca1d20441c", ['\x00', '\x00', '\x00']}, 0x3c2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3512
remove dir: /root/cephfs-client/dfs-0-596
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-597 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-597
receive_execute: 12, 22
receive_execute: 10, 23
receive_execute: 8, 23
receive_execute: 9, 23
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2844, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 910, pid 2844, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 910, flag collect 0
----- executor 3 signal number : 518
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 1369, pid 2844, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1369, flag collect 0
----- executor 3 signal number : 496
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 1075, pid 2844, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1075, flag collect 0
----- executor 3 signal number : 17
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2844, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2844, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 24, 0, 0
execute_one time: 1, 24
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16188, flag collect 0
time breakdown 3: 34, 27, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1408
----- executor 2 executes write_coverage_signal cov->size 10888, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 905
----- executor 2 executes write_coverage_signal cov->size 451, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 32, 28, 0
time breakdown 1: 33, 27, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 19874, flag collect 0
----- executor 2 signal number : 5888
----- executor 2 executes write_coverage_signal cov->size 5290, flag collect 0
----- executor 2 signal number : 407
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 13730, flag collect 0
----- executor 2 signal number : 3068
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2134
executor 2 server cover_cnt 8 output_pos_value 13905
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 54
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 6 replies
2023/03/29 03:46:34 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 518 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 496 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1408 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 905 signal and 0 cover from userspace component
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 5888 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 407 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3068 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 2134 signal and 0 cover from userspace component
time breakdown 2: 31, 31, 0
before receive testcase: 0 0
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2341 lchown lchown
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 233 fsetxattr$security_evm fsetxattr$security_evm
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 10
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000340)='./file0/file0\x00', 0x10540, 0x42)
setxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2, 0x14, 0x2)
stat(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000140))
fstat(r0, &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fsetxattr$security_evm(r0, &(0x7f0000000440), &(0x7f0000000480)=@v1={0x2, "cc896da1b378aa08d2eafc76938c988d0d3dc637"}, 0x15, 0x3)
lchown(&(0x7f0000000100)='./file0\x00', 0x0, r1)
lsetxattr(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)=@known='trusted.overlay.redirect\x00', &(0x7f0000000300)='-\x00', 0x2, 0x0)
fstat(0xffffffffffffffff, &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f0000000380)='./file0\x00', r2, r1)
unlink(&(0x7f0000000240)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1968
remove dir: /root/cephfs-client/dfs-0-597
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-598 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-598
receive_execute: 4, 7
receive_execute: 8, 7
receive_execute: 7, 7
receive_execute: 8, 6
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- executor 3 write_call_output, size 85, pid 2847, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 93, pid 2847, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2847, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2847, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2847, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2847, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2847, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2847, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2847, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2847, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 704, flag collect 0
----- executor 2 signal number : 283
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 1 output_pos_value 287
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 11, 5, 0
before receive testcase: 0 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 6, 0
before receive testcase: 0 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 13
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 10 replies
2023/03/29 03:46:34 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 1 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 283 signal and 0 cover from userspace component
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2373 mkdir mkdir
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 4131 write$binfmt_script write$binfmt_script
time breakdown 3: 15, 4, 0
before receive testcase: 0 1
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 9
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file1\x00')
r0 = open(&(0x7f0000000500)='./file0\x00', 0x30440, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000580)='./file0\x00', &(0x7f0000000440), &(0x7f00000005c0)=ANY=[], 0x5c, 0x0)
setxattr$security_smack_transmute(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), 0x0, 0x0, 0x3)
lsetxattr$security_selinux(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), 0x0, 0x0, 0x0)
chown(&(0x7f0000000000)='./file1\x00', 0x0, 0xee01)
r1 = fcntl$dupfd(r0, 0x0, r0)
write$binfmt_script(r1, &(0x7f00000005c0)=ANY=[@ANYBLOB=""], 0x100f)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 14, 6, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5680
remove dir: /root/cephfs-client/dfs-0-598
remove dir time 2
-----finish removing dir
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-599 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-599
receive_execute: 3, 4
receive_execute: 0, 4
receive_execute: 1, 4
receive_execute: 1, 4
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 2850, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2850, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 2850, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 147
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2850, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 103
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 2850, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 66
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 425, pid 2850, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 425, flag collect 0
----- executor 3 signal number : 14
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 208, pid 2850, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 208, flag collect 0
----- executor 3 signal number : 68
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2850, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2850, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 2, 0
execute_one time: 0, 13
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16556, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1421
----- executor 2 executes write_coverage_signal cov->size 20856, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 5, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 1012
----- executor 2 executes write_coverage_signal cov->size 1025, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 4, 17, 0
----- executor 2 signal number : 7949
----- executor 2 executes write_coverage_signal cov->size 4143, flag collect 0
----- executor 2 signal number : 384
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 30091, flag collect 0
time breakdown 3: 7, 15, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 4983
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1459
executor 2 server cover_cnt 8 output_pos_value 17306
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 26
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 9 replies
2023/03/29 03:46:34 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 147 signal and 0 cover from executor 3
time breakdown 2: 5, 22, 0
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1421 signal and 0 cover from userspace component
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/29 03:46:34 fuzzer receive 103 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 66 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 68 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1012 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 7949 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 384 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 4983 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1459 signal and 0 cover from userspace component
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 3970 unlink unlink
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2347 llistxattr llistxattr
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 9
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000380)='./file1/file0\x00', 0x648600, 0x4a)
openat(0xffffffffffffff9c, &(0x7f0000001300)='./file0\x00', 0x30e43, 0x20)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000280)=ANY=[@ANYBLOB="2321202e2f66696c65302f2e2e2f66696c653020757365722e696e6366732e6d6574616461746100202a20757365722e696e6366732e6d657461646174e15a727b7275737465642e6f7665726c61792e7265646972656374000afe2a6d7562fe24a92d95a970d560f12fc95c6d7618d1a917f9c7f12ee2218b5d4f9c22c7cac96123b648dfb9908ff6d2a9dd1e2292e6e064d2922b4c588498043438955fd3428434223894ef1dd205f226cd9a2e1d73434208dc485ab02f81534d7709544beda8ffc61baba305291c82dd8fd8017fdd8bcabe53f2111121e4bdaf64c0dfc5293fcc77eb2f1a6488060000000000000000"], 0xf1)
open$dir(&(0x7f0000000740)='./file0\x00', 0x0, 0x0)
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000002340)="", 0x1000, 0x2)
llistxattr(&(0x7f00000001c0)='./file1/file0\x00', &(0x7f0000000200)=""/114, 0x72)
lsetxattr$trusted_overlay_redirect(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), &(0x7f0000000140)='./file1\x00', 0x8, 0x3)
unlink(&(0x7f0000000080)='./file1\x00')
unlink(&(0x7f0000000180)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5800
remove dir: /root/cephfs-client/dfs-0-599
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-600 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-600
receive_execute: 10, 13
receive_execute: 10, 13
receive_execute: 4, 13
receive_execute: 9, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2854, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 622, pid 2854, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 469
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2854, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 2854, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 132
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 549, pid 2854, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 549, flag collect 0
----- executor 3 signal number : 97
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2854, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2854, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2854, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 491, pid 2854, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 491, flag collect 0
----- executor 3 signal number : 40
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 3, 0
execute_one time: 1, 6
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 19293, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1323
----- executor 2 executes write_coverage_signal cov->size 870, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 23, 9, 0
before receive testcase: 0 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 7443
----- executor 2 executes write_coverage_signal cov->size 1669, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 32291, flag collect 0
----- executor 2 signal number : 790
executor 2 server cover_cnt 5 output_pos_value 9927
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 12, 0
before receive testcase: 0 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 27
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 9 replies
2023/03/29 03:46:34 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 469 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 132 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 40 signal and 0 cover from executor 3
time breakdown 2: 17, 13, 0
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 5 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1323 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 7443 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 790 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 3
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000140)={0x0, 0xfb, 0x5b, 0x6, 0xff, "8c7fdc73deb46dc9d0c02d2936faca74", "bcdcbaebdd5143688ab92e10703ed9addcc21e0e44c5a1d0e85e55531ba46eaab70dfb1b4b2dea3eea11be04063fce73e27dfb8e2e7c51319534571601016d0c63b11bc608c8"}, 0x5b, 0x3)
truncate(&(0x7f0000000080)='./file0\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 848
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-600
remove dir time 7
-----finish removing dir
mkdir time 6
executor 3 create dir /root/cephfs-client/dfs-0-601 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-601
receive_execute: 7, 13
receive_execute: 3, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2858, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 5, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 524, pid 2858, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 524, flag collect 0
----- executor 3 signal number : 211
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 571, pid 2858, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 571, flag collect 0
----- executor 3 signal number : 111
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
2023/03/29 03:46:34 for select break: 1
executor 2 write_server_output
executor 0 write_server_output
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 11497, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1307
----- executor 2 executes write_coverage_signal cov->size 388, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 26919, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 20, 6, 0
before receive testcase: 0 1
time breakdown 0: 17, 7, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 18, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 6356
----- executor 2 executes write_coverage_signal cov->size 1336, flag collect 0
----- executor 2 signal number : 284
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 530
executor 2 server cover_cnt 5 output_pos_value 8560
before receive testcase: 0 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 23
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 3 replies
2023/03/29 03:46:34 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 211 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 111 signal and 0 cover from executor 3
time breakdown 2: 16, 9, 0
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 5 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1307 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 6356 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 284 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 530 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/29 03:46:34 ----- splice()
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 8
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x242, 0x0)
fchown(r0, 0x0, 0x0)
r1 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x540, 0x15)
setxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)='./file0\x00', 0x8, 0x1)
fsetxattr$smack_xattr_label(r1, &(0x7f00000002c0)='security.SMACK64\x00', 0x0, 0x0, 0x0)
r2 = dup2(r1, r1)
r3 = dup2(r2, r1)
fcntl$dupfd(r2, 0x0, r3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1296
remove dir: /root/cephfs-client/dfs-0-601
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-602 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-602
receive_execute: 5, 10
receive_execute: 5, 9
receive_execute: 4, 10
receive_execute: 2, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 2861, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2861, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 0
----- executor 3 signal number : 140
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 597, pid 2861, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 597, flag collect 0
----- executor 3 signal number : 6
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 2861, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 94
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 139, pid 2861, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 139, flag collect 0
----- executor 3 signal number : 18
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2861, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2861, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2861, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 1, 5
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6546, flag collect 0
----- executor 2 signal number : 1283
----- executor 2 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 19834, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5594
----- executor 2 executes write_coverage_signal cov->size 2089, flag collect 0
----- executor 2 signal number : 314
----- executor 2 executes write_coverage_signal cov->size 12365, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 9, 0
before receive testcase: 0 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 8, 0
----- executor 2 signal number : 580
executor 2 server cover_cnt 5 output_pos_value 7854
time breakdown 3: 15, 7, 0
before receive testcase: 0 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 19
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 8 replies
2023/03/29 03:46:34 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 2 has 5 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 fuzzer receive 94 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1283 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 12, 9, 0
before receive testcase: 0 0
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 5594 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 314 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 580 signal and 0 cover from userspace component
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 2
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file0\x00', 0x1c1bc0, 0x0)
lgetxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000040)=@known='user.incfs.id\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 352
remove dir: /root/cephfs-client/dfs-0-602
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
receive_execute: 5, 22
receive_execute: 3, 23
receive_execute: 5, 22
remove dir time 22
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-603 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-603
receive_execute: 6, 23
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 2864, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 212, pid 2864, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 212, flag collect 0
----- executor 3 signal number : 93
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 29, 4, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 4252, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11673, flag collect 0
----- executor 2 signal number : 4903
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 7923, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 27, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 563
executor 2 server cover_cnt 5 output_pos_value 6819
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 26, 5, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 28, 14, 0
before receive testcase: 0 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 37
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 2 replies
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 5 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 4903 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 563 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 ----- generateCall 3970 unlink unlink
2023/03/29 03:46:34 ----- generateCall 3761 stat stat
2023/03/29 03:46:34 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/29 03:46:34 ----- generateCall 248 fstat fstat
2023/03/29 03:46:34 ----- generateCall 2814 rmdir rmdir
2023/03/29 03:46:34 ----- generateCall 3970 unlink unlink
2023/03/29 03:46:34 ----- generateCall 248 fstat fstat
2023/03/29 03:46:34 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/29 03:46:34 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/29 03:46:34 ----- generateCall 2858 sendfile sendfile
2023/03/29 03:46:34 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/29 03:46:34 ----- generateCall 3765 symlinkat symlinkat
2023/03/29 03:46:34 ----- generateCall 4200 writev writev
2023/03/29 03:46:34 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/29 03:46:34 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/29 03:46:34 ----- generateCall 2462 openat openat
2023/03/29 03:46:34 map[./file0:true ./file1:true]
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 20
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
unlink(&(0x7f0000000000)='./file0\x00')
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080))
lsetxattr$smack_xattr_label(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140)='security.SMACK64IPOUT\x00', &(0x7f0000000180)={'\'{++-'}, 0x6, 0x1)
fstat(0xffffffffffffffff, &(0x7f00000001c0))
rmdir(&(0x7f0000000240)='./file1\x00')
unlink(&(0x7f0000000280)='./file0\x00')
r0 = open$dir(&(0x7f00000002c0)='./file0\x00', 0x20000, 0x80)
fstat(r0, &(0x7f0000000300))
lremovexattr(&(0x7f0000000380)='./file1\x00', &(0x7f00000003c0)=@random={'system.', '\'{++-'})
r1 = fcntl$dupfd(r0, 0x406, r0)
write$binfmt_elf64(r1, &(0x7f0000000400)={{0x7f, 0x45, 0x4c, 0x46, 0x6, 0x2, 0x5, 0x6, 0x2, 0x3, 0x6, 0x2, 0x0, 0x40, 0x333, 0xffff81a7, 0x7fff, 0x38, 0x1, 0x7, 0x9, 0x142c}, [{0x2, 0xffffffff, 0x1, 0xfffffffffffffffb, 0x800, 0x4, 0x1, 0x7fff}], "1649239ff682ddaa8a0a8d34e8a46946a97c2691bf1924994664d5957810f5a5bafbf68f1c94e82d102ef01c38851619fab4ab62f19d1ef242beccc147feb9bbf8162ace49d2af86105837d0e951804ab59cfde8ecc7b99b87a53cbd3e1bf9f41fe5d2cd3d7fbcfc2aa59cc8a8c6d452", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x9e8)
sendfile(r0, r1, &(0x7f0000000e00)=0x4, 0xaa22)
fcntl$addseals(r1, 0x409, 0xa)
symlinkat(&(0x7f0000000e40)='./file1\x00', r1, &(0x7f0000000e80)='./file1\x00')
r2 = fcntl$dupfd(r0, 0x406, r0)
writev(r2, &(0x7f0000002000)=[{&(0x7f0000000ec0)="", 0x1000}, {&(0x7f0000001ec0)="b2cb5b2d1969aa8aea50f5d8ac305ca421db237bcfe2404dfc8840d4fd565e0750f8c519e6d22e15dae3e1fa9ae4f83247b0d56a54ac1fb678dc728a0403cd308c38abb76690717b5eba36a19233340e1032e65dcd9797c088d4afe354c29ed383bebbe5f1eb0d77823a2806f3a66d3f5d4e6b2637ee520faea6f08432e758e95bd406ccd4a7e5ede9f42be429377e918fd046f5bed70c01447f8f149b03b612f26f9e9d5541443f6f393d729714c463cc9f4a9eb0ce5d58dab21011885b0bbaf1049e408cccad454e963d65d9bf9c2520834c010f580dc82e5e8b27023f58093111", 0xe2}, {&(0x7f0000001fc0)="cd0183d238ecf0fe3c7a30f1be0d7c16c65f9dd779040a9d4136f4c38bf5fb3d2e8d710223b824a7956d13159c5d296b7bc6206d", 0x34}], 0x3)
r3 = open(&(0x7f0000002040)='./file0\x00', 0x430c00, 0x8)
write$binfmt_elf32(r3, &(0x7f0000002080)={{0x7f, 0x45, 0x4c, 0x46, 0x0, 0x6, 0xf2, 0x7, 0x7fffffff, 0x2, 0x3e, 0x3ff, 0x22d, 0x38, 0x359, 0x48b5c111, 0x101, 0x20, 0x2, 0x4, 0x6, 0x6}, [{0x3, 0xc7, 0x5ce, 0x2, 0x5, 0x4, 0xffffffff, 0x9}, {0x2, 0xfffffffc, 0x47d, 0xffffffff, 0x5, 0xcf0, 0x0, 0x1}], "9b56f3fa2d94a99939dddd23d33c35dae4142bb9b4051785178612d80caaff8a5b27be116eda06c9c70f5f308bdf912359320972d357c39154db0e9b1efdb39a46a2765605704dcdec7f959a223ed3cc3aaa9e95d89e8075ba5220fc05dee04e47cf02e81e7675cd2387d31ec6b3075d6b75e39c4f08b9dfd53dd94be5f0d75eef875d41207dae351eac62ff0e73de391faaefc9196d93466ac08221a038c27edd99ea10a2ec43884585e0451a9e5a07b6712ba339a8367658b5003b2bcb0116d7add0fe8845c91c2676c50503455a7a4ba2da64e694bcf025febc6e164a4e3d493f1097d209857e8d9be4329161", ['\x00', '\x00', '\x00', '\x00']}, 0x566)
lsetxattr$security_smack_transmute(&(0x7f0000002600)='./file1\x00', &(0x7f0000002640), &(0x7f0000002680), 0x4, 0x2)
openat(r0, &(0x7f00000026c0)='./file0\x00', 0x40, 0x40)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 14584
remove dir: /root/cephfs-client/dfs-0-603
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
receive_execute: 12, 17
receive_execute: 11, 18
receive_execute: 2, 18
mkdir time 7
executor 3 create dir /root/cephfs-client/dfs-0-604 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-604
receive_execute: 12, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 2, 0
execute_one time: 1, 5
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4423, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 29, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 526, flag collect 0
----- executor 2 signal number : 167
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 3108, flag collect 0
----- executor 2 signal number : 1693
----- executor 2 executes write_coverage_signal cov->size 11309, flag collect 0
----- executor 2 signal number : 1549
executor 2 server cover_cnt 6 output_pos_value 4884
2023/03/29 03:46:34 for select break: 1
time breakdown 0: 20, 8, 0
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 26
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 20 replies
2023/03/29 03:46:34 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 6 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 167 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1693 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1549 signal and 0 cover from userspace component
time breakdown 2: 29, 9, 0
before receive testcase: 0 0
time breakdown 3: 30, 7, 0
before receive testcase: 0 1
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2341 lchown lchown
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 6
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file1\x00', 0x12c41, 0x0)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="", 0x1000, 0x3)
fstat(r0, &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000080)='./file1\x00', 0x0, r1)
truncate(&(0x7f0000000000)='./file1\x00', 0x1)
lsetxattr$security_capability(&(0x7f00000011c0)='./file0\x00', &(0x7f0000001200), &(0x7f0000001240)=@v3={0x3000000, [{0x401, 0x3ff}, {0x0, 0x7fffffff}], 0xee00}, 0x18, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5392
remove dir: /root/cephfs-client/dfs-0-604
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-605 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-605
receive_execute: 2, 14
receive_execute: 3, 15
receive_execute: 3, 14
receive_execute: 4, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 2869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 16
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 722, pid 2869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 722, flag collect 0
----- executor 3 signal number : 232
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 785, pid 2869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 785, flag collect 0
----- executor 3 signal number : 47
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 1, 5
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 18, 8, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 17696, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1304
----- executor 2 executes write_coverage_signal cov->size 868, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 9, 0
before receive testcase: 0 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 6751
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1574
executor 2 server cover_cnt 4 output_pos_value 9711
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 28
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 6 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 4 replies
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1304 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 232 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 6751 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1574 signal and 0 cover from userspace component
time breakdown 2: 16, 13, 0
before receive testcase: 0 0
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 12
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
lsetxattr$security_ima(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f00000002c0)=ANY=[@ANYBLOB="029dfa11b3080000000000c507000000000000002a2cc675e284d316e9763b2a2af407fce75cbc2155137f4b9438f0164cdb7c1bb170fc88bc11e4ece6845d7d61e911134f1ff573f2efacbe98416b7a822914e90da1ec943e67435018e0d79fc9e003"], 0x15, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x2840, 0x0)
lchown(&(0x7f0000000180)='./file0\x00', 0xee01, 0x0)
chown(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r0, r0)
open$dir(&(0x7f0000000140)='./file0\x00', 0x600, 0x6)
openat(0xffffffffffffffff, &(0x7f00000001c0)='./file0/file0\x00', 0x10000, 0xa2)
r1 = dup(r0)
fstat(r1, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
dup2(r1, 0xffffffffffffffff)
lchown(&(0x7f0000000100)='./file0\x00', 0x0, r2)
fchmod(r1, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1784
remove dir: /root/cephfs-client/dfs-0-605
remove dir time 25
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-606 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-606
receive_execute: 8, 27
receive_execute: 3, 26
receive_execute: 7, 26
receive_execute: 7, 26
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 657, pid 2872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 657, flag collect 0
----- executor 3 signal number : 470
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 2872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 149
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 2872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 8
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 569, pid 2872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 569, flag collect 0
----- executor 3 signal number : 85
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2872, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2872, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 224, pid 2872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 224, flag collect 0
----- executor 3 signal number : 7
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 68, pid 2872, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 68, flag collect 0
----- executor 3 signal number : 8
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 13, 4, 0
execute_one time: 1, 17
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 35, 19, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 17292, flag collect 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1399
----- executor 2 executes write_coverage_signal cov->size 23030, flag collect 0
----- executor 2 signal number : 1015
----- executor 2 executes write_coverage_signal cov->size 766, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 33, 21, 0
time breakdown 1: 33, 21, 0
before receive testcase: 0 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 50
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 12 replies
2023/03/29 03:46:34 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 470 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 149 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1399 signal and 0 cover from userspace component
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1015 signal and 0 cover from userspace component
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 7554 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 293 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3531 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 2398 signal and 0 cover from userspace component
before receive testcase: 0 0
----- executor 2 signal number : 7554
----- executor 2 executes write_coverage_signal cov->size 1031, flag collect 0
----- executor 2 signal number : 293
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 15133, flag collect 0
----- executor 2 signal number : 3531
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2398
executor 2 server cover_cnt 8 output_pos_value 16287
time breakdown 2: 29, 25, 0
before receive testcase: 0 0
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 20
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x8)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$getown(0xffffffffffffffff, 0x9)
openat(0xffffffffffffff9c, &(0x7f0000000480)='./file0\x00', 0x0, 0x48)
r5 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x2, 0x1, 0x100000000, r5})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r0, 0x26, &(0x7f0000000200)={0x0, 0x1, 0x9164, 0x100000001, r4})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x26, &(0x7f00000001c0)={0x0, 0x1, 0x400})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0)={0x0, <r6=>0x0})
fcntl$lock(r3, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x10000000, 0xc9, r6})
r7 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r7, r3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3864
remove dir: /root/cephfs-client/dfs-0-606
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-607 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-607
receive_execute: 10, 10
receive_execute: 8, 10
receive_execute: 4, 11
receive_execute: 8, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 2877, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 2877, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 12
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 321, pid 2877, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 3 signal number : 13
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 357, pid 2877, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 357, flag collect 0
----- executor 3 signal number : 29
----- completed 18
----- executor 3 write_call_output, size 316, pid 2877, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 0
----- completed 19
----- executor 3 write_call_output, size 315, pid 2877, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 315, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 113, 1, 2
execute_one time: 1, 116
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 118, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 14121, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1084
----- executor 2 executes write_coverage_signal cov->size 1237, flag collect 0
----- executor 2 signal number : 285
----- executor 2 executes write_coverage_signal cov->size 1484, flag collect 0
time breakdown 0: 19, 119, 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 120, 0
before receive testcase: 0 0
----- executor 2 signal number : 7420
----- executor 2 executes write_coverage_signal cov->size 1066, flag collect 0
----- executor 2 signal number : 318
----- executor 2 executes write_coverage_signal cov->size 2462, flag collect 0
----- executor 2 signal number : 343
----- executor 2 executes write_coverage_signal cov->size 31085, flag collect 0
----- executor 2 signal number : 442
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 16950, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 3951
----- executor 2 executes write_coverage_signal cov->size 27700, flag collect 0
----- executor 2 signal number : 2155
executor 2 server cover_cnt 11 output_pos_value 17503
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 136
2023/03/29 03:46:34 ----- PS len: 4
time breakdown 2: 15, 125, 0
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [CLIENT] executor 3 has 20 replies
before receive testcase: 0 0
2023/03/29 03:46:34 [SERVER] executor 2 has 11 replies
2023/03/29 03:46:34 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1084 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 285 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 7420 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 318 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 343 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 442 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3951 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 2155 signal and 0 cover from userspace component
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 7
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
symlink(&(0x7f0000000080)='./file1/file0/file0\x00', &(0x7f0000000040)='./file1/file0/file0\x00')
open(&(0x7f0000000500)='./file0\x00', 0x30440, 0x0)
lsetxattr$security_capability(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)=@v2={0x2000000, [{0x8, 0x5}, {0x7, 0x2}]}, 0x14, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000580)='./file0\x00', &(0x7f0000000440), &(0x7f00000005c0)=ANY=[], 0x5c, 0x0)
setxattr$security_smack_transmute(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), 0x0, 0x0, 0x3)
lsetxattr$security_selinux(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), 0x0, 0x0, 0x0)
chmod(&(0x7f0000000000)='./file1\x00', 0x95)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1608
remove dir: /root/cephfs-client/dfs-0-607
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-608 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-608
receive_execute: 12, 8
receive_execute: 5, 8
receive_execute: 11, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2882, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 2882, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 468
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
receive_execute: 11, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 420, pid 2882, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 3 signal number : 131
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2882, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 2882, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 65
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 425, pid 2882, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 425, flag collect 0
----- executor 3 signal number : 15
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2882, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 3, 0
execute_one time: 1, 12
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 15, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16335, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1409
----- executor 2 executes write_coverage_signal cov->size 23673, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 991
----- executor 2 executes write_coverage_signal cov->size 1079, flag collect 0
time breakdown 0: 19, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 7598
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 25100, flag collect 0
time breakdown 1: 19, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 4248
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1372
executor 2 server cover_cnt 7 output_pos_value 15710
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 29
2023/03/29 03:46:34 ----- PS len: 4
time breakdown 2: 13, 22, 0
2023/03/29 03:46:34 [CLIENT] executor 3 has 7 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 468 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 3 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/29 03:46:34 [SERVER] executor 2 has 7 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1409 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 991 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 65 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 7598 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 4248 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1372 signal and 0 cover from userspace component
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 6
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
lsetxattr$trusted_overlay_origin(&(0x7f0000000780)='./file0\x00', &(0x7f00000007c0), 0x0, 0x0, 0x0)
lgetxattr(&(0x7f0000000000)='./file1\x00', &(0x7f0000000100)=@random={'btrfs.', 'trusted.overlay.origin\x00'}, &(0x7f0000000140)=""/44, 0x2c)
lsetxattr$security_smack_transmute(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700), 0x0, 0x0, 0x2)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), 0x0, 0x0, 0x0)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1280
remove dir: /root/cephfs-client/dfs-0-608
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-609 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-609
receive_execute: 12, 9
receive_execute: 4, 10
receive_execute: 10, 9
receive_execute: 10, 10
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2885, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 407, pid 2885, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 407, flag collect 0
----- executor 3 signal number : 135
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2885, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 468, pid 2885, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 468, flag collect 0
----- executor 3 signal number : 62
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 406, pid 2885, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 406, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 182, pid 2885, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 182, flag collect 0
----- executor 3 signal number : 25
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 3, 0
execute_one time: 1, 10
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 12, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15059, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 18379, flag collect 0
2023/03/29 03:46:34 for select break: 1
time breakdown 1: 19, 14, 0
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 961
----- executor 2 executes write_coverage_signal cov->size 835, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 20, 13, 0
----- executor 2 signal number : 7324
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 23001, flag collect 0
----- executor 2 signal number : 4044
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1326
executor 2 server cover_cnt 7 output_pos_value 15141
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 28
2023/03/29 03:46:34 ----- PS len: 4
time breakdown 2: 14, 18, 0
2023/03/29 03:46:34 [CLIENT] executor 3 has 6 replies
2023/03/29 03:46:34 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 135 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 2 has 7 replies
before receive testcase: 0 0
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 961 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 7324 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 4044 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1326 signal and 0 cover from userspace component
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2809 rename rename
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2809 rename rename
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 8
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000140)='./file0\x00', 0x0)
rename(&(0x7f00000000c0)='./file2\x00', &(0x7f0000000100)='./file0/file0\x00')
symlink(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000340)='./file0/file0\x00')
lsetxattr$security_smack_transmute(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300), 0x4, 0x1)
rename(&(0x7f0000000000)='./file0/file1\x00', &(0x7f0000000040)='./file2\x00')
rename(&(0x7f0000000580)='./file0/file0\x00', &(0x7f00000005c0)='./file1\x00')
openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0/file0\x00', 0x0, 0x0)
setxattr$security_smack_transmute(&(0x7f0000000200)='./file1\x00', &(0x7f0000000280), 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1464
remove dir: /root/cephfs-client/dfs-0-609
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-610 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-610
receive_execute: 9, 12
receive_execute: 8, 11
receive_execute: 3, 12
receive_execute: 8, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2889, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 203, pid 2889, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 203, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 545, pid 2889, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 545, flag collect 0
----- executor 3 signal number : 30
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 470, pid 2889, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 470, flag collect 0
----- executor 3 signal number : 100
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 203, pid 2889, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 203, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 713, pid 2889, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 713, flag collect 0
----- executor 3 signal number : 75
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 499, pid 2889, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 499, flag collect 0
----- executor 3 signal number : 105
----- completed 7
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 3796, pid 2889, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3796, flag collect 0
----- executor 3 signal number : 14
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 2, 0
execute_one time: 0, 13
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 21, 14, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 13066, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 24327, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 983
----- executor 2 executes write_coverage_signal cov->size 965, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 19, 16, 0
before receive testcase: 0 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 7224
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 20974, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 3747
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1477
executor 2 server cover_cnt 7 output_pos_value 14913
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 33
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 8 replies
2023/03/29 03:46:34 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 2 has 7 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 983 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 7224 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3747 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1477 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 75 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 14 signal and 0 cover from executor 3
time breakdown 2: 15, 20, 0
before receive testcase: 0 0
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2374 mkdirat mkdirat
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 170 dup dup
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 9
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000001c0)='./file0/file0\x00', 0x800, 0x81)
dup(r0)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
lsetxattr$security_evm(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
r1 = open$dir(&(0x7f0000000080)='./file0\x00', 0x880, 0x11)
mkdirat(r1, &(0x7f0000000180)='./file0\x00', 0x8)
r2 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
rmdir(&(0x7f0000000040)='./file0\x00')
fsync(r2)
---

end of program
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1184
remove dir: /root/cephfs-client/dfs-0-610
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 25
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-611 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-611
receive_execute: 9, 26
receive_execute: 10, 27
receive_execute: 4, 27
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
execute_one time: 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2892, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
receive_execute: 7, 26
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2892, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 519, pid 2892, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 382
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 295, pid 2892, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 295, flag collect 0
----- executor 3 signal number : 144
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2892, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 47
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2892, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2892, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 560, pid 2892, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 560, flag collect 0
----- executor 3 signal number : 91
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 343, pid 2892, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 343, flag collect 0
----- executor 3 signal number : 111
----- completed 9
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 0, 0
execute_one time: 0, 12
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 37, 15, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 9994, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 18438, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 994
----- executor 2 executes write_coverage_signal cov->size 734, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 33, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 7357
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 14607, flag collect 0
----- executor 2 signal number : 2800
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1892
executor 2 server cover_cnt 7 output_pos_value 14525
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 31, 19, 0
before receive testcase: 0 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 48
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [CLIENT] executor 3 has 9 replies
2023/03/29 03:46:34 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 382 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 144 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 2 has 7 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 994 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
time breakdown 1: 35, 22, 0
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 7357 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 91 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 2800 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1892 signal and 0 cover from userspace component
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 6
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000080)='./file0\x00', 0x82a02, 0xc)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x101001, 0x9b)
faccessat(r0, &(0x7f0000000040)='./file0\x00', 0x14)
lsetxattr$security_ima(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)=ANY=[@ANYBLOB="0400000000000000fc4a58049c4b"], 0xe, 0x1)
openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x40, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000240), 0x2, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1160
remove dir: /root/cephfs-client/dfs-0-611
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-612 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-612
receive_execute: 10, 22
receive_execute: 6, 22
receive_execute: 2, 21
receive_execute: 10, 22
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
execute_one time: 1, 0
execute_one time: 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 2897, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 365
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2897, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2897, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2897, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 653, pid 2897, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 653, flag collect 0
----- executor 3 signal number : 197
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 243, pid 2897, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 243, flag collect 0
----- executor 3 signal number : 110
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 6, 0
execute_one time: 1, 8
2023/03/29 03:46:34 for select break: 1
executor 1 write_server_output
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 32, 12, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 14121, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 12288, flag collect 0
----- executor 2 signal number : 936
----- executor 2 executes write_coverage_signal cov->size 379, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 21035, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 6245
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 17024, flag collect 0
time breakdown 1: 23, 14, 0
before receive testcase: 0 0
----- executor 2 signal number : 3783
----- executor 2 executes write_coverage_signal cov->size 27940, flag collect 0
----- executor 2 signal number : 2082
executor 2 server cover_cnt 7 output_pos_value 14538
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 28, 17, 0
before receive testcase: 0 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 42
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 [CLIENT] executor 3 has 6 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 7 replies
2023/03/29 03:46:34 fuzzer receive 365 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 936 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 197 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 110 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 6245 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3783 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 2082 signal and 0 cover from userspace component
time breakdown 0: 32, 20, 0
before receive testcase: 0 0
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 4
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
stat(&(0x7f0000000000)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$system_posix_acl(&(0x7f00000001c0)='./file0\x00', &(0x7f0000001340)='system.posix_acl_access\x00', &(0x7f00000000c0)=ANY=[@ANYBLOB="9501aa00010000000000000002000600", @ANYRES32=r0, @ANYBLOB="040000000000000010000000000000002000000000000000"], 0x2c, 0x0)
chmod(&(0x7f0000000140)='./file0\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 808
remove dir: /root/cephfs-client/dfs-0-612
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 0
executor 3 create dir /root/cephfs-client/dfs-0-613 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-613
receive_execute: 12, 9
receive_execute: 10, 10
receive_execute: 7, 9
receive_execute: 4, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2900, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 2900, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 148
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2900, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 272, pid 2900, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 272, flag collect 0
----- executor 3 signal number : 114
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6192, flag collect 0
----- executor 2 signal number : 1280
----- executor 2 executes write_coverage_signal cov->size 256, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 16460, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 13, 7, 0
----- executor 2 signal number : 5489
----- executor 2 executes write_coverage_signal cov->size 7937, flag collect 0
2023/03/29 03:46:34 for select break: 1
----- executor 2 signal number : 570
time breakdown 1: 20, 7, 0
before receive testcase: 0 1
executor 2 server cover_cnt 4 output_pos_value 7419
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 21, 6, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 21
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 4 replies
2023/03/29 03:46:34 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 148 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 2 has 4 replies
2023/03/29 03:46:34 fuzzer receive 114 signal and 0 cover from executor 3
time breakdown 2: 16, 11, 0
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1280 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 5489 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 570 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2341 lchown lchown
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 5
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x103080, 0x0)
lchown(&(0x7f0000000080)='./file1\x00', 0xffffffffffffffff, 0xee01)
lseek(r0, 0x10003, 0x0)
open$dir(&(0x7f0000000040)='./file1\x00', 0x600000, 0x138)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 648
remove dir: /root/cephfs-client/dfs-0-613
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 12
-----finish removing dir
receive_execute: 3, 13
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-614 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-614
receive_execute: 8, 14
receive_execute: 6, 14
receive_execute: 7, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2903, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2903, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 2903, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 80
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 11, pid 2903, write pid:-2127077786
----- executor 3 executes write_coverage_signal cov->size 11, flag collect 0
----- executor 3 signal number : 11
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2903, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 0, 4
2023/03/29 03:46:34 for select break: 1
time breakdown 3: 22, 5, 0
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4173, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1264
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 11415, flag collect 0
----- executor 2 signal number : 4708
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 7113, flag collect 0
time breakdown 1: 20, 6, 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 1
----- executor 2 signal number : 522
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 7, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 6585
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 22
2023/03/29 03:46:34 ----- PS len: 4
time breakdown 2: 16, 9, 0
2023/03/29 03:46:34 [CLIENT] executor 3 has 5 replies
2023/03/29 03:46:34 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 80 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 5 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 4708 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 522 signal and 0 cover from userspace component
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 6
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
open$dir(&(0x7f0000000000)='./file4\x00', 0x40040, 0xfa)
open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x0)
lgetxattr(&(0x7f00000004c0)='./file4\x00', &(0x7f0000000500)=@known='system.posix_acl_default\x00', 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 944
remove dir: /root/cephfs-client/dfs-0-614
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-615 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-615
receive_execute: 5, 15
receive_execute: 2, 15
receive_execute: 5, 15
receive_execute: 4, 15
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 621, pid 2906, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 2906, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 185
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 586, pid 2906, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2906, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 4
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 2906, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 31
----- completed 5
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 203, pid 2906, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 203, flag collect 0
----- executor 3 signal number : 68
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 14, 2, 0
execute_one time: 1, 16
time breakdown 3: 20, 18, 0
executor 2 write_server_output
executor 1 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 11954, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 17454, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1001
----- executor 2 executes write_coverage_signal cov->size 697, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 20, 19, 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 7670
----- executor 2 executes write_coverage_signal cov->size 2470, flag collect 0
----- executor 2 signal number : 346
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 18409, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 4017
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1788
executor 2 server cover_cnt 8 output_pos_value 16307
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 41
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 6 replies
time breakdown 2: 17, 25, 0
2023/03/29 03:46:34 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 185 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
before receive testcase: 0 1
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1001 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 7670 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 346 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 4017 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1788 signal and 0 cover from userspace component
2023/03/29 03:46:34 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 68 signal and 0 cover from executor 3
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 5
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000400)='./file0\x00', 0x40, 0x0)
open$dir(&(0x7f0000000680)='./file0\x00', 0x0, 0x1d8)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x200, 0x10)
r1 = open$dir(&(0x7f0000000080)='./file0\x00', 0x8400, 0x18)
renameat(r0, &(0x7f0000000040)='\x00', r1, &(0x7f00000000c0)='./file0\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 800
remove dir: /root/cephfs-client/dfs-0-615
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-616 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-616
receive_execute: 4, 14
receive_execute: 10, 13
receive_execute: 11, 14
receive_execute: 10, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2909, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2909, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 601, pid 2909, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 601, flag collect 0
----- executor 3 signal number : 169
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2909, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2909, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 9, 0
execute_one time: 1, 11
executor 2 write_server_output
time breakdown 3: 25, 13, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 17463, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1403
----- executor 2 executes write_coverage_signal cov->size 14214, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 14, 0
before receive testcase: 0 1
----- executor 2 signal number : 925
----- executor 2 executes write_coverage_signal cov->size 575, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 22269, flag collect 0
time breakdown 0: 24, 14, 0
----- executor 2 signal number : 6004
----- executor 2 executes write_coverage_signal cov->size 1758, flag collect 0
2023/03/29 03:46:34 for select break: 1
----- executor 2 signal number : 306
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
2023/03/29 03:46:34 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 20464, flag collect 0
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 4419
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2342
executor 2 server cover_cnt 8 output_pos_value 15494
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 32
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 5 replies
2023/03/29 03:46:34 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
time breakdown 2: 18, 17, 0
2023/03/29 03:46:34 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1403 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 925 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 6004 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 306 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 4419 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 2342 signal and 0 cover from userspace component
before receive testcase: 0 1
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- mutateArg()
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2458 open open
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 3967 truncate truncate
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 5
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
open(&(0x7f0000000040)='./file0\x00', 0x101240, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000080), 0x2, 0x0)
open(&(0x7f00000000c0)='./file0\x00', 0x40000, 0x8a)
truncate(&(0x7f0000000100)='./file0\x00', 0x7f)
open$dir(&(0x7f0000000240)='./file0\x00', 0x2202, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 808
remove dir: /root/cephfs-client/dfs-0-616
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-617 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-617
receive_execute: 4, 7
receive_execute: 7, 7
receive_execute: 8, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2912, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 2912, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 159
----- completed 2
execute_one loop: 0, 0, 0
receive_execute: 7, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2912, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 498, pid 2912, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 498, flag collect 0
----- executor 3 signal number : 123
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 848, pid 2912, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 848, flag collect 0
----- executor 3 signal number : 113
----- completed 5
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
executor 3, execute_one inner time: 13, 8, 0
execute_one time: 1, 21
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 16, 24, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1427
----- executor 2 executes write_coverage_signal cov->size 32519, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1097
----- executor 2 executes write_coverage_signal cov->size 1146, flag collect 0
time breakdown 0: 14, 26, 0
before receive testcase: 0 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7408
----- executor 2 executes write_coverage_signal cov->size 2790, flag collect 0
----- executor 2 signal number : 345
----- executor 2 executes write_coverage_signal cov->size 1319, flag collect 0
----- executor 2 signal number : 159
----- executor 2 executes write_coverage_signal cov->size 32470, flag collect 0
----- executor 2 signal number : 6580
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 15, 25, 0
before receive testcase: 0 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 38
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 5 replies
2023/03/29 03:46:34 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 159 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 123 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1427 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1097 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 7408 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 345 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 159 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 6580 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1903 signal and 0 cover from userspace component
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 3761 stat stat
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2458 open open
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 9
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
open(&(0x7f0000000100)='./file2\x00', 0x212000, 0x10)
rename(&(0x7f0000000240)='./file1/file0\x00', &(0x7f00000004c0)='./file0\x00')
setxattr$user(&(0x7f0000000140)='./file0\x00', &(0x7f00000001c0), 0x0, 0x0, 0x0)
removexattr(&(0x7f0000000400)='./file1/../file0\x00', &(0x7f0000000440)=@known='security.apparmor\x00')
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380))
stat(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/cephfs-client/dfs-0-617
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 signal number : 1903
executor 2 server cover_cnt 8 output_pos_value 19011
time breakdown 2: 11, 30, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
receive_execute: 3, 8
receive_execute: 7, 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-618 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-618
receive_execute: 8, 8
receive_execute: 7, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 2915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 828, pid 2915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 828, flag collect 0
----- executor 3 signal number : 105
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 758, pid 2915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 758, flag collect 0
----- executor 3 signal number : 14
----- completed 5
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 469, pid 2915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 469, flag collect 0
----- executor 3 signal number : 97
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 642, pid 2915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 642, flag collect 0
----- executor 3 signal number : 68
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 444, pid 2915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 444, flag collect 0
----- executor 3 signal number : 40
----- completed 8
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 158, pid 2915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 158, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 22, 12, 0
execute_one time: 1, 34
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16, 37, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 26340, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1402
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1053
----- executor 2 executes write_coverage_signal cov->size 1462, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 38, 0
before receive testcase: 0 0
----- executor 2 signal number : 7012
----- executor 2 executes write_coverage_signal cov->size 4193, flag collect 0
----- executor 2 signal number : 391
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5261
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1736
executor 2 server cover_cnt 8 output_pos_value 16950
2023/03/29 03:46:34 for select break: 1
2023/03/29 03:46:34 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:34 wg wait finish
2023/03/29 03:46:34 ------ all executors finish execution
2023/03/29 03:46:34 exec time: 51
2023/03/29 03:46:34 ----- PS len: 4
2023/03/29 03:46:34 [CLIENT] executor 3 has 9 replies
2023/03/29 03:46:34 fuzzer receive 401 signal and 0 cover from executor 3
time breakdown 2: 11, 43, 0
2023/03/29 03:46:34 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 68 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 40 signal and 0 cover from executor 3
2023/03/29 03:46:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:34 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:34 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/29 03:46:34 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1402 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1053 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 7012 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 391 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 5261 signal and 0 cover from userspace component
2023/03/29 03:46:34 ------- fuzzer executor 2 receive 1736 signal and 0 cover from userspace component
time breakdown 0: 15, 38, 0
before receive testcase: 0 0
2023/03/29 03:46:34 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:34 ----- no new client coverage: false, true
2023/03/29 03:46:34 mutate testcase with failures
2023/03/29 03:46:34 ----- insertCall()
2023/03/29 03:46:34 ----- generateCall 2808 removexattr removexattr
2023/03/29 03:46:34 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:34 prog length: 6
2023/03/29 03:46:34 HasCrashFail:false HasNetFail:false
03:46:34 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000000)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00')
removexattr(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)=@known='system.advise\x00')
lsetxattr$security_evm(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f0000002240)=@v2={0x0, 0x0, 0x0, 0xfffffffe, 0x10af, "79dc4c5e583ce36cde6f70029f8d0dffb8c043bd00e553608969aa45c6083ebc9d20f3af279d73a573189055a0b72e7303b1bdb7b5be3f85f40459167f78b6baee3183d70e24e7969aa673616769452c12b565aa97412ae4c70ab89cdf8a3b17fe561ff1cbbdd02dfd3de3a0d722c5e490bfc5d3eb92a83f0d2acfbad1bb55f93e2d13cf11ebc89659f046ac71445a5ff0add0792a0408c328e7942b4bd7fc192c59843eb6d8e5928f418d35f8c39af9bd84c3a08ddf2f722aed4e1031111d181dede0c78b99dfd4a670df7fe8df17ed6bd4731627dac16043d80e0b7dbd69b1ae5b857f89e27a75a44b1d72b2980502eca3eee9ea3fb74f24422e97a0287c9e9a3c1ce1aca79000741ac041c92a501bff0c30e6f458504562897c3a0710ddaf306a52120f957547624f90c0e4cc69ae6743ff097c933fe7c4304206f9d4bdb194d8da55744ff4e55711210fc01f9222e89593448306f72dfb7773bf97264d9e9a59270cf27594f3e4579b8741f693697ddda689d91ec58d59464a679511624ba49ff916f8228e7089ebac3c2d8945f742a0c67174944fedb9ee3dfcc976975d4abd0e5e3655192f9baf797e4e6e19e4be9f7f8c02b4039763a304de6f0626b87997645b161d38b542fed7d501f36e397d905435c65216339a38498c604203ff0a79bf0e6ae3e2d1a453c9aba487743b7091aa0dcecd9cb15146c59fcbb0ae0e16fe6c27178d6a44260c4cf1223438c5bcd3826b195d98d9d49b80f2832a9223dddec2dd405c07282e72ccc5e098f92a0299c7b482106619c96eb8767bc8405a9ea81176f866d02c01b179d70f65e6d64cb5e228726e7039327a48851785c60cfe34f4eb816773d59d6b7a134ca425055fde1727f246d61d5c8f9d618f7fb3308a708dcd264cc339a6ea9bea1fc48465fd6256aed537a88374e2022bb5e4443328c677d5965c2aea942d50a5650ea3aa12b068a6a0613ae139534b59088986183add914a4ad3e100d54744dc0034ebb6783e6a50edbf5d46df12b8a99156ecad66916065208fe97024e1e5bbd1baa2f3addaf3e91272a70ab8387e1582a1a1a094f5d060e5b35f2bf2df7cbe6365aa6b92d99efa0746009531741c7d03404d55b39c9a0e04f9323e4ab31b68d19b18fef851f5eab801bc4a013d7e4a834a49a88687185196fd850a64e6e16a0f80ca2cfe8c91fcb6afb6f56f2f491aff8c04801269968ecf026fe453f3bc12b068a1c6182f1be844d1add65e1aa5822429545670b2f027bc678d396ded50812ef92e1a7489790a606634876ae8f095bfdd75193dd7b8cbfeca1dff9596f2c24a48072cc9bc0afadc8d8a256108ede7cbb2ac3e043abc5b1c34541e38d5db8d4f9cf303f6e1666b690f603a4720afdaed62809056715562727c30e6328b4fe632d64e2f4d2c02d5fa707ca35e61ddae316917edb1bc39293f2ca142ba31b7cd849c855f401381d214e94bc3cff7bdebc4891d2302f734b51740fc4393094a1e717279cae507d161601b2ccc7793407babd59a2278b7605fcd9ad2609dcbe822d2f885ba3a3095e61e32aed7512a85ac1bbd8ee02b6bb4a98a20f4dd01bb216c4e3852c15395d4b0eb68dc4380d4e5403c438c7ea5db0d5b444bfadb482be0851a1e5456ef38667337238156a82564cb496f54cdc286ff727031933539e3bf00fba5b3c2ce1f002a396e04507ade1c0a4711540561bda78c624f622791dc1b398cf1b80c1c1c62afa1f252b1add6376b0d02cd7d7483af8db72c490725e30ace9f72c87df2ac202b9a1b00a5c834b705ca760a77f5c4029831245b11d0af0643bdd5132a9d1962d98a790dda95068ac0570ab4c03dd15ecba6f6e9210b14d3bd20b03f96616d4722757486dc564bb2db755d1fdf5c466df2f0498b50ad5c4f11354ec948fd6ba073d174a58b991ce16bc373981aaf0a917a9a7e5ea1b6cde8e911c52920bac965bbef8ab526521e3924ac9b8d055deda3d9aa1ea626f69b3cb7db554184d09ac5c55d0195fc18c67663cf64c6dadd0789fc71bd2de63d8990734c149b525a5483b6222726026583febf8d0026c52b65aecf2da853574336f0cd72e9d86d357da5eb5d0f25c141375e3f63e04729be0d431f172e2cbf9ffd5765643b1d4206ee8d10f4ebb4b3ef1578caab148b0654ab781ff6b71a953bbbf6024dd1a3d33300bfde26bb4abc19bd96d2f6691317645a757e0edf9746af7093da5c4a0eaaa1a43dc8db07313141baefc120a0409508b7cfba9fa55bb868a531e5b2c38d6c0c5e1b67626deceab28b0b807a4d3b7a043695df9f72b65fbc51e9650749d2d92e30dda663e6422e9873b9ad722fe82b18ef7f7dfbecce48309c3caa962566730d2f4f04f5d6ea1eba3617e88c7677b93b31f9935f306233c701e8485b551e010b72eea82e1f947f10c335ab31daf5c6bd0efd0dd6170427bd87ef4cf7dfc17a5a00169a380aecd32c29762d10fe687d4942d9ea3658ea6dec21bd795db737366124817b429885d4e403c9a1d4b809e0c90661fe418721ed97af16746f5fd65a2654d6b18dfa07947358c53e14a2d70590db8c212d89e3dc9934f723c4af763033c70916716091451ce6dba1dd29c8822d5031f4f4240e56144c898e34e81d334229e269d59f4b24ec20abfc5cbd3b82310ef74c8cbd7ebd99b8cec8568e78d99467102058ac4d4c654711416fbb090faa8dfc839d4d074d436c31d95db2c54a985f12f4f181c92494e278b207b505c2b97b213f4d8027987a09474c3756be7425dba4ca0804bbfc4fa86cacbbf46fce0b9ced89278dc04a4df8ac46715bfbaf9023caed988c3d5645f6ab9ce885e51e68fedac0b8de31e26f69e15282528238180e0836eccc54033463858ddd2492153eeb20f238707ec25d757715b6700b63344cbd842567898770956fa374962502bfd424045ae0524bcb64253728ec100d8236c6e930534a2413f7745b030bd8343e77e620459d1f3043744c40ddfb6ccf71bb6026e0a8d8fd6c8d1635a2bfef72deba48d821ef3587dfe322f8ceff906f82f1ed1e08d77a977b308ac5326aa6dd330ae51e00f0f2fdbcf9226d8c7d65abb4e855d78ace7f4908322e51799e48ce016819b19a4c3a31cac6c82a7694221121d4e284ac3a6bd924868ac29a72d1c3abbbbb433dbe64784d390e73f58ecd9dffe843517069bc59be06a51e765987139e0fa0c6d966d56df282a042c14ef8f24eb702cf97a3fceb1886516dc8fa0bbd6911a268664f001c041cabe1e2fc259d882d944f12cdef8e869320a9f0ab37c972325a949b2a8f470e60e2668335108003d56e5c0e46b47e7542913536906a59505b21fd411bc03746d070d1133a423a58bff228b9ca7104340d1521f8e6db35d6d3baa2ad029670ac82028694791915c7b56cd5d22984a8dfa522379ba605214a0e121aa7ebb313cb73534e74a89adaa43d20577e91360ee3989aff97540093fce6dd49fc9824949691c1623a97d18af7e3d2ee51e671265175c224e7b117541f19216f422af70492f34fe150124b662bbcdc14f08a0acabf5e7b7d2eff9e782afb6ce09f78b7ffc6efdf02d03ca42073b0049248a28b69506b35a8f8c611b16d70f65050be3b77f560d388c4876e31990edbaa6c224b4fc570c967d652ca313a75b7bbddd2173c8632da9104eb5ac8ec3c1ff220d980d53db9fccaeb6854787edd96273b3f29a3e756941487b8c8826858920dca961ef49acc5d4df6a54f812579b22b99378dcf79ab22cc91044a10819357df09378907061b26761cb97cd9eaebb9c7b62475500c04dc4a24abb3875810f8436ef10fc70b3fce565a4dddd8518a5e65f49ec27a8330d878fa0323724f5d0cbdf1d5969022acc664222a09b0453fbcf3de866d500a746e9023782099450c372947bcc173351cb8814bf6f07f7010dadc05e287c7c3e2cc07fb94aa52607fd3f6ae1ec1bf32f44159a1190aa5888c629fdf82d4552f1895ab3d1ad8338650f4a38abc9860fe80226dfb954b1aec54511969d19a9989d3e4bff5a4efca1a7ec72725992cd6422b5150eb8bfff9d88d02f959f5467358defcbe19e35aa32f81ad2dca382b41a938c45c0e937532940ac0f95ccab2221145ad404a1c43d8afbac9c4f888c513639a541277c9cdbc42db27f20a997e9867e882a9ac2c397faf5948c70e6aa2ea929e3a12da8e0403e3790e3a5e2e2856977b11e2919d87359844b3173066a2f6879851d15ed638f94509ffbac08745431324335bde3c3fd165b1158e1d632f4cf52cab0a36289a6aa85827de14fbd08de6886b2d2ae6d194bc9068596e3bf16b605ee1645bfc27a7383dc9d08fd3b25750f3577cf072a301895a7bb38550a926cbf13d7d5c546ff74ca7bf36ce82c02a534d61738047fb76d6c86941a3739b5af8045012bf931d1ac6865e669fdc99f2c6222e228c8fab73a9dc1f4a9ce55e97de8d86f4852b95c71326d1feec06af21a27dc188e37dc50e4170b42d1ba81a7793dbac8392154e7d4d6776a69710c54c463d2b59fed291baf962ce47cb8b6ebc5264b36e1201a4b85d45808407378e894026b3c2cba3116d5b7687d8d07d23c322f5c90888e11fadaf4a6f4c4ebd361ca2a964e3d5a8e7ba8c9ce909f24a8e4b5f3a9b4f155a162abd1f79cbb392b33c51d277cfb5eab0f37ba19c95d024c2dbcdb4dfc57a07be221f1af65cf831b5749b38d6dc677e6e770444fbbba52564d40417587aa6fa23e941454e5a39f2a0b39b398261f67deeb40483d007f390f5f5470bcfac6a71c66b87b1a56e242a3b5f3cc50c4ca76ae67d9a997d0d85619bcce7077ccf3b963533ff0c7bfecd713b8eb07438c30f5d5e1b1807c95bba8466aea1c5ebbd1d2f97b16392891dfeb542a44a779ba22881df68fc158e9b40c3e60878978e17e4fecb6947fc5c283d12fec79a4e23cd526ca4d4390b734abc337938c20483c15640d6a5771c6fe4a383a03508cf351324cbb9ce68780f67d514d199b6f7bcdcada3652995b48ff3a271e2f634e2e3477c4fdac68305e68736557c45da8be5515ebaed946c8adbfbc4f87a5a57de977162023d5766d23126c39b273c0ded0a35b3a078b48003ffbc43ea6977f9387336b6e5cb899b56d46bbd693e96e04643b98990e8970d2c62e502c41ddb7eb238f9923b0582fcef0a14aa15969bbe1d296748cf111ebb63690de038b9ecc03e836c42de98be8e7bbf004e7697067fedf295187e55abc2d83e97de7bafb9fb03386c0419a56e7accd42c919a0f3aa99b8a5a36459ca5ef5a7b2e78d9b6ac2ba7b91ba6907175466646f80d9baadd542142a8f9e834b7fa0b095f506c551bb5848d663f1b4f17162c498a8dbdfb3310b553c72973490735de1ea6779a6017d7e250bbae3e5d5e8c64fb5a7e112d345be850f5492108380c038aeebec5dfbd6c8e4db0f57027490af463ac78e8bb9d5021e71f5281afeca2d61f80e4f9b7cae672d1e0de9a5a0550690cf107d136c8b194878991cd1088a8142287fd71a58f685716f9a33a846438a9c23209c59fea905d77b301515e259df24c02455f8a32d494fa90e6b7461563b71f0f33440dbe0418b9296766c8d904dcd5f9f3ef293240024ee81206335a2e93df3127d371f7c5cbb0a3ddca842c1f203af857cdf94bffb5e831c41cc3373f6d68019014a59db4a777f4b1dcc47181c164146948295a528ce5520657034cbfc367c4e4b61af7e0a041ab96d7ccb2aa9f4a4840cf6145abab587b4909db451cc4795f6a5ea3d8e556e3ecf02678040fdcb97af49f2e39ec0d02e14a96cc33dc5eda601226cbe1a11e214a2f5957d1512a34c89dd55463bdaf86321a7fc37340311794e8e7d4d019abfe7372e7c337d6e59b2c9ab3e2c01baa6e226e1d2244fdcdafbfd49cd8867c312ded417b1699029af62e748395d5ec2f14970d35ad83a50bfa8a9c83040d5fd0ba7eb3eb74120a352c1a973a9d89708a0649e912b422c219a4b6d3509bd8853dc8452806314e9edb70316f7772cb660c6c430ae7df"}, 0x10b8, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0)='security.SMACK64IPIN\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="2c25293761350fb00c55070e6b476c2b82fde02ac571f85a2fe4b9403320"], 0x7, 0x1)
lremovexattr(&(0x7f0000000200)='./file0\x00', &(0x7f00000002c0)=@known='user.incfs.metadata\x00')
lsetxattr$smack_xattr_label(&(0x7f0000000100)='./file0\x00', &(0x7f0000000280)='security.SMACK64IPOUT\x00', &(0x7f0000000240)={'security.evm\x00'}, 0xe, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5880
remove dir: /root/cephfs-client/dfs-0-618
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-619 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-619
receive_execute: 7, 11
receive_execute: 13, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 12, 11
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2918, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 2918, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 535, pid 2918, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 535, flag collect 0
----- executor 3 signal number : 188
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 403, pid 2918, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 403, flag collect 0
----- executor 3 signal number : 6
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2918, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 509, pid 2918, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 509, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 16, 5, 0
execute_one time: 0, 21
2023/03/29 03:46:35 for select break: 1
2023/03/29 03:46:35 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10505, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 15835, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 948
----- executor 2 executes write_coverage_signal cov->size 642, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 31021, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:35 for select break: 1
2023/03/29 03:46:35 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 23, 24, 0
before receive testcase: 0 0
----- executor 2 signal number : 7263
----- executor 2 executes write_coverage_signal cov->size 4508, flag collect 0
2023/03/29 03:46:35 for select break: 1
2023/03/29 03:46:35 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 340
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 15209, flag collect 0
time breakdown 3: 25, 22, 0
before receive testcase: 0 0
----- executor 2 signal number : 2933
----- executor 2 executes write_coverage_signal cov->size 17901, flag collect 0
----- executor 2 signal number : 1174
executor 2 server cover_cnt 8 output_pos_value 14143
2023/03/29 03:46:35 for select break: 1
2023/03/29 03:46:35 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:35 wg wait finish
2023/03/29 03:46:35 ------ all executors finish execution
2023/03/29 03:46:35 exec time: 39
2023/03/29 03:46:35 ----- PS len: 4
2023/03/29 03:46:35 [CLIENT] executor 3 has 6 replies
2023/03/29 03:46:35 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/29 03:46:35 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/29 03:46:35 fuzzer receive 188 signal and 0 cover from executor 3
2023/03/29 03:46:35 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/29 03:46:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:35 [SERVER] executor 0 has 0 replies
time breakdown 2: 18, 27, 0
2023/03/29 03:46:35 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:35 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 948 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 7263 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 340 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 2933 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 1174 signal and 0 cover from userspace component
time breakdown 1: 21, 24, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/29 03:46:35 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:35 ----- no new client coverage: false, true
2023/03/29 03:46:35 mutate testcase with failures
2023/03/29 03:46:35 ----- insertCall()
2023/03/29 03:46:35 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:46:35 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:35 prog length: 3
2023/03/29 03:46:35 HasCrashFail:false HasNetFail:false
03:46:35 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file1\x00', 0x101040, 0x0)
open$dir(&(0x7f0000000000)='./file1\x00', 0x141042, 0x0)
open$dir(&(0x7f0000000040)='.\x00', 0x8400, 0x84)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/cephfs-client/dfs-0-619
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-620 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-620
receive_execute: 6, 30
receive_execute: 6, 30
receive_execute: 3, 30
receive_execute: 8, 30
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 117, pid 2921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 117, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 0, 4
2023/03/29 03:46:35 for select break: 1
2023/03/29 03:46:35 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 38, 5, 0
executor 2 write_server_output
executor 0 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 6822, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 8470, flag collect 0
----- executor 2 signal number : 887
----- executor 2 executes write_coverage_signal cov->size 256, flag collect 0
time breakdown 1: 36, 6, 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 14444, flag collect 0
2023/03/29 03:46:35 for select break: 1
2023/03/29 03:46:35 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:35 for select break: 1
2023/03/29 03:46:35 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 36, 7, 0
----- executor 2 signal number : 5354
----- executor 2 executes write_coverage_signal cov->size 1401, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 305
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 11086, flag collect 0
----- executor 2 signal number : 2862
----- executor 2 executes write_coverage_signal cov->size 19798, flag collect 0
----- executor 2 signal number : 1746
executor 2 server cover_cnt 8 output_pos_value 12635
before receive testcase: 0 0
2023/03/29 03:46:35 for select break: 1
2023/03/29 03:46:35 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:35 wg wait finish
2023/03/29 03:46:35 ------ all executors finish execution
2023/03/29 03:46:35 exec time: 39
2023/03/29 03:46:35 ----- PS len: 4
2023/03/29 03:46:35 [CLIENT] executor 3 has 3 replies
2023/03/29 03:46:35 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:46:35 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/29 03:46:35 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/29 03:46:35 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:35 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:35 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 887 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 5354 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 305 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 33, 10, 0
before receive testcase: 0 0
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 2862 signal and 0 cover from userspace component
2023/03/29 03:46:35 ------- fuzzer executor 2 receive 1746 signal and 0 cover from userspace component
2023/03/29 03:46:35 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:35 ----- no new client coverage: false, true
2023/03/29 03:46:35 mutate testcase with failures
2023/03/29 03:46:35 ----- insertCall()
2023/03/29 03:46:35 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:46:35 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:35 prog length: 15
2023/03/29 03:46:35 HasCrashFail:false HasNetFail:false
03:46:35 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x6a243, 0x82)
r1 = openat(r0, &(0x7f0000000040)='./file0\x00', 0x140, 0x70)
fcntl$setown(r1, 0x8, 0x0)
llistxattr(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)=""/206, 0xce)
open$dir(&(0x7f0000000140)='./file0\x00', 0x40000, 0x101)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000000000)='./cgroup/syz0\x00', 0x1ff)
r2 = dup(r0)
mkdirat(r2, &(0x7f0000000100)='./file0\x00', 0x0)
fcntl$F_GET_FILE_RW_HINT(r2, 0x40d, &(0x7f00000004c0))
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000000080)='./cgroup.net/syz1\x00', 0x1ff)
sync()
fremovexattr(r0, &(0x7f0000000180)=@known='trusted.syz\x00')
setxattr$smack_xattr_label(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='security.SMACK64EXEC\x00', &(0x7f0000000500)=ANY=[@ANYBLOB="2e2f6367726f75702f73797a3000bb423be32d907df34eccaf1519492880e3313ced09c9593a78dbd19dc21fd25a3462e96248c2ffb6c053c64e1c954bc0f4d1cc1c131bfd32dcacd120998c3b110a9008236cb5b6ed28b855ca90c23fbf3d61b28f3ff300bb3289bb755b64123b2b3d923ae62ce46d107e832f10310c917153c40d1f0b6311b06af10a55311e5e4926f990"], 0xf, 0x1)
chdir(&(0x7f0000000480)='./file0\x00')
dup(0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2096
remove dir: /root/cephfs-client/dfs-0-620
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
receive_execute: 3, 7
receive_execute: 6, 7
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-621 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-621
receive_execute: 7, 7
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
receive_execute: 6, 7
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 625, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 481
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 150, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 150, flag collect 0
----- executor 3 signal number : 71
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 5
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 119, pid 2924, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 119, flag collect 0
----- executor 3 signal number : 73
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 246, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 246, flag collect 0
----- executor 3 signal number : 43
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 463, pid 2924, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 3 signal number : 202
----- completed 15
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3055, 16, 0
execute_one time: 1, 3071
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 53
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 14, 3073, 0
before receive testcase: 0 0
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1521
----- executor 2 executes write_coverage_signal cov->size 8731, flag collect 0
----- executor 2 signal number : 885
----- executor 2 executes write_coverage_signal cov->size 2763, flag collect 0
----- executor 2 signal number : 546
----- executor 2 executes write_coverage_signal cov->size 11149, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 15609, flag collect 0
----- executor 2 signal number : 5623
----- executor 2 executes write_coverage_signal cov->size 1788, flag collect 0
----- executor 2 signal number : 266
----- executor 2 executes write_coverage_signal cov->size 20754, flag collect 0
time breakdown 1: 13, 3074, 0
before receive testcase: 0 0
----- executor 2 signal number : 2189
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
time breakdown 0: 13, 3074, 0
before receive testcase: 0 0
----- executor 2 signal number : 400
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 1115, flag collect 0
----- executor 2 signal number : 295
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2313
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 931
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 3715
----- executor 2 executes write_coverage_signal cov->size 898, flag collect 0
----- executor 2 signal number : 9
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1108
executor 2 server cover_cnt 17 output_pos_value 20111
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:38 wg wait finish
time breakdown 2: 10, 3083, 0
before receive testcase: 0 0
2023/03/29 03:46:38 ------ all executors finish execution
2023/03/29 03:46:38 exec time: 3090
2023/03/29 03:46:38 ----- PS len: 4
2023/03/29 03:46:38 [CLIENT] executor 3 has 15 replies
2023/03/29 03:46:38 fuzzer receive 481 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:38 [SERVER] executor 2 has 17 replies
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 71 signal and 0 cover from executor 3
2023/03/29 03:46:38 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:38 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 43 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 202 signal and 0 cover from executor 3
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 1521 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 885 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 546 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 5623 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 266 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 2189 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 400 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 295 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 2313 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 931 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 3715 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 1108 signal and 0 cover from userspace component
2023/03/29 03:46:38 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:38 ----- no new client coverage: false, true
2023/03/29 03:46:38 mutate testcase with failures
2023/03/29 03:46:38 ----- mutateArg()
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/29 03:46:38 ----- mutateArg()
2023/03/29 03:46:38 ----- mutateArg()
2023/03/29 03:46:38 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:38 prog length: 9
2023/03/29 03:46:38 HasCrashFail:false HasNetFail:false
03:46:38 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x101000, 0x96)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000040)='security.SMACK64IPIN\x00', &(0x7f0000000080), 0x1, 0x2)
setxattr$incfs_metadata(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)="67e0a0ed477d1c39a80e80b7d5e0d583e5fa8f9eca35351446c3bae77791b06e9bb261eb3ab2772dbbec04f2a55a3c1a9ecf653a14df7da205ade8c46b5bb36bf23a62fbfc8173db6cd2ab0cf22981b6261469ed", 0x54, 0x1)
r1 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x10000, 0x60)
fsync(r1)
fcntl$F_SET_FILE_RW_HINT(r0, 0x40e, &(0x7f0000000280)=0x1)
lsetxattr$system_posix_acl(&(0x7f0000000380)='./file1\x00', &(0x7f00000003c0)='system.posix_acl_default\x00', &(0x7f0000000400)=ANY=[@ANYRESDEC=r0, @ANYRES32, @ANYBLOB="040002000000000008000000", @ANYRES32=0x0, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee01, @ANYBLOB="08000300", @ANYBLOB="2caee50188a252fe9f0fe71dd5971472cb46f928df142ac1c32eb4f2efd3a5155a9b43e3432d5ae999be89b763f8d0a846fee9696e4cd6e7c056df71f5d69fcb26321124cfc67a54392f47a520178da1ee4b97a4642b45d504a4d77b269bf4898f31edd4689d694f1614ec9aec7c04d867318ac12cba6cf7be7484275c07a2199001cba14c3c7a378ce0bb0181", @ANYBLOB="080004002664d45d8c84bb43827ec9e648731a9cac6d85ea194e9d1319da02c7b7565dd0289470002c2699ef14b7e27d46608b9aa659f994f7e398fc653497ff0c0e2e7e7160b794301f531304a24decea", @ANYRES32=0xee00, @ANYRES32=r1, @ANYRES32=0xee00, @ANYBLOB="fbeb4f8ca27899e2b97064c075228b9f20a30df4094168456da37e20da13a708cde9b5ebd09ef35c01a929f4730ffb4dbd21496d555142d1b648f7d07fcf97829e93", @ANYRES32, @ANYBLOB="08000600", @ANYRES32=0xee01, @ANYBLOB="08000200", @ANYRES32=0xee01, @ANYBLOB="08000300", @ANYRES16, @ANYRESHEX=r1], 0x74, 0xde421032f91df0c2)
fcntl$setown(r0, 0x8, 0xffffffffffffffff)
lsetxattr$trusted_overlay_opaque(&(0x7f00000005c0)='./file1\x00', &(0x7f0000000600), &(0x7f0000000640), 0x2, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2984
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-621
remove dir time 8
-----finish removing dir
mkdir time 10
executor 3 create dir /root/cephfs-client/dfs-0-622 successfully
receive_execute: 14, 19
receive_execute: 5, 19
receive_execute: 14, 19
current dir: executor 3: /root/cephfs-client/dfs-0-622
receive_execute: 16, 19
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2928, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2928, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2928, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2928, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2928, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2928, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2928, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 13
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2928, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2928, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 3, 2
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1957, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 4173, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2164
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 3 output_pos_value 3251
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:38 wg wait finish
2023/03/29 03:46:38 ------ all executors finish execution
2023/03/29 03:46:38 exec time: 27
time breakdown 0: 33, 8, 0
2023/03/29 03:46:38 ----- PS len: 4
2023/03/29 03:46:38 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:38 [CLIENT] executor 3 has 9 replies
2023/03/29 03:46:38 fuzzer receive 364 signal and 0 cover from executor 3
time breakdown 2: 25, 8, 0
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:38 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:46:38 [SERVER] executor 2 has 3 replies
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 2164 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/29 03:46:38 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:38 ----- no new client coverage: false, true
2023/03/29 03:46:38 mutate testcase with failures
2023/03/29 03:46:38 ----- mutateArg()
2023/03/29 03:46:38 ----- mutateArg()
2023/03/29 03:46:38 HasCrashFail: false, .HasNetFail: false
time breakdown 1: 33, 7, 0
before receive testcase: 0 0
2023/03/29 03:46:38 prog length: 2
2023/03/29 03:46:38 HasCrashFail:false HasNetFail:false
03:46:38 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x58ac2, 0x3)
ftruncate(r0, 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
time breakdown 3: 35, 6, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 240
remove dir: /root/cephfs-client/dfs-0-622
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-623 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-623
receive_execute: 1, 3
receive_execute: 3, 2
receive_execute: 1, 3
receive_execute: 3, 3
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 625, pid 2932, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2932, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4150, flag collect 0
----- executor 2 signal number : 1263
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11089, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4755
----- executor 2 executes write_coverage_signal cov->size 6137, flag collect 0
time breakdown 1: 5, 6, 0
----- executor 2 signal number : 576
executor 2 server cover_cnt 4 output_pos_value 6674
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 3 receive reply, reply.done 1
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 6, 4, 0
before receive testcase: 0 1
time breakdown 2: 4, 7, 0
before receive testcase: 0 0
before receive testcase: 0 1
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:38 wg wait finish
2023/03/29 03:46:38 ------ all executors finish execution
2023/03/29 03:46:38 exec time: 13
2023/03/29 03:46:38 ----- PS len: 4
2023/03/29 03:46:38 [CLIENT] executor 3 has 2 replies
2023/03/29 03:46:38 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:38 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:38 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:38 [SERVER] executor 2 has 4 replies
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 1263 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 4755 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 576 signal and 0 cover from userspace component
time breakdown 0: 4, 9, 0
before receive testcase: 0 0
2023/03/29 03:46:38 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:38 ----- no new client coverage: false, true
2023/03/29 03:46:38 mutate testcase with failures
2023/03/29 03:46:38 ----- mutateArg()
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 3765 symlinkat symlinkat
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 2780 readlink readlink
2023/03/29 03:46:38 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:38 prog length: 5
2023/03/29 03:46:38 HasCrashFail:false HasNetFail:false
03:46:38 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x8142, 0x0)
readlink(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)=""/52, 0x34)
symlinkat(&(0x7f0000000000)='./file0\x00', r0, &(0x7f0000000080)='./file0\x00')
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000100), &(0x7f0000000140)='./file0\x00', 0x8, 0x6)
truncate(&(0x7f00000000c0)='./file0\x00', 0x7ffe)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 864
remove dir: /root/cephfs-client/dfs-0-623
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-624 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-624
receive_execute: 7, 12
receive_execute: 4, 12
receive_execute: 5, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 2, 12
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 623, pid 2934, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2934, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2934, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2934, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 307, pid 2934, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 307, flag collect 0
----- executor 3 signal number : 147
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4158, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11936, flag collect 0
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 5016
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
----- executor 2 signal number : 544
executor 2 server cover_cnt 4 output_pos_value 6911
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 18, 6, 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 15, 6, 0
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:46:38 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:38 wg wait finish
2023/03/29 03:46:38 ------ all executors finish execution
2023/03/29 03:46:38 exec time: 20
time breakdown 2: 16, 7, 0
2023/03/29 03:46:38 ----- PS len: 4
before receive testcase: 0 0
2023/03/29 03:46:38 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:38 [CLIENT] executor 3 has 5 replies
2023/03/29 03:46:38 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/29 03:46:38 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:38 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 [SERVER] executor 2 has 4 replies
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 5016 signal and 0 cover from userspace component
2023/03/29 03:46:38 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 544 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 3: 19, 5, 0
before receive testcase: 0 1
2023/03/29 03:46:38 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:38 ----- no new client coverage: false, true
2023/03/29 03:46:38 mutate testcase with failures
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 220 flock flock
2023/03/29 03:46:38 ----- mutateArg()
2023/03/29 03:46:38 ----- mutateArg()
2023/03/29 03:46:38 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:38 prog length: 10
2023/03/29 03:46:38 HasCrashFail:false HasNetFail:false
03:46:38 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x121040, 0x0)
flock(r0, 0xb)
r1 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
fcntl$lock(r1, 0x24, &(0x7f0000000040)={0x1, 0x2, 0xe2, 0xd51})
r2 = open$dir(&(0x7f0000000080)='./file0/file0\x00', 0x0, 0x69)
r3 = fcntl$dupfd(r0, 0x406, r2)
flock(r3, 0x2)
flock(r1, 0x1)
flock(r1, 0x2)
flock(r3, 0x2)
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1368
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-624
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-625 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-625
receive_execute: 5, 25
receive_execute: 3, 25
receive_execute: 2, 26
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 25
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2937, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2937, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2937, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 2937, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 112
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2937, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2937, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2937, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 2937, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 28
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 321, pid 2937, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 3 signal number : 4
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2937, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 3, 5
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 30, 9, 0
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 17905, flag collect 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1332
----- executor 2 executes write_coverage_signal cov->size 648, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 28, 10, 0
before receive testcase: 0 1
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 28, 10, 0
----- executor 2 signal number : 6521
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 532
executor 2 server cover_cnt 5 output_pos_value 8472
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 28, 12, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:46:38 wg wait finish
2023/03/29 03:46:38 ------ all executors finish execution
2023/03/29 03:46:38 exec time: 41
2023/03/29 03:46:38 ----- PS len: 4
2023/03/29 03:46:38 [CLIENT] executor 3 has 10 replies
2023/03/29 03:46:38 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 112 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:38 [SERVER] executor 2 has 5 replies
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 1332 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 6521 signal and 0 cover from userspace component
2023/03/29 03:46:38 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 532 signal and 0 cover from userspace component
2023/03/29 03:46:38 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:38 ----- no new client coverage: false, true
2023/03/29 03:46:38 mutate testcase with failures
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 2346 listxattr listxattr
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 3662 setxattr setxattr
2023/03/29 03:46:38 ----- mutateArg()
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 3985 write write
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 239 fsetxattr$trusted_overlay_nlink fsetxattr$trusted_overlay_nlink
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/29 03:46:38 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:38 prog length: 8
2023/03/29 03:46:38 HasCrashFail:false HasNetFail:false
03:46:38 ---executing program 0:
---
---
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
write(r0, &(0x7f00000001c0)="da237dd4ec2f57e0cd112dd455b741bb5a1bcf6edb13074ce235cb25abb7d5712bb16b6ac6e8b81201f065f4a84c5362ab967a508ec32c6ce4a6a7791b4a2c56371eaa089b0a9758c47708ed31d807fe4f67b26630e1450f4109f686877157f008149f12ad0aa7be0185a455f1f16833b3f915ea05b5bbe5", 0x78)
fsetxattr$trusted_overlay_nlink(r0, &(0x7f0000000240), &(0x7f0000000280)={'L+', 0x3}, 0x16, 0x2)
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
lgetxattr(&(0x7f0000000180)='./file0\x00', &(0x7f00000003c0)=@random={'os2.', 'trusted.overlay.redirect\x00'}, 0x0, 0x0)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f00000002c0), &(0x7f0000000300)='./file0\x00', 0x8, 0x3)
listxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080)=""/30, 0x1e)
setxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@known='user.incfs.id\x00', &(0x7f0000000140)='trusted.overlay.redirect\x00', 0x19, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1736
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-625
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-626 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-626
receive_execute: 10, 15
receive_execute: 9, 15
receive_execute: 7, 15
receive_execute: 7, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2942, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2942, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2942, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 2942, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 2942, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 37
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2942, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 150, pid 2942, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 150, flag collect 0
----- executor 3 signal number : 41
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 264, pid 2942, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 264, flag collect 0
----- executor 3 signal number : 78
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 3
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4164, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 11344, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4702
----- executor 2 executes write_coverage_signal cov->size 2089, flag collect 0
----- executor 2 signal number : 312
----- executor 2 executes write_coverage_signal cov->size 7113, flag collect 0
----- executor 2 signal number : 524
executor 2 server cover_cnt 5 output_pos_value 6881
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 4, 0
before receive testcase: 0 0
time breakdown 3: 25, 3, 0
before receive testcase: 0 1
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 8, 0
before receive testcase: 0 0
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:38 wg wait finish
2023/03/29 03:46:38 ------ all executors finish execution
2023/03/29 03:46:38 exec time: 23
2023/03/29 03:46:38 ----- PS len: 4
2023/03/29 03:46:38 [CLIENT] executor 3 has 8 replies
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 37 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 78 signal and 0 cover from executor 3
2023/03/29 03:46:38 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:38 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:38 [SERVER] executor 2 has 5 replies
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 4702 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 312 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 524 signal and 0 cover from userspace component
time breakdown 2: 22, 7, 0
before receive testcase: 0 1
2023/03/29 03:46:38 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:38 ----- no new client coverage: false, true
2023/03/29 03:46:38 mutate testcase with failures
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/29 03:46:38 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:38 prog length: 3
2023/03/29 03:46:38 HasCrashFail:false HasNetFail:false
03:46:38 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
lgetxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000040)=@known='user.incfs.id\x00', 0x0, 0x0)
write$binfmt_script(r0, &(0x7f0000000180)={'#! ', './file0', [{0x20, 'user.incfs.id\x00'}, {0x20, 'user.incfs.id\x00'}], 0xa, "ec1edc3d3482364eb1f42664144a14eaf2ab23bc929def683a7354a798871d642a39e5bbda087ad41d9e215c09f87a65e81b3add6eb451448a59e7bb1a567632aeaac6e8cb4b2fb399848a40468edb4400d970db9859d7b3613a3c0551a5d8bd8c27c8a4c40f5d30020e7947fd9788cd0e686019eb40252c49b98ecfec2733601c63b7708a5483f44ab26927baf910d91f5d54136be5"}, 0xbf)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 952
remove dir: /root/cephfs-client/dfs-0-626
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-627 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-627
receive_execute: 3, 11
receive_execute: 5, 12
receive_execute: 6, 13
receive_execute: 3, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 616, pid 2945, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 616, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 212, pid 2945, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 212, flag collect 0
----- executor 3 signal number : 93
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2945, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1775, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 942
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 4899, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 998
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 11526, flag collect 0
----- executor 2 signal number : 4909
----- executor 2 executes write_coverage_signal cov->size 2831, flag collect 0
----- executor 2 signal number : 339
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 2536, flag collect 0
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 17, 6, 0
----- executor 2 signal number : 1128
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 6151, flag collect 0
----- executor 2 signal number : 558
executor 2 server cover_cnt 8 output_pos_value 8967
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 19, 4, 0
before receive testcase: 0 0
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:38 wg wait finish
2023/03/29 03:46:38 ------ all executors finish execution
2023/03/29 03:46:38 exec time: 19
2023/03/29 03:46:38 ----- PS len: 4
2023/03/29 03:46:38 [CLIENT] executor 3 has 3 replies
2023/03/29 03:46:38 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:46:38 [SERVER] executor 2 has 8 replies
2023/03/29 03:46:38 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 942 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 998 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/29 03:46:38 [SERVER] executor 0 has 0 replies
time breakdown 2: 15, 8, 0
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 4909 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 339 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 1128 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 558 signal and 0 cover from userspace component
2023/03/29 03:46:38 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:38 ----- no new client coverage: false, true
2023/03/29 03:46:38 mutate testcase with failures
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 2462 openat openat
2023/03/29 03:46:38 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:38 prog length: 2
2023/03/29 03:46:38 HasCrashFail:false HasNetFail:false
03:46:38 ---executing program 0:
---
---
---
open$dir(&(0x7f00000001c0)='./file0\x00', 0x8440, 0x0)
openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x40881, 0x9a)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 14, 6, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/cephfs-client/dfs-0-627
remove dir time 9
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-628 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-628
receive_execute: 5, 11
receive_execute: 4, 11
receive_execute: 4, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 2, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 2948, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 2948, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 129
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 0, 3
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 16, 3, 0
executor 0 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 4755, flag collect 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 5552, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
----- executor 2 signal number : 1027
----- executor 2 executes write_coverage_signal cov->size 195, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 14506, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5318
----- executor 2 executes write_coverage_signal cov->size 1365, flag collect 0
----- executor 2 signal number : 300
----- executor 2 executes write_coverage_signal cov->size 14747, flag collect 0
----- executor 2 signal number : 1408
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 6, 0
executor 2 server cover_cnt 6 output_pos_value 8728
2023/03/29 03:46:38 for select break: 1
2023/03/29 03:46:38 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:46:38 wg wait finish
2023/03/29 03:46:38 ------ all executors finish execution
2023/03/29 03:46:38 exec time: 19
2023/03/29 03:46:38 ----- PS len: 4
2023/03/29 03:46:38 [CLIENT] executor 3 has 2 replies
time breakdown 2: 12, 8, 0
before receive testcase: 0 1
2023/03/29 03:46:38 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:46:38 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/29 03:46:38 [SERVER] executor 2 has 6 replies
2023/03/29 03:46:38 [SERVER] executor 0 has 0 replies
2023/03/29 03:46:38 [SERVER] executor 1 has 0 replies
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 1027 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 5318 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 300 signal and 0 cover from userspace component
2023/03/29 03:46:38 ------- fuzzer executor 2 receive 1408 signal and 0 cover from userspace component
2023/03/29 03:46:38 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:46:38 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/29 03:46:38 mutate testcase with failures
2023/03/29 03:46:38 ----- mutateArg()
2023/03/29 03:46:38 ----- insertCall()
2023/03/29 03:46:38 ----- generateCall 2749 pwrite64 pwrite64
2023/03/29 03:46:38 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:46:38 prog length: 17
2023/03/29 03:46:38 HasCrashFail:false HasNetFail:false
03:46:38 ---executing program 0:
---
---
---
stat(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
stat(&(0x7f0000000240)='./file0\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000340)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
pwrite64(0xffffffffffffffff, &(0x7f00000007c0)="201e681210bf84e8fbd7390231b6c7555e61d0b31b313ab1ef157bae0231d25127afaa26bd13e9e7980f6102615e2346688a7f5df42f11e1f570941df7b724e0ccdaf0c3c47557cb23db54c913475bfc980f83a404036a6505b3ce416678a1e423ce8191b302577f0f48a929cb272098ccd0f7eba54220", 0x77, 0x6)
stat(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
stat(&(0x7f0000000540)='./file0/../file0\x00', &(0x7f0000000740)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
setxattr$system_posix_acl(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='system.posix_acl_default\x00', &(0x7f00000005c0)=ANY=[@ANYBLOB="02000000010001000000000002000100", @ANYRES32=r0, @ANYBLOB="02000100", @ANYRES32=0xee00, @ANYBLOB='\x00\x00\x00\x00', @ANYRES32, @ANYBLOB="02000000", @ANYRES32=r1, @ANYBLOB="02000200", @ANYRES32=0xee01, @ANYBLOB="02000000", @ANYRES32=r2, @ANYBLOB="040004000000000008000200", @ANYRES32=r3, @ANYBLOB="08000500", @ANYRES32=r4, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000e00", @ANYRES32=r5, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee00, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee00, @ANYBLOB="10000000000000002000060000000000"], 0x84, 0x1)
r6 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r7 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
listxattr(&(0x7f0000000680)='./file0\x00', &(0x7f0000000a40)=""/4096, 0x1000)
flock(r7, 0x6)
fstat(r6, &(0x7f00000006c0))
fcntl$lock(r7, 0x7, &(0x7f0000000a00)={0x1, 0x0, 0xfffffffffffffffe, 0x7fff, 0xffffffffffffffff})
r8 = fcntl$dupfd(r6, 0x0, r6)
flock(r8, 0x2)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:dpkg_lock_t:s0\x00', 0x21, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3968
remove dir: /root/cephfs-client/dfs-0-628
time breakdown 0: 14, 5, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-629 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-629
receive_execute: 3, 8
receive_execute: 0, 9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 16
receive_execute: 6, 16
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2950, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2950, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2950, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2950, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2950, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2950, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2950, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2950, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 2950, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 445
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2950, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 8
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 150, pid 2950, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 150, flag collect 0
----- executor 3 signal number : 41
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 2950, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 112
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2950, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2950, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2950, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 211, pid 2950, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 211, flag collect 0
----- executor 3 signal number : 71
----- completed 16
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 220, pid 2950, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 220, flag collect 0
----- executor 3 signal number : 8
----- completed 17
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 83336, 2, 0
execute_one time: 1, 83338
2023/03/29 03:48:01 for select break: 1
2023/03/29 03:48:01 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 28592, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:48:01 for select break: 1
2023/03/29 03:48:01 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1478
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1147
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 22, 83340, 0
before receive testcase: 0 0
----- executor 2 signal number : 836
----- executor 2 executes write_coverage_signal cov->size 20818, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6266
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 748
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 1: 9, 83348, 0
before receive testcase: 0 0
----- executor 2 signal number : 4515
----- executor 2 executes write_coverage_signal cov->size 30786, flag collect 0
2023/03/29 03:48:01 for select break: 1
2023/03/29 03:48:01 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1778
----- executor 2 executes write_coverage_signal cov->size 2449, flag collect 0
----- executor 2 signal number : 165
----- executor 2 executes write_coverage_signal cov->size 3761, flag collect 0
----- executor 2 signal number : 319
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 22, 83347, 0
before receive testcase: 0 0
----- executor 2 signal number : 491
----- executor 2 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:48:01 for select break: 1
2023/03/29 03:48:01 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:01 wg wait finish
2023/03/29 03:48:01 ------ all executors finish execution
2023/03/29 03:48:01 exec time: 83368
2023/03/29 03:48:01 ----- PS len: 4
2023/03/29 03:48:01 [CLIENT] executor 3 has 17 replies
2023/03/29 03:48:01 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:01 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:01 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:48:01 [SERVER] executor 2 has 17 replies
2023/03/29 03:48:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/29 03:48:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 1478 signal and 0 cover from userspace component
2023/03/29 03:48:01 fuzzer receive 445 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 1147 signal and 0 cover from userspace component
2023/03/29 03:48:01 fuzzer receive 112 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 836 signal and 0 cover from userspace component
2023/03/29 03:48:01 fuzzer receive 71 signal and 0 cover from executor 3
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:48:01 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 6266 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 748 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 4515 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 1778 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 165 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 319 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 491 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 2704 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 4198 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 1757 signal and 0 cover from userspace component
2023/03/29 03:48:01 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:01 ----- no new client coverage: false, true
----- executor 2 signal number : 2704
----- executor 2 executes write_coverage_signal cov->size 32266, flag collect 0
----- executor 2 signal number : 4198
----- executor 2 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1757
executor 2 server cover_cnt 17 output_pos_value 26593
time breakdown 2: 11, 83360, 0
before receive testcase: 0 0
2023/03/29 03:48:01 mutate testcase with failures
2023/03/29 03:48:01 ----- insertCall()
2023/03/29 03:48:01 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/29 03:48:01 ----- mutateArg()
2023/03/29 03:48:01 ----- mutateArg()
2023/03/29 03:48:01 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:01 prog length: 4
2023/03/29 03:48:01 HasCrashFail:false HasNetFail:false
03:48:01 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000780)='./file0\x00', 0xa043, 0x0)
r1 = dup(r0)
lseek(r1, 0x0, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='\x00', &(0x7f0000000080), &(0x7f00000007c0)=ANY=[@ANYBLOB=""/4117], 0x1015, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 4728
remove dir: /root/cephfs-client/dfs-0-629
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-630 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-630
receive_execute: 3, 13
receive_execute: 16, 14
receive_execute: 16, 13
receive_execute: 9, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 623, pid 2955, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2955, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4, pid 2955, write pid:-2127041725
----- executor 3 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 3 signal number : 4
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2955, write pid:-2127041725
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/29 03:48:01 for select break: 1
2023/03/29 03:48:01 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4154, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11922, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:48:01 for select break: 1
2023/03/29 03:48:01 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 29, 5, 0
before receive testcase: 0 0
2023/03/29 03:48:01 for select break: 1
2023/03/29 03:48:01 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 6, 0
before receive testcase: 0 0
2023/03/29 03:48:01 for select break: 1
2023/03/29 03:48:01 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:01 wg wait finish
2023/03/29 03:48:01 ------ all executors finish execution
----- executor 2 signal number : 5027
----- executor 2 executes write_coverage_signal cov->size 6231, flag collect 0
----- executor 2 signal number : 544
executor 2 server cover_cnt 4 output_pos_value 6922
2023/03/29 03:48:01 exec time: 19
time breakdown 2: 16, 6, 0
2023/03/29 03:48:01 ----- PS len: 4
2023/03/29 03:48:01 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/29 03:48:01 [CLIENT] executor 3 has 4 replies
2023/03/29 03:48:01 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:01 [SERVER] executor 2 has 4 replies
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 03:48:01 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 5027 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 544 signal and 0 cover from userspace component
2023/03/29 03:48:01 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:01 ----- no new client coverage: false, true
time breakdown 3: 30, 3, 0
before receive testcase: 0 1
2023/03/29 03:48:01 mutate testcase with failures
2023/03/29 03:48:01 ----- insertCall()
2023/03/29 03:48:01 ----- generateCall 2341 lchown lchown
2023/03/29 03:48:01 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:01 prog length: 8
2023/03/29 03:48:01 HasCrashFail:false HasNetFail:false
03:48:01 ---executing program 0:
---
---
---
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file1\x00')
r0 = open(&(0x7f0000000500)='./file0\x00', 0x30440, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000580)='./file0\x00', &(0x7f0000000440), &(0x7f00000005c0)=ANY=[], 0x5c, 0x0)
setxattr$security_smack_transmute(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), 0x0, 0x0, 0x3)
lsetxattr$security_selinux(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), 0x0, 0x0, 0x0)
fstat(r0, &(0x7f0000000040)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000000)='./file1\x00', r1, 0x0)
listxattr(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1448
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-630
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 37
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-631 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-631
receive_execute: 5, 40
receive_execute: 3, 40
receive_execute: 2, 40
receive_execute: 2, 40
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 2957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 158
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 2957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 125
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 2957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 66
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 425, pid 2957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 425, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 259, pid 2957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 259, flag collect 0
----- executor 3 signal number : 94
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 582, pid 2957, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 582, flag collect 0
----- executor 3 signal number : 30
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 28, 0
execute_one time: 0, 40
2023/03/29 03:48:01 for select break: 1
2023/03/29 03:48:01 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:48:01 for select break: 1
2023/03/29 03:48:01 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:48:01 for select break: 1
2023/03/29 03:48:01 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 42, 43, 0
before receive testcase: 0 1
time breakdown 3: 45, 42, 0
before receive testcase: 0 0
time breakdown 1: 43, 44, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16291, flag collect 0
----- executor 2 signal number : 1408
----- executor 2 executes write_coverage_signal cov->size 23375, flag collect 0
----- executor 2 signal number : 1018
----- executor 2 executes write_coverage_signal cov->size 996, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7899
----- executor 2 executes write_coverage_signal cov->size 3176, flag collect 0
2023/03/29 03:48:01 for select break: 1
2023/03/29 03:48:01 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:01 wg wait finish
2023/03/29 03:48:01 ------ all executors finish execution
2023/03/29 03:48:01 exec time: 102
2023/03/29 03:48:01 ----- PS len: 4
2023/03/29 03:48:01 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:01 [CLIENT] executor 3 has 8 replies
2023/03/29 03:48:01 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:01 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 158 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 125 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 66 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 94 signal and 0 cover from executor 3
2023/03/29 03:48:01 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/29 03:48:01 [SERVER] executor 2 has 8 replies
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 1408 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 1018 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 7899 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 386 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 4810 signal and 0 cover from userspace component
2023/03/29 03:48:01 ------- fuzzer executor 2 receive 928 signal and 0 cover from userspace component
----- executor 2 signal number : 386
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 25461, flag collect 0
----- executor 2 signal number : 4810
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 928
executor 2 server cover_cnt 8 output_pos_value 16546
time breakdown 2: 42, 61, 0
before receive testcase: 0 1
2023/03/29 03:48:01 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:01 ----- no new client coverage: false, true
2023/03/29 03:48:01 mutate testcase with failures
2023/03/29 03:48:01 ----- insertCall()
2023/03/29 03:48:01 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/29 03:48:01 ----- mutateArg()
2023/03/29 03:48:01 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:01 prog length: 5
2023/03/29 03:48:01 HasCrashFail:false HasNetFail:false
03:48:01 ---executing program 0:
---
---
---
sync()
symlinkat(&(0x7f00000000c0)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000000100)='./file1/file0\x00', &(0x7f0000000140), &(0x7f0000000180)={'L-', 0x6}, 0x16, 0x1)
link(&(0x7f0000000000)='./file1/file0\x00', &(0x7f0000000280)='./file1/file0\x00')
lsetxattr$security_capability(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000200), &(0x7f0000000240)=@v3={0x3000000, [{0x7, 0x1}, {0xfffffff9, 0x4}]}, 0x18, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1184
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-631
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-632 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-632
receive_execute: 24, 10
receive_execute: 22, 11
receive_execute: 5, 11
receive_execute: 23, 11
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 2960, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2960, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2960, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2960, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 342, pid 2960, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 342, flag collect 0
----- executor 3 signal number : 196
----- completed 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1278, 0, 0
execute_one time: 1, 1278
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 34, 1281, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 34, 1286, 0
time breakdown 1: 33, 1283, 0
before receive testcase: 0 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12962, flag collect 0
----- executor 2 signal number : 1473
----- executor 2 executes write_coverage_signal cov->size 7109, flag collect 0
----- executor 2 signal number : 950
----- executor 2 executes write_coverage_signal cov->size 417, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 14672, flag collect 0
----- executor 2 signal number : 4886
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 0
----- executor 2 signal number : 256
----- executor 2 executes write_coverage_signal cov->size 6585, flag collect 0
----- executor 2 signal number : 1960
----- executor 2 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 2 signal number : 250
----- executor 2 executes write_coverage_signal cov->size 30909, flag collect 0
----- executor 2 signal number : 437
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 11156, flag collect 0
----- executor 2 signal number : 2978
----- executor 2 executes write_coverage_signal cov->size 11658, flag collect 0
----- executor 2 signal number : 1111
executor 2 server cover_cnt 11 output_pos_value 14408
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 1304
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 5 replies
2023/03/29 03:48:03 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 196 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 2 has 11 replies
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1473 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 950 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 4886 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 256 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1960 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 250 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 437 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 2978 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1111 signal and 0 cover from userspace component
time breakdown 2: 16, 1294, 0
before receive testcase: 0 1
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 3
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001940)='./file0\x00', 0x40, 0x0)
r1 = fcntl$dupfd(r0, 0x0, r0)
fstat(r1, &(0x7f0000000000))
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 384
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-632
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-633 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-633
receive_execute: 16, 17
receive_execute: 6, 17
receive_execute: 13, 17
receive_execute: 18, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 2963, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2963, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2963, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 35, 4, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4247, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 11568, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4904
----- executor 2 executes write_coverage_signal cov->size 6157, flag collect 0
----- executor 2 signal number : 528
executor 2 server cover_cnt 4 output_pos_value 6772
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 23, 6, 0
before receive testcase: 0 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 25
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 3 replies
2023/03/29 03:48:03 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 4 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 4904 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 528 signal and 0 cover from userspace component
time breakdown 0: 30, 8, 0
before receive testcase: 0 0
time breakdown 1: 34, 4, 0
before receive testcase: 0 1
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 2462 openat openat
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 8
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x1791c2, 0x0)
truncate(&(0x7f0000000180)='./file0\x00', 0x0)
openat(r0, &(0x7f0000000300)='./file0\x00', 0x408000, 0x10)
open(&(0x7f00000002c0)='./file0\x00', 0x101080, 0x1a9)
setxattr$incfs_id(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), 0x0, 0x0, 0x0)
setxattr$security_selinux(&(0x7f0000000040)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)='system_u:object_r:cpu_device_t:s0\x00', 0x22, 0x2)
lsetxattr$security_ima(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280)=@ng={0x4, 0x9, "f03dab6ff9677f6d2a"}, 0xb, 0x1)
open(&(0x7f00000001c0)='./file0\x00', 0x60440, 0x80)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1640
remove dir: /root/cephfs-client/dfs-0-633
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-634 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-634
receive_execute: 7, 14
receive_execute: 6, 15
receive_execute: 4, 15
receive_execute: 2, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 618, pid 2966, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 618, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 849, pid 2966, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 849, flag collect 0
----- executor 3 signal number : 243
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2966, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 2966, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 4
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 2966, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 73
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 453, pid 2966, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 453, flag collect 0
----- executor 3 signal number : 11
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 453, pid 2966, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 453, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 2966, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 6, 7, 0
execute_one time: 2, 13
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 16, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4423, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 22805, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 17, 18, 0
before receive testcase: 0 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 21, 18, 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 1029
----- executor 2 executes write_coverage_signal cov->size 1095, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7364
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 4400, flag collect 0
----- executor 2 signal number : 1474
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1756
executor 2 server cover_cnt 7 output_pos_value 13101
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 35
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 8 replies
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 2 has 7 replies
2023/03/29 03:48:03 fuzzer receive 243 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1029 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 19, 21, 0
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 7364 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1474 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1756 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 3765 symlinkat symlinkat
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 8
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x101240, 0x0)
lsetxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f0000000480)=@v2={0x2000000, [{}, {0x40, 0x7}]}, 0x14, 0x0)
symlinkat(&(0x7f0000000100)='./file0\x00', r0, &(0x7f0000000140)='./file0\x00')
fstat(r0, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)='system.posix_acl_access\x00', &(0x7f00000004c0)=ANY=[@ANYBLOB="0200000001d867d642e2476ca9dc93dd00050005be8f2b17e47700", @ANYRES32=0x0, @ANYBLOB="02000400", @ANYRES32=r1, @ANYBLOB="02000300", @ANYRES32=r2, @ANYBLOB="040000000000000008000100", @ANYRES32=r3, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee00, @ANYBLOB="10000000000000002000040000000000"], 0x4c, 0x1)
lchown(&(0x7f0000000180)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2112
remove dir: /root/cephfs-client/dfs-0-634
remove dir time 21
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-635 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-635
receive_execute: 8, 22
receive_execute: 3, 22
receive_execute: 4, 22
receive_execute: 6, 22
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2969, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 271, pid 2969, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 3 signal number : 156
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2969, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2969, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 2969, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 2969, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2969, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 380, pid 2969, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 380, flag collect 0
----- executor 3 signal number : 101
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 6, 0
execute_one time: 1, 11
2023/03/29 03:48:03 for select break: 1
time breakdown 3: 30, 13, 0
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 17580, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 21027, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 26, 15, 0
----- executor 2 signal number : 1024
----- executor 2 executes write_coverage_signal cov->size 736, flag collect 0
before receive testcase: 0 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 69
time breakdown 0: 28, 14, 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 7692
----- executor 2 executes write_coverage_signal cov->size 2794, flag collect 0
----- executor 2 signal number : 335
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 17028, flag collect 0
----- executor 2 signal number : 3751
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2242
executor 2 server cover_cnt 8 output_pos_value 16539
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
time breakdown 2: 25, 20, 0
before receive testcase: 0 1
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 42
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 8 replies
2023/03/29 03:48:03 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 156 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 8 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1024 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 7692 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 335 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 3751 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 2242 signal and 0 cover from userspace component
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 171 dup2 dup2
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 4
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
dup2(r0, 0xffffffffffffffff)
open$dir(&(0x7f0000000380)='./file0\x00', 0x0, 0x0)
openat(0xffffffffffffff9c, &(0x7f0000000180)='./file1\x00', 0x50d41, 0x129)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/cephfs-client/dfs-0-635
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-636 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-636
receive_execute: 11, 9
receive_execute: 9, 9
receive_execute: 3, 9
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 0, pid 2973, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2973, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2973, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
receive_execute: 9, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 616, pid 2973, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 616, flag collect 0
----- executor 3 signal number : 226
----- completed 4
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 15, 0, 0
execute_one time: 0, 15
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 16, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6064, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 signal number : 1267
----- executor 2 executes write_coverage_signal cov->size 260, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 15148, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5289
----- executor 2 executes write_coverage_signal cov->size 1739, flag collect 0
----- executor 2 signal number : 308
----- executor 2 executes write_coverage_signal cov->size 6656, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 18, 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 613
before receive testcase: 0 0
time breakdown 1: 18, 17, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 7558
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 28
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 4 replies
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 226 signal and 0 cover from executor 3
time breakdown 2: 12, 19, 0
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 5 replies
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1267 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 5289 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 308 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 613 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 13
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x121041, 0x0)
lsetxattr$security_selinux(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000380)='system_u:object_r:sendmail_exec_t:s0\x00', 0x22, 0x5)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x40202, 0x0)
write(r1, &(0x7f0000000040)="9e", 0x400000)
r2 = dup(r1)
fsetxattr$trusted_overlay_nlink(r2, &(0x7f0000000300), &(0x7f0000000340)={'L-'}, 0x16, 0x3)
fsetxattr$trusted_overlay_nlink(r1, &(0x7f0000000240), &(0x7f0000000280)={'L+', 0x6}, 0x16, 0x1)
chdir(&(0x7f00000002c0)='./file1\x00')
r3 = open$dir(&(0x7f00000003c0)='./file1\x00', 0x10000, 0x121)
fcntl$F_SET_RW_HINT(r3, 0x40c, &(0x7f0000000400))
lsetxattr$trusted_overlay_redirect(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='./file0\x00', 0x8, 0x1)
unlink(&(0x7f0000000100)='./file1\x00')
write$binfmt_misc(r0, &(0x7f0000000540)=ANY=[@ANYBLOB="73797a3011142e8e646b07c351667d4d7cbc97910c834fee91f8f0fd2042e69616ded87c87c18e5738874148daf7df6e11384b41dd07a7e09a85ed8008f384f33c23e3bf797f8880d750c64a2d12f32a3e7e6d8364f43da9d90f87350bc9af800c873d94a77c57302a8a609f3d54e7c57ec94f5bdc128d9dec8c4c1bbe75b907a38b941b10d13686b04f51223d4e48f55093af1335d9b79f3b46b0ebfb1149926f8e05283353e093d60e29daf321247f18121ce452999231a842827d5231b3e0f6aa2853c9848854f0f0815032b974e2f3b2584c2661b0e34b459c3b78588e29ee62e78aac3de6ebfc2b7f903f9254a3c8da3edc5b393633064b"], 0x6f)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2624
remove dir: /root/cephfs-client/dfs-0-636
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-637 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-637
receive_execute: 6, 10
receive_execute: 2, 10
receive_execute: 4, 10
receive_execute: 4, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 2976, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2976, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 386, pid 2976, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 3 signal number : 155
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 55940, pid 2976, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 55940, flag collect 0
----- executor 3 signal number : 322
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2976, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 119, pid 2976, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 119, flag collect 0
----- executor 3 signal number : 58
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 108, pid 2976, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2976, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2976, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2976, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2976, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2976, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1338, pid 2976, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1338, flag collect 0
----- executor 3 signal number : 591
----- completed 13
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 16, 18, 0
execute_one time: 0, 34
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16, 35, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 14, 38, 0
time breakdown 1: 14, 37, 0
before receive testcase: 0 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1434
----- executor 2 executes write_coverage_signal cov->size 31460, flag collect 0
----- executor 2 signal number : 1071
----- executor 2 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6441
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 24499, flag collect 0
----- executor 2 signal number : 5541
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1744
executor 2 server cover_cnt 7 output_pos_value 16324
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 52
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 13 replies
2023/03/29 03:48:03 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 7 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1434 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 155 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1071 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 322 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 58 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 6441 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 5541 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1744 signal and 0 cover from userspace component
time breakdown 2: 12, 42, 0
before receive testcase: 0 0
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 591 signal and 0 cover from executor 3
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 3765 symlinkat symlinkat
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 8
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0, 0x0)
r0 = open$dir(&(0x7f0000000400)='./file0\x00', 0x400000, 0x101)
symlinkat(&(0x7f00000003c0)='./file0\x00', r0, &(0x7f0000000440)='./file1\x00')
stat(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0)='system.posix_acl_default\x00', &(0x7f0000000340)={{}, {0x1, 0x9}, [{0x2, 0x7, r1}, {0x2, 0x7, 0xffffffffffffffff}, {0x2, 0x1, 0xffffffffffffffff}, {0x2, 0x5, 0xee01}], {0x4, 0x6}, [{0x8, 0x3, 0xee00}, {0x8, 0x4, r2}, {0x8, 0x4, r3}], {0x10, 0x4}, {0x20, 0x7}}, 0x5c, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2752
remove dir: /root/cephfs-client/dfs-0-637
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 5
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-638 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-638
receive_execute: 10, 6
receive_execute: 3, 7
receive_execute: 8, 6
receive_execute: 7, 7
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 2980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 2980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 2980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 23
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 2980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2980, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 4
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4163, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11324, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 4698
----- executor 2 executes write_coverage_signal cov->size 4866, flag collect 0
----- executor 2 signal number : 368
----- executor 2 executes write_coverage_signal cov->size 11913, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 568
executor 2 server cover_cnt 5 output_pos_value 6979
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 16
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 8 replies
2023/03/29 03:48:03 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 5 replies
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 4698 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 368 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 568 signal and 0 cover from userspace component
time breakdown 2: 10, 9, 0
before receive testcase: 0 0
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 5
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001680)=ANY=[@ANYBLOB=""], 0x114b)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x101000, 0x2d)
readlinkat(r0, &(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=""/98, 0x62)
open(&(0x7f0000001640)='./file0\x00', 0x50c40, 0x8)
open$dir(&(0x7f0000001600)='./file0\x00', 0x2, 0x114)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 3: 16, 6, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5184
remove dir: /root/cephfs-client/dfs-0-638
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 20
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-639 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-639
receive_execute: 5, 22
receive_execute: 2, 21
receive_execute: 4, 21
receive_execute: 4, 21
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2984, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 2984, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2984, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 654, pid 2984, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 654, flag collect 0
----- executor 3 signal number : 252
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 683, pid 2984, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 683, flag collect 0
----- executor 3 signal number : 146
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 2, 4
time breakdown 3: 27, 8, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4442, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 12859, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1064
----- executor 2 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 26504, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 9, 0
before receive testcase: 0 1
----- executor 2 signal number : 7450
----- executor 2 executes write_coverage_signal cov->size 9711, flag collect 0
----- executor 2 signal number : 667
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 25, 10, 0
executor 2 server cover_cnt 5 output_pos_value 9855
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 33
2023/03/29 03:48:03 ----- PS len: 4
time breakdown 2: 24, 10, 0
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 5 replies
2023/03/29 03:48:03 [CLIENT] executor 3 has 5 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1064 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 252 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 146 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 7450 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 667 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 2458 open open
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 8
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
r1 = fcntl$dupfd(r0, 0x0, r0)
write$binfmt_elf32(r1, &(0x7f0000000540)={{0x7f, 0x45, 0x4c, 0x46, 0x6, 0x2, 0x8, 0x3, 0x3f, 0x3, 0x0, 0x400, 0x252, 0x38, 0x12c, 0x1f, 0x35, 0x20, 0x2, 0xd5, 0x3, 0x3ff}, [{0x2, 0x77, 0x6, 0x1, 0x6000, 0x80, 0x0, 0x1}], "9b6052486710469194fc84055eb21e554abc26ccfadcd61cb4bad11ac3e7e041e6b4869b7a85ded9c0fca0cc497d1884ef0129826f14b8866f2f687c2ff5c69ba89d726379123e51e9f200d978374549c84911a14fb7a46fc0f0ba4fb67e53cefd2b1cdecbf3c27897149a6e7adfd6c5eff4b7", ['\x00']}, 0x1cb)
open(&(0x7f0000000000)='./file4\x00', 0xa000, 0x1dc)
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x0)
lgetxattr(&(0x7f00000004c0)='./file4\x00', &(0x7f0000000500)=@known='system.posix_acl_default\x00', 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2848
remove dir: /root/cephfs-client/dfs-0-639
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-640 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-640
receive_execute: 6, 9
receive_execute: 3, 9
receive_execute: 3, 10
receive_execute: 5, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 621, pid 2988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 2988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 185
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 2988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 33
----- completed 5
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 590, pid 2988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 590, flag collect 0
----- executor 3 signal number : 30
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 2988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 225, pid 2988, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 225, flag collect 0
----- executor 3 signal number : 82
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 18, 0, 0
execute_one time: 1, 18
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 15, 20, 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 11954, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 20960, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1047
----- executor 2 executes write_coverage_signal cov->size 835, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 12, 22, 0
before receive testcase: 0 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 22, 0
before receive testcase: 0 0
----- executor 2 signal number : 7482
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 18176, flag collect 0
----- executor 2 signal number : 3817
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1769
executor 2 server cover_cnt 7 output_pos_value 15597
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 35
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 8 replies
2023/03/29 03:48:03 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 185 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 7 replies
time breakdown 2: 13, 25, 0
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1047 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 7482 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 3817 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1769 signal and 0 cover from userspace component
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 3967 truncate truncate
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 8
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='security.SMACK64EXEC\x00', 0x0, 0x0, 0x0)
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file0\x00')
setxattr$system_posix_acl(&(0x7f0000000180)='.\x00', &(0x7f00000001c0)='system.posix_acl_access\x00', &(0x7f00000011c0)=ANY=[@ANYBLOB="02000000010000000000000004000000000000001000000000000000200000000000000048d2241ebe734c033854e2d4d275ae601ce5920c16d9232c3350aca50ff8cba959eb8b1e1ca47a1b1a96a2ffe580d0f46b50c90caf1191ea09ef5e37674d274bf268741309"], 0x24, 0x0)
truncate(&(0x7f0000001240)='./file0\x00', 0x6)
pread64(r0, &(0x7f00000001c0)=""/4091, 0xffb, 0x38)
chmod(&(0x7f0000000140)='./file0\x00', 0x1)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000180)='system_u:object_r:xen_device_t:s0\x00', 0x22, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1600
remove dir: /root/cephfs-client/dfs-0-640
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-641 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-641
receive_execute: 13, 16
receive_execute: 13, 15
receive_execute: 9, 15
receive_execute: 12, 15
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2992, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 399, pid 2992, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 3 signal number : 129
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 2992, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 715, pid 2992, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 715, flag collect 0
----- executor 3 signal number : 70
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 853, pid 2992, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 853, flag collect 0
----- executor 3 signal number : 179
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2992, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 503, pid 2992, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 503, flag collect 0
----- executor 3 signal number : 18
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 471, pid 2992, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 471, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 6, 0
execute_one time: 1, 15
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 1: 28, 19, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10321, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 27, 20, 0
before receive testcase: 0 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1117
----- executor 2 executes write_coverage_signal cov->size 1741, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 8182
----- executor 2 executes write_coverage_signal cov->size 2428, flag collect 0
----- executor 2 signal number : 334
----- executor 2 executes write_coverage_signal cov->size 4003, flag collect 0
----- executor 2 signal number : 660
----- executor 2 executes write_coverage_signal cov->size 12431, flag collect 0
----- executor 2 signal number : 2798
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1448
executor 2 server cover_cnt 8 output_pos_value 16021
time breakdown 3: 29, 17, 0
before receive testcase: 0 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 25, 22, 0
before receive testcase: 0 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 39
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 8 replies
2023/03/29 03:48:03 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 70 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 179 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 8 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1117 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 8182 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 334 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 660 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 2798 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1448 signal and 0 cover from userspace component
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 3
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000100)='./file0\x00', 0x40c0, 0x0)
r1 = open(&(0x7f00000003c0)='./file1\x00', 0x121340, 0x0)
fcntl$dupfd(r1, 0x0, r0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 448
remove dir: /root/cephfs-client/dfs-0-641
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-642 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-642
receive_execute: 12, 11
receive_execute: 7, 11
receive_execute: 10, 12
receive_execute: 10, 11
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 2996, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 2996, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 7
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2996, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 23, 5, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 5779, flag collect 0
executor 1 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 signal number : 605
----- executor 2 executes write_coverage_signal cov->size 10624, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1038
----- executor 2 executes write_coverage_signal cov->size 386, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 27218, flag collect 0
time breakdown 1: 22, 5, 0
----- executor 2 signal number : 6292
----- executor 2 executes write_coverage_signal cov->size 4415, flag collect 0
----- executor 2 signal number : 364
----- executor 2 executes write_coverage_signal cov->size 21128, flag collect 0
before receive testcase: 0 1
time breakdown 0: 21, 7, 0
before receive testcase: 0 1
----- executor 2 signal number : 1420
executor 2 server cover_cnt 6 output_pos_value 9805
time breakdown 2: 18, 9, 0
before receive testcase: 0 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 25
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 3 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 6 replies
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 605 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1038 signal and 0 cover from userspace component
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 6292 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 364 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1420 signal and 0 cover from userspace component
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 2809 rename rename
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 3970 unlink unlink
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 121 chmod chmod
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 5
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(&(0x7f0000000000)='.\x00', &(0x7f0000000040), 0x0, 0x0, 0x3)
lsetxattr$security_selinux(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:passwd_exec_t:s0\x00', 0x23, 0x1)
unlink(&(0x7f0000000100)='./file1\x00')
chmod(&(0x7f0000000200)='./file0\x00', 0x80)
rename(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 920
remove dir: /root/cephfs-client/dfs-0-642
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 13
-----finish removing dir
receive_execute: 10, 16
receive_execute: 7, 16
receive_execute: 9, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-643 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-643
receive_execute: 11, 17
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 199, pid 2999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 199, flag collect 0
----- executor 3 signal number : 139
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 21
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 2999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 2999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 2999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one loop: 0, 0, 0
execute_one time: 2, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 0, 2
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 28, 2, 0
executor 2 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 0: 25, 4, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 9957, flag collect 0
----- executor 2 signal number : 1437
----- executor 2 executes write_coverage_signal cov->size 187, flag collect 0
----- executor 2 signal number : 68
----- executor 2 executes write_coverage_signal cov->size 342, flag collect 0
----- executor 2 signal number : 239
----- executor 2 executes write_coverage_signal cov->size 12963, flag collect 0
----- executor 2 signal number : 1960
----- executor 2 executes write_coverage_signal cov->size 10781, flag collect 0
----- executor 2 signal number : 439
executor 2 server cover_cnt 5 output_pos_value 4159
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 23, 6, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 27
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 5 replies
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 5 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1437 signal and 0 cover from userspace component
time breakdown 1: 26, 11, 0
2023/03/29 03:48:03 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 68 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 239 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1960 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 439 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 4
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
symlink(&(0x7f0000000140)='.\x00', &(0x7f0000000180)='./file0\x00')
setxattr$trusted_overlay_upper(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000600)=ANY=[], 0x44, 0x3)
setxattr$security_smack_transmute(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x1)
stat(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 800
remove dir: /root/cephfs-client/dfs-0-643
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 2
-----finish removing dir
receive_execute: 1, 3
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-644 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-644
receive_execute: 10, 3
receive_execute: 9, 3
receive_execute: 7, 3
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
execute_one time: 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 481, pid 3002, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 598, pid 3002, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 598, flag collect 0
----- executor 3 signal number : 208
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 494, pid 3002, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 494, flag collect 0
----- executor 3 signal number : 6
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 160, pid 3002, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 160, flag collect 0
----- executor 3 signal number : 23
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 5, 7, 0
execute_one time: 1, 12
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13018, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 15704, flag collect 0
----- executor 2 signal number : 970
----- executor 2 executes write_coverage_signal cov->size 639, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 27890, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 12, 14, 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 4, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 6947
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 0
----- executor 2 signal number : 255
----- executor 2 executes write_coverage_signal cov->size 3544, flag collect 0
----- executor 2 signal number : 372
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 24079, flag collect 0
time breakdown 3: 13, 14, 0
before receive testcase: 0 1
----- executor 2 signal number : 3959
----- executor 2 executes write_coverage_signal cov->size 18975, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1197
executor 2 server cover_cnt 9 output_pos_value 15188
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 22
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 4 replies
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 9 replies
time breakdown 2: 10, 19, 0
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 970 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 6947 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 255 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 372 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 3959 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1197 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 208 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 220 flock flock
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 131 close close
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 8
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000400)='./file0\x00', 0x0, 0x0)
r1 = openat(r0, &(0x7f0000000280)='./file0\x00', 0x8000, 0x4)
r2 = fcntl$dupfd(0xffffffffffffffff, 0x0, r0)
flock(r2, 0x8)
symlink(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='./file0\x00')
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@ng={0x4, 0x12, "7f947318f66b2ebb259c5a25"}, 0xe, 0x1)
close(r1)
lsetxattr$security_ima(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)=@v2={0x5, 0x0, 0x4, 0x8, 0x7b, "55f60c3d22c6e2267e69918b5911d6380cf31399de3d9f4ee7ca5025ac931d67a496c66b61ead62fcdc615aea4814611e36331f93d089a68b366fb06e7b4bec227e30269a581725e9b8764c63170bfbebb1c4e5bb7f622080aa9d7bf0814681b22dec61a4b3e93c25cd61c3a02316059d890b93bc84aa3ecff49d1"}, 0x84, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1720
remove dir: /root/cephfs-client/dfs-0-644
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-645 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-645
receive_execute: 9, 7
receive_execute: 7, 8
receive_execute: 3, 8
receive_execute: 8, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 3005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 481, pid 3005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 154
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 3005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 6
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 3005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 105
----- completed 8
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 1, 0
execute_one time: 1, 11
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16, 13, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8129, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1275
----- executor 2 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 19589, flag collect 0
----- executor 2 signal number : 5578
----- executor 2 executes write_coverage_signal cov->size 1387, flag collect 0
----- executor 2 signal number : 287
----- executor 2 executes write_coverage_signal cov->size 13783, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 638
time breakdown 1: 15, 14, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 7861
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 14, 0
before receive testcase: 0 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 23
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 8 replies
2023/03/29 03:48:03 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 154 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
time breakdown 2: 11, 15, 0
2023/03/29 03:48:03 [SERVER] executor 2 has 5 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1275 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 5578 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 287 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 638 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 2723 pread64 pread64
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 12
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
r1 = fcntl$dupfd(r0, 0x406, r0)
r2 = openat(r1, &(0x7f00000001c0)='./file3\x00', 0x101002, 0x104)
fcntl$setsig(r2, 0xa, 0x10000e)
r3 = dup2(r1, 0xffffffffffffffff)
r4 = dup2(r1, r3)
pread64(r4, &(0x7f0000000300)=""/255, 0xff, 0x800)
link(&(0x7f0000000140)='./file3\x00', &(0x7f00000002c0)='./file2\x00')
fstat(r1, &(0x7f0000000200))
link(&(0x7f0000000080)='./file0\x00', &(0x7f0000000400)='./file1\x00')
unlink(&(0x7f0000000000)='./file0\x00')
lsetxattr$security_selinux(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)='system_u:object_r:logrotate_var_lib_t:s0\x00', 0x29, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1760
remove dir: /root/cephfs-client/dfs-0-645
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-646 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-646
receive_execute: 4, 22
receive_execute: 2, 21
receive_execute: 2, 21
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
receive_execute: 2, 22
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 621, pid 3008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 3008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 171
----- completed 10
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 434, pid 3008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 434, flag collect 0
----- executor 3 signal number : 24
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 2, 0
execute_one time: 0, 7
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 14049, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
time breakdown 3: 26, 8, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1299
----- executor 2 executes write_coverage_signal cov->size 697, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 24, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 7401
----- executor 2 executes write_coverage_signal cov->size 691, flag collect 0
----- executor 2 signal number : 259
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 765
executor 2 server cover_cnt 5 output_pos_value 9807
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 23, 12, 0
before receive testcase: 0 0
time breakdown 2: 23, 13, 0
before receive testcase: 0 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 36
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 12 replies
2023/03/29 03:48:03 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 171 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 5 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1299 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 7401 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 259 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 765 signal and 0 cover from userspace component
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 3967 truncate truncate
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 2462 openat openat
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 6
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
removexattr(&(0x7f0000000100)='./file0\x00', 0x0)
open$dir(&(0x7f00000001c0)='./file0\x00', 0x501040, 0x104)
r0 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x42, 0x0)
lsetxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x3, 0x1, 0x1, 0x7, 0x5f, "10a5c0071fab26a6211e60093e8849174b2641591e103b368afd5da02631b1b3ea08527e1566858037eedb7a140d107b3573dd6c1ecade5da330f6ed535c447a8b8c6750cafa1c26557883e5374302d442362c50e71bf58a3747bea6f4a422"}, 0x68, 0x1)
truncate(&(0x7f0000000140)='./file0\x00', 0x2)
openat(r0, &(0x7f0000000180)='./file0\x00', 0x208200, 0x8)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1248
remove dir: /root/cephfs-client/dfs-0-646
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-647 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-647
receive_execute: 10, 18
receive_execute: 6, 17
receive_execute: 7, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 661, pid 3011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 661, flag collect 0
----- executor 3 signal number : 473
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 271, pid 3011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 3 signal number : 136
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 268, pid 3011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 268, flag collect 0
----- executor 3 signal number : 80
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 0, 4
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 28, 5, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4295, flag collect 0
----- executor 2 signal number : 1271
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12444, flag collect 0
receive_execute: 9, 18
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5084
----- executor 2 executes write_coverage_signal cov->size 348, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 247
----- executor 2 executes write_coverage_signal cov->size 7937, flag collect 0
----- executor 2 signal number : 592
executor 2 server cover_cnt 5 output_pos_value 7277
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 8, 0
before receive testcase: 0 0
time breakdown 1: 27, 7, 0
before receive testcase: 0 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 26
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 6 replies
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
time breakdown 2: 23, 9, 0
2023/03/29 03:48:03 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 473 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 80 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 5 replies
before receive testcase: 0 0
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 5084 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 247 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 592 signal and 0 cover from userspace component
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 20
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x8)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(0xffffffffffffffff, &(0x7f0000000300)='./file0\x00', 0x4a000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$getown(0xffffffffffffffff, 0x9)
r5 = openat(r2, &(0x7f0000000480)='./file0/file0\x00', 0x202080, 0x48)
r6 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x1, 0xbab0, r6})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r0, 0x26, &(0x7f0000000200)={0x0, 0x1, 0x9164, 0x100000001, r4})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x26, &(0x7f00000001c0)={0x0, 0x1, 0x400})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0)={0x0, <r7=>0x0})
fcntl$lock(r5, 0x24, &(0x7f0000000400)={0x0, 0x1, 0x404000010000000, 0xc9, r7})
r8 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r8, r3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3872
remove dir: /root/cephfs-client/dfs-0-647
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-648 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-648
receive_execute: 7, 16
receive_execute: 3, 17
receive_execute: 5, 16
receive_execute: 4, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 620, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 3014, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 3014, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 12
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3014, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 350, pid 3014, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 350, flag collect 0
----- executor 3 signal number : 28
----- completed 18
----- executor 3 write_call_output, size 316, pid 3014, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 10
----- completed 19
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 315, pid 3014, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 315, flag collect 0
----- executor 3 signal number : 1
----- completed 20
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
[ 1295.183809] ==================================================================
[ 1295.184463] BUG: KASAN: use-after-free in ceph_fl_release_lock+0x87/0x160
[ 1295.184949] Write of size 4 at addr ff110001107aa10c by task syz-executor/3014
[ 1295.185458] 
[ 1295.185575] CPU: 1 PID: 3014 Comm: syz-executor Tainted: G        W         5.15.0+ #9
[ 1295.186166] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[ 1295.186742] Call Trace:
[ 1295.186917]  dump_stack_lvl+0x34/0x44
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
[ 1295.187164]  print_address_description.constprop.0+0x21/0x140
[ 1295.187658]  ? ceph_fl_release_lock+0x87/0x160
[ 1295.188026]  ? ceph_fl_release_lock+0x87/0x160
[ 1295.188425]  kasan_report.cold+0x7f/0x11b
[ 1295.188793]  ? ceph_fl_release_lock+0x87/0x160
[ 1295.189195]  kasan_check_range+0x17c/0x1e0
[ 1295.189570]  ceph_fl_release_lock+0x87/0x160
[ 1295.189968]  locks_release_private+0x5a/0xb0
[ 1295.190351]  locks_dispose_list+0x31/0x50
[ 1295.190715]  posix_lock_inode+0x13e/0x7f0
[ 1295.191084]  locks_lock_inode_wait+0xb4/0x180
[ 1295.191538]  ? file_update_time+0x5d/0x120
[ 1295.191938]  ceph_lock+0x3a1/0x550
[ 1295.200168]  locks_remove_posix+0xc6/0x150
[ 1295.200561]  filp_close+0x4c/0x60
[ 1295.200870]  __x64_sys_close+0x9/0x40
[ 1295.201218]  do_syscall_64+0x38/0x90
[ 1295.201561]  entry_SYSCALL_64_after_hwframe+0x44/0xae
[ 1295.202029] RIP: 0033:0x7ffff732bd5b
[ 1295.202364] Code: 03 00 00 00 0f 05 48 3d 00 f0 ff ff 77 41 c3 48 83 ec 18 89 7c 24 0c e8 63 fc ff ff 8b 7c 24 0c 41 89 c0 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 2f 44 89 c7 89 44 24 0c e8 a1 fc ff ff 8b 44
[ 1295.204027] RSP: 002b:00007fffffffe220 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
[ 1295.204724] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ffff732bd5b
[ 1295.205350] RDX: 000001872b7ad81a RSI: 0000000000000000 RDI: 0000000000000003
[ 1295.205982] RBP: 00007fffffffe250 R08: 0000000000000000 R09: 0000000000257c92
[ 1295.206605] R10: 000000006423b4f3 R11: 0000000000000293 R12: 00007ffff732e270
[ 1295.207235] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
[ 1295.207870] 
[ 1295.208011] Allocated by task 3016:
[ 1295.208350] 
[ 1295.208493] Freed by task 3017:
[ 1295.208804] 
[ 1295.208945] The buggy address belongs to the object at ff110001107aa0f0
[ 1295.208945]  which belongs to the cache ceph_file_info of size 32
[ 1295.210030] The buggy address is located 28 bytes inside of
[ 1295.210030]  32-byte region [ff110001107aa0f0, ff110001107aa110)
[ 1295.211036] The buggy address belongs to the page:
[ 1295.211469] 
[ 1295.211608] Memory state around the buggy address:
[ 1295.212045]  ff110001107aa000: fb fb fb fb fc fc fb fb fb fb fc fc fb fb fb fb
[ 1295.212677]  ff110001107aa080: fc fc fb fb fb fb fc fc fa fb fb fb fc fc fa fb
[ 1295.213347] >ff110001107aa100: fb fb fc fc fb fb fb fb fc fc fb fb fb fb fc fc
[ 1295.214012]                       ^
[ 1295.214339]  ff110001107aa180: fb fb fb fb fc fc fb fb fb fb fc fc fb fb fb fb
[ 1295.214994]  ff110001107aa200: fc fc fb fb fb fb fc fc fa fb fb fb fc fc fb fb
[ 1295.215640] ==================================================================
executor 3, execute_one inner time: 113, 2, 36
execute_one time: 0, 152
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13985, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 23, 154, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1399
----- executor 2 executes write_coverage_signal cov->size 28578, flag collect 0
----- executor 2 signal number : 1069
----- executor 2 executes write_coverage_signal cov->size 1158, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 155, 0
before receive testcase: 0 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 8088
----- executor 2 executes write_coverage_signal cov->size 2535, flag collect 0
----- executor 2 signal number : 351
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 16770, flag collect 0
----- executor 2 signal number : 3862
----- executor 2 executes write_coverage_signal cov->size 26477, flag collect 0
time breakdown 1: 21, 156, 0
before receive testcase: 0 0
----- executor 2 signal number : 1563
executor 2 server cover_cnt 8 output_pos_value 16428
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 174
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 20 replies
2023/03/29 03:48:03 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 8 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1399 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1069 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 20, 158, 0
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 8088 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 351 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 3862 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1563 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 171 dup2 dup2
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 4
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
open(&(0x7f0000001140)='./file0\x00', 0xc0, 0x5)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x80, 0x4a)
dup2(r0, 0xffffffffffffffff)
rename(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 528
remove dir: /root/cephfs-client/dfs-0-648
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-649 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-649
receive_execute: 7, 9
receive_execute: 3, 9
receive_execute: 6, 9
receive_execute: 6, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 3019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 614, pid 3019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 614, flag collect 0
----- executor 3 signal number : 75
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 4, 0
execute_one time: 1, 9
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8807, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 11947, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 903
----- executor 2 executes write_coverage_signal cov->size 445, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 27778, flag collect 0
----- executor 2 signal number : 7402
time breakdown 0: 15, 13, 0
before receive testcase: 0 1
time breakdown 3: 16, 12, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 19575, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 4463
----- executor 2 executes write_coverage_signal cov->size 25173, flag collect 0
----- executor 2 signal number : 1300
executor 2 server cover_cnt 7 output_pos_value 15548
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 26
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 4 replies
2023/03/29 03:48:03 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 75 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 7 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 903 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 7402 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 4463 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1300 signal and 0 cover from userspace component
time breakdown 2: 12, 16, 0
before receive testcase: 0 0
time breakdown 1: 15, 14, 0
before receive testcase: 0 0
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 171 dup2 dup2
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 6
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x145241, 0x0)
writev(r0, &(0x7f0000000080)=[{&(0x7f0000000100)='@', 0x400000}], 0x1)
r1 = open(&(0x7f0000000000)='./file1\x00', 0x600402, 0x80)
write$binfmt_elf64(r0, &(0x7f0000000140)={{0x7f, 0x45, 0x4c, 0x46, 0x1f, 0x0, 0x3, 0x40, 0x9, 0x2, 0x21, 0x6, 0x322, 0x40, 0x254, 0x101, 0x4, 0x38, 0x1, 0x6, 0x4, 0x7}, [{0x7, 0x5, 0x2, 0x8000, 0x1, 0x3, 0x64, 0x2}], "efa534c5b3abb51fbb5c", ['\x00', '\x00', '\x00', '\x00', '\x00']}, 0x582)
dup2(r0, r1)
lremovexattr(&(0x7f0000000040)='./file1\x00', &(0x7f0000000700)=@random={'system.', '\x00'})
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3664
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-649
remove dir time 29
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-650 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-650
receive_execute: 8, 32
receive_execute: 4, 31
receive_execute: 5, 32
receive_execute: 6, 31
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 623, pid 3022, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 8756, pid 3022, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 8756, flag collect 0
----- executor 3 signal number : 985
----- completed 2
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3022, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1071, pid 3022, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1071, flag collect 0
----- executor 3 signal number : 31
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3022, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 3022, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 30, 12, 0
execute_one time: 0, 42
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 40, 44, 0
before receive testcase: 0 0
time breakdown 1: 37, 46, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1430
----- executor 2 executes write_coverage_signal cov->size 19181, flag collect 0
----- executor 2 signal number : 979
----- executor 2 executes write_coverage_signal cov->size 701, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 28489, flag collect 0
----- executor 2 signal number : 7873
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 24148, flag collect 0
----- executor 2 signal number : 5225
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1519
executor 2 server cover_cnt 7 output_pos_value 17119
time breakdown 2: 35, 49, 0
before receive testcase: 0 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 37, 46, 0
before receive testcase: 0 0
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 83
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 6 replies
2023/03/29 03:48:03 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 985 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 2 has 7 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1430 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 979 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 7873 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 5225 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1519 signal and 0 cover from userspace component
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 7
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000080)='./file0\x00', 0x9ffbe5a7178b4258, 0x0)
open$dir(&(0x7f0000000040)='./file0\x00', 0x2, 0x0)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x4ffc8fb5340efff0, 0x196)
fcntl$F_GET_RW_HINT(r1, 0x40b, &(0x7f00000000c0))
lsetxattr$trusted_overlay_upper(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140), &(0x7f0000000180)={0x0, 0xfb, 0x7a, 0x1, 0x7f, "47b94d2e60e5a6e6cca9be88d6120a71", "f288beeac9de08ef915175536adf12ac86f6312601afa7a6f79c05b765723158ccddb29e12ab1b53da53dc3c16085709518cbcae20138aa495e751a34bb6f2849fcc8142cd93b10a27e45f0d8f1c7cdae4f0a6fbe5d0b5c4ccc79642a68163acafb2d83642"}, 0x7a, 0x7)
r2 = fcntl$dupfd(r1, 0x406, r0)
renameat(r2, &(0x7f0000000200)='./file1\x00', r0, &(0x7f0000000240)='./file1\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1552
remove dir: /root/cephfs-client/dfs-0-650
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-651 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-651
receive_execute: 9, 8
receive_execute: 7, 8
receive_execute: 10, 8
receive_execute: 10, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 622, pid 3026, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 683, pid 3026, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 683, flag collect 0
----- executor 3 signal number : 232
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 3026, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 12
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3026, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3026, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3026, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3026, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 1, 6
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 5256, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 12520, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1082
----- executor 2 executes write_coverage_signal cov->size 384, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 28034, flag collect 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 11, 0
----- executor 2 signal number : 7114
----- executor 2 executes write_coverage_signal cov->size 18423, flag collect 0
----- executor 2 signal number : 1465
executor 2 server cover_cnt 5 output_pos_value 10335
before receive testcase: 0 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 15, 13, 0
before receive testcase: 0 0
time breakdown 3: 19, 8, 0
before receive testcase: 0 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 14, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 24
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 7 replies
2023/03/29 03:48:03 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 232 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 2 has 5 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1082 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 7114 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1465 signal and 0 cover from userspace component
time breakdown 1: 18, 15, 0
before receive testcase: 0 0
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 220 flock flock
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 171 dup2 dup2
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/29 03:48:03 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:03 prog length: 10
2023/03/29 03:48:03 HasCrashFail:false HasNetFail:false
03:48:03 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000080)='./file0\x00', 0x0, 0x95)
r1 = fcntl$dupfd(r0, 0x0, r0)
fcntl$lock(0xffffffffffffffff, 0x24, &(0x7f0000000040)={0x1, 0x4, 0x1000, 0x6, 0xffffffffffffffff})
fcntl$lock(r1, 0x6, &(0x7f0000000000)={0x2, 0x0, 0x0, 0x8})
flock(r0, 0x0)
fcntl$lock(r1, 0x26, &(0x7f0000000100)={0x0, 0x2, 0x6, 0x800})
r2 = dup2(r1, r1)
fcntl$dupfd(0xffffffffffffffff, 0x0, r2)
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x403, 0x1c0)
dup2(0xffffffffffffffff, r3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1792
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-651
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-652 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-652
receive_execute: 9, 18
receive_execute: 6, 18
receive_execute: 4, 18
receive_execute: 7, 18
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 3029, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3029, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3029, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3029, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3029, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3029, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3029, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3029, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3029, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3029, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1956, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 4166, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2161
executor 2 server cover_cnt 3 output_pos_value 3246
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 6, 0
before receive testcase: 0 0
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:03 for select break: 1
2023/03/29 03:48:03 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:48:03 wg wait finish
2023/03/29 03:48:03 ------ all executors finish execution
2023/03/29 03:48:03 exec time: 25
2023/03/29 03:48:03 ----- PS len: 4
2023/03/29 03:48:03 [CLIENT] executor 3 has 10 replies
time breakdown 2: 24, 7, 0
2023/03/29 03:48:03 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 2 has 3 replies
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
time breakdown 0: 25, 7, 0
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/29 03:48:03 ------- fuzzer executor 2 receive 2161 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:48:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:03 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:03 ----- no new client coverage: false, true
time breakdown 3: 27, 5, 0
before receive testcase: 0 0
2023/03/29 03:48:03 mutate testcase with failures
2023/03/29 03:48:03 ----- insertCall()
2023/03/29 03:48:03 ----- generateCall 2458 open open
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:03 ----- mutateArg()
2023/03/29 03:48:04 ----- insertCall()
2023/03/29 03:48:04 ----- generateCall 120 chdir chdir
2023/03/29 03:48:04 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:04 prog length: 17
2023/03/29 03:48:04 HasCrashFail:false HasNetFail:false
03:48:04 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(0x0, &(0x7f0000000240), 0x0, 0x0, 0x4)
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
open(0x0, 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file3\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
lsetxattr$security_selinux(&(0x7f0000000040)='./file2\x00', &(0x7f0000000080), &(0x7f00000000c0)='system_u:object_r:agp_device_t:s0\x00', 0x22, 0x2)
link(0x0, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x4)
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
mkdir(&(0x7f0000000300)='./file0\x00', 0x102)
chdir(&(0x7f00000003c0)='./file0\x00')
r0 = open$dir(&(0x7f0000000680)='./file3\x00', 0x0, 0x100)
fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
fstat(r0, &(0x7f0000000340))
stat(&(0x7f00000004c0)='./file1\x00', &(0x7f0000000500))
open(&(0x7f0000000280)='./file1\x00', 0xa0180, 0x70)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2288
remove dir: /root/cephfs-client/dfs-0-652
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 2
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-653 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-653
receive_execute: 4, 4
receive_execute: 2, 4
receive_execute: 2, 3
receive_execute: 2, 3
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 0, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 607, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 607, flag collect 0
----- executor 3 signal number : 79
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 118, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 419, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 419, flag collect 0
----- executor 3 signal number : 108
----- completed 13
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3032, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 21, 9, 0
execute_one time: 0, 30
executor 2 write_server_output
time breakdown 3: 8, 31, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 18968, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 25715, flag collect 0
----- executor 2 signal number : 965
----- executor 2 executes write_coverage_signal cov->size 990, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:48:04 for select break: 1
2023/03/29 03:48:04 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 7731
----- executor 2 executes write_coverage_signal cov->size 16226, flag collect 0
time breakdown 0: 5, 35, 0
----- executor 2 signal number : 687
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 5385
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1443
executor 2 server cover_cnt 8 output_pos_value 17703
time breakdown 1: 6, 33, 0
before receive testcase: 0 1
2023/03/29 03:48:04 for select break: 1
2023/03/29 03:48:04 --------- executor 1 receive reply, reply.done 1
2023/03/29 03:48:04 for select break: 1
2023/03/29 03:48:04 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:48:04 for select break: 1
2023/03/29 03:48:04 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:04 wg wait finish
2023/03/29 03:48:04 ------ all executors finish execution
2023/03/29 03:48:04 exec time: 41
2023/03/29 03:48:04 ----- PS len: 4
2023/03/29 03:48:04 [CLIENT] executor 3 has 17 replies
2023/03/29 03:48:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 79 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:04 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:04 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:04 [SERVER] executor 2 has 8 replies
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 965 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 7731 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 687 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 5385 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 1443 signal and 0 cover from userspace component
time breakdown 2: 6, 37, 0
before receive testcase: 0 1
2023/03/29 03:48:04 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:04 ----- no new client coverage: false, true
2023/03/29 03:48:04 mutate testcase with failures
2023/03/29 03:48:04 ----- insertCall()
2023/03/29 03:48:04 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/29 03:48:04 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:04 prog length: 3
2023/03/29 03:48:04 HasCrashFail:false HasNetFail:false
03:48:04 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f0000000240)=@v2={0x3, 0x1, 0xe, 0x2, 0xa7, "04816fea77ec1fe837b1005cd65057658ffa95c1ed575b1f4f3b521a06c34d5bb871298e43a7b6818cdd9ba238be94cb6464e9e18ad8b94d38fc0265142d6ba799c0ed752bf147f0c2b8e43ba6640cab21c6d8592f50ec9c3c33292586fe1edee7e3922b1a61147642e72e50be26e432cbb5e15da9c3b9fe34e9a923b114f5eeb2aa83e1a64844af471ef816a7b4ba602b877e3353f93710e897164afa1ef3351a6da62e887c51"}, 0xb0, 0x0)
lgetxattr(&(0x7f0000000100)='./file0\x00', &(0x7f00000001c0)=@known='security.selinux\x00', &(0x7f0000000200)=""/9, 0x9)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 968
remove dir: /root/cephfs-client/dfs-0-653
remove dir time 20
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-654 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-654
receive_execute: 5, 21
receive_execute: 11, 21
receive_execute: 10, 21
receive_execute: 8, 21
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 3036, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 296, pid 3036, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 296, flag collect 0
----- executor 3 signal number : 163
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 181, pid 3036, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 181, flag collect 0
----- executor 3 signal number : 19
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/29 03:48:04 for select break: 1
2023/03/29 03:48:04 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4173, flag collect 0
----- executor 2 signal number : 1264
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11335, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4698
----- executor 2 executes write_coverage_signal cov->size 1802, flag collect 0
----- executor 2 signal number : 325
----- executor 2 executes write_coverage_signal cov->size 7473, flag collect 0
2023/03/29 03:48:04 for select break: 1
2023/03/29 03:48:04 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 547
2023/03/29 03:48:04 for select break: 1
2023/03/29 03:48:04 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 6, 0
executor 2 server cover_cnt 5 output_pos_value 6917
2023/03/29 03:48:04 for select break: 1
2023/03/29 03:48:04 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:04 wg wait finish
2023/03/29 03:48:04 ------ all executors finish execution
2023/03/29 03:48:04 exec time: 29
2023/03/29 03:48:04 ----- PS len: 4
2023/03/29 03:48:04 [CLIENT] executor 3 has 3 replies
2023/03/29 03:48:04 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:04 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:04 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 163 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 19 signal and 0 cover from executor 3
time breakdown 2: 26, 8, 0
2023/03/29 03:48:04 [SERVER] executor 2 has 5 replies
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 4698 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 325 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 547 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 1: 31, 6, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/29 03:48:04 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:04 ----- no new client coverage: false, true
2023/03/29 03:48:04 mutate testcase with failures
2023/03/29 03:48:04 ----- insertCall()
2023/03/29 03:48:04 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/29 03:48:04 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:04 prog length: 3
2023/03/29 03:48:04 HasCrashFail:false HasNetFail:false
03:48:04 ---executing program 0:
---
---
---
lsetxattr$security_smack_transmute(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x2)
sync()
sync()
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 32, 5, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 344
remove dir: /root/cephfs-client/dfs-0-654
remove dir time 16
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-655 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-655
receive_execute: 6, 19
receive_execute: 2, 20
receive_execute: 4, 19
receive_execute: 3, 20
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 1, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3039, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 555, pid 3039, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 555, flag collect 0
----- executor 3 signal number : 243
----- completed 2
----- executor 3 write_call_output, size 346, pid 3039, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 346, flag collect 0
----- executor 3 signal number : 151
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 59, 1, 0
execute_one time: 1, 60
2023/03/29 03:48:04 for select break: 1
2023/03/29 03:48:04 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 25, 63, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8840, flag collect 0
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 5831, flag collect 0
----- executor 2 signal number : 715
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 7453, flag collect 0
----- executor 2 signal number : 2026
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 10800, flag collect 0
2023/03/29 03:48:04 for select break: 1
2023/03/29 03:48:04 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:48:04 for select break: 1
2023/03/29 03:48:04 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 23, 64, 0
before receive testcase: 0 0
----- executor 2 signal number : 2904
----- executor 2 executes write_coverage_signal cov->size 21444, flag collect 0
----- executor 2 signal number : 1748
executor 2 server cover_cnt 8 output_pos_value 8884
2023/03/29 03:48:04 for select break: 1
2023/03/29 03:48:04 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:04 wg wait finish
2023/03/29 03:48:04 ------ all executors finish execution
2023/03/29 03:48:04 exec time: 86
2023/03/29 03:48:04 ----- PS len: 4
time breakdown 2: 22, 66, 0
2023/03/29 03:48:04 [CLIENT] executor 3 has 3 replies
2023/03/29 03:48:04 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:48:04 fuzzer receive 243 signal and 0 cover from executor 3
2023/03/29 03:48:04 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:04 [SERVER] executor 2 has 8 replies
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/29 03:48:04 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:04 fuzzer receive 151 signal and 0 cover from executor 3
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 715 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 2026 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 2904 signal and 0 cover from userspace component
2023/03/29 03:48:04 ------- fuzzer executor 2 receive 1748 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:48:04 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:04 ----- no new client coverage: false, true
2023/03/29 03:48:04 mutate testcase with failures
2023/03/29 03:48:04 ----- insertCall()
2023/03/29 03:48:04 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/29 03:48:04 ----- insertCall()
2023/03/29 03:48:04 ----- generateCall 2344 linkat linkat
2023/03/29 03:48:04 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:04 prog length: 16
2023/03/29 03:48:04 HasCrashFail:false HasNetFail:false
03:48:04 ---executing program 0:
---
---
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
linkat(r0, &(0x7f0000000400)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000580)='./file1\x00', 0x400)
sync()
chmod(&(0x7f00000001c0)='./file0\x00', 0x180)
open$dir(&(0x7f0000000700)='./file0\x00', 0x121640, 0x0)
lchown(&(0x7f0000000440)='./file0\x00', 0xee01, 0xee01)
open$dir(&(0x7f0000000200)='./file0\x00', 0x200a00, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
lsetxattr$security_selinux(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f0000000240)='system_u:object_r:var_log_t:s0\x00', 0x1f, 0x0)
setxattr$trusted_overlay_origin(&(0x7f0000000340)='./file1\x00', &(0x7f0000000380), &(0x7f00000003c0), 0x2, 0x0)
r1 = open(&(0x7f0000000480)='./file0\x00', 0x2, 0x40)
stat(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
chown(&(0x7f0000000000)='./file0\x00', r2, 0xffffffffffffffff)
sync()
lsetxattr$security_smack_transmute(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300), 0x4, 0x2)
write(r1, &(0x7f00000004c0)="81bd7077a66e1e220a9aba9492e9302592bda6606db4840db590b40df633365d4ad5c176047e62c4b4605fb807db8d3c30c0139893011dc65e5b841f36e3bba3d4fff9b554e0e85b4b9be61bf21732eddeb1d4529615425ba5eba0f12a0c61c2cc05100b65dda9005b5973788b0caccb50706fdb09b819d159cca5229135fc984e8c6c83d6f05265a8104a72baf075090e1c8cd6d466892afcede34e1ab4b0318ad22b960cd8ee9f033dafe4e3430093f73c1a495381cd253cf7f5d82c161759", 0xc0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2688
remove dir: /root/cephfs-client/dfs-0-655
time breakdown 1: 23, 64, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-656 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-656
receive_execute: 3, 4
receive_execute: 6, 5
receive_execute: 5, 4
receive_execute: 5, 4
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
executor 3 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3042, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3042, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 659, pid 3042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 472
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 3042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 149
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 498, pid 3042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 498, flag collect 0
----- executor 3 signal number : 90
----- completed 7
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 457, pid 3042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 457, flag collect 0
----- executor 3 signal number : 52
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 395, pid 3042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 3 signal number : 89
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 3042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 504, pid 3042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 504, flag collect 0
----- executor 3 signal number : 16
----- completed 12
----- executor 3 write_call_output, size 365, pid 3042, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 365, flag collect 0
----- executor 3 signal number : 189
----- completed 13
execute_one loop: 0, 1, 4
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 211, pid 3042, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 211, flag collect 0
----- executor 3 signal number : 38
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 392, pid 3042, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 392, flag collect 0
----- executor 3 signal number : 215
----- completed 15
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 171, pid 3042, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 171, flag collect 0
----- executor 3 signal number : 11
----- completed 16
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3948, 10, 0
execute_one time: 0, 3958
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1429
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1029
----- executor 2 executes write_coverage_signal cov->size 4000, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 660
----- executor 2 executes write_coverage_signal cov->size 4125, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 9, 3964, 0
before receive testcase: 0 1
----- executor 2 signal number : 8281
----- executor 2 executes write_coverage_signal cov->size 2854, flag collect 0
----- executor 2 signal number : 358
----- executor 2 executes write_coverage_signal cov->size 20977, flag collect 0
----- executor 2 signal number : 2383
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 405
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 2971, flag collect 0
----- executor 2 signal number : 346
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 2486
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
time breakdown 0: 9, 3968, 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2392
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5120
----- executor 2 executes write_coverage_signal cov->size 325, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1766
executor 2 server cover_cnt 17 output_pos_value 26978
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:08 wg wait finish
2023/03/29 03:48:08 ------ all executors finish execution
2023/03/29 03:48:08 exec time: 3976
2023/03/29 03:48:08 ----- PS len: 4
2023/03/29 03:48:08 [CLIENT] executor 3 has 16 replies
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 472 signal and 0 cover from executor 3
2023/03/29 03:48:08 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:08 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:08 fuzzer receive 149 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 [SERVER] executor 2 has 17 replies
time breakdown 2: 7, 3972, 0
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1429 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1029 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 660 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 8281 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 358 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 2383 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 405 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 346 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 2486 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 2392 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 5120 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1766 signal and 0 cover from userspace component
2023/03/29 03:48:08 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 189 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 38 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 215 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 11 signal and 0 cover from executor 3
time breakdown 3: 11, 3962, 0
before receive testcase: 0 0
2023/03/29 03:48:08 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:08 ----- no new client coverage: false, true
2023/03/29 03:48:08 mutate testcase with failures
2023/03/29 03:48:08 ----- insertCall()
2023/03/29 03:48:08 ----- generateCall 244 fsetxattr$user fsetxattr$user
2023/03/29 03:48:08 ----- mutateArg()
2023/03/29 03:48:08 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:08 prog length: 4
2023/03/29 03:48:08 HasCrashFail:false HasNetFail:false
03:48:08 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x141ac1, 0x0)
fsetxattr$user(r0, &(0x7f0000000080), &(0x7f0000000100)='\':\x00', 0x3, 0x2)
link(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
write$binfmt_misc(r0, &(0x7f0000000140)={'syz0'}, 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 736
remove dir: /root/cephfs-client/dfs-0-656
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-657 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-657
receive_execute: 13, 7
receive_execute: 5, 7
receive_execute: 13, 7
receive_execute: 8, 7
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 2
----- executor 3 write_call_output, size 623, pid 3047, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 3047, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 105
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 571, pid 3047, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 571, flag collect 0
----- executor 3 signal number : 93
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 1287, pid 3047, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1287, flag collect 0
----- executor 3 signal number : 931
----- completed 4
execute_one loop: 0, 0, 25
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 32, 0, 0
execute_one time: 1, 32
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 34, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 11794, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 12422, flag collect 0
----- executor 2 signal number : 1002
----- executor 2 executes write_coverage_signal cov->size 413, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 25403, flag collect 0
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 35, 0
----- executor 2 signal number : 6824
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 14501, flag collect 0
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 36, 0
before receive testcase: 0 0
----- executor 2 signal number : 3524
----- executor 2 executes write_coverage_signal cov->size 28648, flag collect 0
----- executor 2 signal number : 1922
executor 2 server cover_cnt 7 output_pos_value 14756
before receive testcase: 0 0
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:08 wg wait finish
2023/03/29 03:48:08 ------ all executors finish execution
2023/03/29 03:48:08 exec time: 46
2023/03/29 03:48:08 ----- PS len: 4
2023/03/29 03:48:08 [CLIENT] executor 3 has 4 replies
2023/03/29 03:48:08 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/29 03:48:08 [SERVER] executor 2 has 7 replies
2023/03/29 03:48:08 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:08 [SERVER] executor 1 has 0 replies
time breakdown 2: 12, 39, 0
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1002 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 6824 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 3524 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1922 signal and 0 cover from userspace component
2023/03/29 03:48:08 fuzzer receive 931 signal and 0 cover from executor 3
2023/03/29 03:48:08 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:08 ----- no new client coverage: false, true
2023/03/29 03:48:08 mutate testcase with failures
2023/03/29 03:48:08 ----- insertCall()
2023/03/29 03:48:08 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/29 03:48:08 ----- mutateArg()
2023/03/29 03:48:08 ----- insertCall()
2023/03/29 03:48:08 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/29 03:48:08 ----- insertCall()
2023/03/29 03:48:08 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/29 03:48:08 ----- insertCall()
2023/03/29 03:48:08 ----- generateCall 220 flock flock
2023/03/29 03:48:08 ----- insertCall()
2023/03/29 03:48:08 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/29 03:48:08 ----- insertCall()
2023/03/29 03:48:08 ----- generateCall 121 chmod chmod
2023/03/29 03:48:08 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:08 prog length: 18
2023/03/29 03:48:08 HasCrashFail:false HasNetFail:false
03:48:08 ---executing program 0:
---
---
---
chmod(&(0x7f00000003c0)='./file0/../file0\x00', 0x20)
r0 = open(&(0x7f0000000100)='./file0\x00', 0x1a2c0, 0x0)
lremovexattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@known='trusted.overlay.nlink\x00')
lgetxattr(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000540)=@random={'os2.', '\x00'}, &(0x7f0000000580)=""/59, 0x3b)
setxattr$incfs_metadata(&(0x7f0000000740)='./file0\x00', &(0x7f0000000780), &(0x7f00000007c0)="e28864ea5f099fb24d826a27cdee3d814f22ae8d7e0ef9391f48115e8496681b3f28f925b42f92f0a1996f591047b43add96b2e69a4f9fbca337d8b839d165afdac759a8ba41bbb613614879e944ad5d6f083f43f8002d1b092eb3bfd5b2bcffd29acc71c188ae0a47c5b8a24685c4d439bba03a63dfd4b796f30eac854da9c91d254e2527c21bd64736ebb2579bdd3f301acd6b45a161b70a2c91c5f13e9b865f93fe641aaa1a8c20cda19dbeb222d0f91bba1af37da40b5cda699e606f86574717f8313275d81622395f94d6d7ee4b461492619d9b35325bffbddb775d26061a50e07ed7fcd9", 0xe7, 0x0)
r1 = open(&(0x7f0000001940)='./file0\x00', 0x240000, 0x100)
stat(&(0x7f0000000500)='./file0\x00', &(0x7f0000000680))
faccessat(r1, &(0x7f00000005c0)='./file0\x00', 0xc0)
listxattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000140)=""/70, 0xfffffffffffffcd8)
listxattr(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r2 = open(&(0x7f0000000380)='./file0\x00', 0x2, 0x81)
fcntl$dupfd(r0, 0x406, r2)
setxattr$trusted_overlay_nlink(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000700)={'L+', 0x800}, 0x16, 0x1)
setxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000200)=@random={'system.', '\x00'}, &(0x7f0000000240)='trusted.overlay.nlink\x00', 0x16, 0x2)
flock(0xffffffffffffffff, 0xd)
r3 = dup2(r0, 0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r3, &(0x7f0000000600), &(0x7f0000000640)='./file0\x00', 0x8, 0x2)
setxattr$trusted_overlay_upper(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f00000008c0)=ANY=[@ANYBLOB="00fb050408250ba2f13fc435cef6c495bc52be1f0ddf2032dbedb4d941a5ffd50c7e41406bec126a7cb5174f5ff613c678ae3d8bc422c54ebcca7f6129ecb6525410d63e9f81818266d082aab11b828e3d573dd14f28fccc79315d7f0e2c77aa55c30d35dd437d0600000000000000b809fdb596ff9beae1df49cbbbd95563ee2998198571b960b069cd3f3ec09c13b7800fddf918b4472ae7fbeacf171bfafb1589cb5e5c25420b30c9c1868ea2a70e901222cbb52f44765b416a4eec79657aefa630e5c935dab25a226f72faebd206757e796ac2ddbc10be0397852d938fd2975749d11c644fb93c20b0acca1d9d6b9d1b91387112b62af55e638a51308a4cbdd7eba1ee6068513b76f14dc84a66a3e2eee5d651acfc9eb9cdc7323d3b6ecbc25fef9ad0c4133de151ae8888a7484ca3ac419cb4b29697937588fe6fc54ea0d46fd0b11d5aef766b30b82ef399584911506bc6c0d7967ba0327a68441d8cc815424e5c"], 0x105, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3856
remove dir: /root/cephfs-client/dfs-0-657
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-658 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-658
receive_execute: 10, 12
receive_execute: 5, 12
receive_execute: 7, 13
receive_execute: 9, 12
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 85, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
----- executor 3 signal number : 47
execute_one time: 0, 1
----- completed 1
execute_one loop: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 659, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 494
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 483, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 483, flag collect 0
----- executor 3 signal number : 164
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 415, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 472, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 472, flag collect 0
----- executor 3 signal number : 31
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 19
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 467, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 467, flag collect 0
----- executor 3 signal number : 52
----- completed 9
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 414, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 414, flag collect 0
----- executor 3 signal number : 3
----- completed 10
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 393, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 3 signal number : 97
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 1
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 463, pid 3050, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 3 signal number : 10
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 3, 0
execute_one time: 1, 17
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10737, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1408
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1145
----- executor 2 executes write_coverage_signal cov->size 1353, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 21, 0
before receive testcase: 0 0
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 22, 0
before receive testcase: 0 0
----- executor 2 signal number : 6111
----- executor 2 executes write_coverage_signal cov->size 3025, flag collect 0
----- executor 2 signal number : 373
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 11284, flag collect 0
time breakdown 3: 22, 20, 0
before receive testcase: 0 1
----- executor 2 signal number : 2322
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1865
executor 2 server cover_cnt 8 output_pos_value 13319
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:08 wg wait finish
2023/03/29 03:48:08 ------ all executors finish execution
2023/03/29 03:48:08 exec time: 36
2023/03/29 03:48:08 ----- PS len: 4
2023/03/29 03:48:08 [CLIENT] executor 3 has 18 replies
2023/03/29 03:48:08 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 494 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 164 signal and 0 cover from executor 3
2023/03/29 03:48:08 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:08 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:08 [SERVER] executor 2 has 8 replies
2023/03/29 03:48:08 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1408 signal and 0 cover from userspace component
2023/03/29 03:48:08 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1145 signal and 0 cover from userspace component
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/29 03:48:08 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 6111 signal and 0 cover from userspace component
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 373 signal and 0 cover from userspace component
2023/03/29 03:48:08 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 2322 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1865 signal and 0 cover from userspace component
time breakdown 2: 17, 24, 0
before receive testcase: 0 0
2023/03/29 03:48:08 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:08 ----- no new client coverage: false, true
2023/03/29 03:48:08 mutate testcase with failures
2023/03/29 03:48:08 ----- insertCall()
2023/03/29 03:48:08 ----- generateCall 2344 linkat linkat
2023/03/29 03:48:08 ----- insertCall()
2023/03/29 03:48:08 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/29 03:48:08 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:08 prog length: 11
2023/03/29 03:48:08 HasCrashFail:false HasNetFail:false
03:48:08 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
stat(&(0x7f0000000240)='./file1\x00', &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
setxattr$system_posix_acl(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000200)='system.posix_acl_access\x00', &(0x7f0000000300)={{}, {0x1, 0x3}, [{0x2, 0x0, 0xee01}, {0x2, 0x2, r1}, {0x2, 0x6, 0xee00}], {0x4, 0x4}, [], {0x10, 0x4}, {0x20, 0x3}}, 0x3c, 0x1)
symlinkat(&(0x7f0000000000)='./file0\x00', r0, &(0x7f0000000040)='./file0\x00')
r2 = dup(r0)
linkat(r0, &(0x7f0000000540)='./file0\x00', r0, &(0x7f0000000580)='./file1\x00', 0x0)
fsync(r2)
r3 = fcntl$dupfd(r0, 0x0, r0)
r4 = open$dir(&(0x7f0000000100)='./file0\x00', 0x48000, 0x4)
linkat(r3, &(0x7f00000000c0)='./file1\x00', r4, &(0x7f0000000180)='./file0\x00', 0x1000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2736
remove dir: /root/cephfs-client/dfs-0-658
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-659 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-659
receive_execute: 7, 18
receive_execute: 6, 17
receive_execute: 3, 18
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 5, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 511, pid 3053, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 3053, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3053, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3053, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 3053, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3053, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 540, pid 3053, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 540, flag collect 0
----- executor 3 signal number : 38
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 346, pid 3053, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 346, flag collect 0
----- executor 3 signal number : 170
----- completed 8
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3053, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 3053, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 232, pid 3053, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 232, flag collect 0
----- executor 3 signal number : 1
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 13, 1, 0
execute_one time: 0, 14
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 25, 15, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10111, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 14120, flag collect 0
----- executor 2 signal number : 943
----- executor 2 executes write_coverage_signal cov->size 410, flag collect 0
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 23, 16, 0
2023/03/29 03:48:08 for select break: 1
time breakdown 1: 23, 17, 0
2023/03/29 03:48:08 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32197, flag collect 0
----- executor 2 signal number : 6937
----- executor 2 executes write_coverage_signal cov->size 717, flag collect 0
----- executor 2 signal number : 280
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 15923, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 3271
----- executor 2 executes write_coverage_signal cov->size 29136, flag collect 0
----- executor 2 signal number : 1878
executor 2 server cover_cnt 8 output_pos_value 14794
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:08 wg wait finish
2023/03/29 03:48:08 ------ all executors finish execution
2023/03/29 03:48:08 exec time: 38
2023/03/29 03:48:08 ----- PS len: 4
time breakdown 2: 21, 20, 0
2023/03/29 03:48:08 [CLIENT] executor 3 has 11 replies
2023/03/29 03:48:08 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/29 03:48:08 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:08 [SERVER] executor 2 has 8 replies
2023/03/29 03:48:08 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/29 03:48:08 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 03:48:08 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 943 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 6937 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 280 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 03:48:08 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 3271 signal and 0 cover from userspace component
2023/03/29 03:48:08 fuzzer receive 38 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 170 signal and 0 cover from executor 3
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1878 signal and 0 cover from userspace component
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 03:48:08 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:08 ----- no new client coverage: false, true
2023/03/29 03:48:08 mutate testcase with failures
2023/03/29 03:48:08 ----- insertCall()
2023/03/29 03:48:08 ----- generateCall 2341 lchown lchown
2023/03/29 03:48:08 ----- mutateArg()
2023/03/29 03:48:08 ----- insertCall()
2023/03/29 03:48:08 ----- generateCall 3970 unlink unlink
2023/03/29 03:48:08 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:08 prog length: 11
2023/03/29 03:48:08 HasCrashFail:false HasNetFail:false
03:48:08 ---executing program 0:
---
---
---
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
stat(&(0x7f0000000080)='./file0\x00', &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, <r0=>0x0, <r1=>0x0})
lchown(&(0x7f0000000040)='./file0\x00', r0, 0xffffffffffffffff)
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file3\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
unlink(&(0x7f0000000000)='./file0\x00')
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file3\x00', &(0x7f00000001c0), 0x0, 0x0, 0x0)
unlink(&(0x7f0000000240)='./file2\x00')
chown(&(0x7f0000000340)='./file3\x00', r0, r1)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1648
remove dir: /root/cephfs-client/dfs-0-659
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-660 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-660
receive_execute: 3, 28
receive_execute: 8, 29
receive_execute: 6, 29
receive_execute: 7, 28
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 3056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 637, pid 3056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 637, flag collect 0
----- executor 3 signal number : 150
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 856, pid 3056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 3 signal number : 144
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 607, pid 3056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 607, flag collect 0
----- executor 3 signal number : 31
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 438, pid 3056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 438, flag collect 0
----- executor 3 signal number : 24
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 611, pid 3056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 611, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 749, pid 3056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 749, flag collect 0
----- executor 3 signal number : 126
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 405, pid 3056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 405, flag collect 0
----- executor 3 signal number : 22
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 680, pid 3056, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 680, flag collect 0
----- executor 3 signal number : 187
----- completed 11
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 22, 12, 0
execute_one time: 0, 34
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 37, 36, 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 29029, flag collect 0
executor 0 write_server_output
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1402
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 35, 38, 0
before receive testcase: 0 1
----- executor 2 signal number : 1157
----- executor 2 executes write_coverage_signal cov->size 2196, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 0 receive reply, reply.done 1
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 35, 38, 0
before receive testcase: 0 0
----- executor 2 signal number : 7645
----- executor 2 executes write_coverage_signal cov->size 418, flag collect 0
----- executor 2 signal number : 97
----- executor 2 executes write_coverage_signal cov->size 8690, flag collect 0
----- executor 2 signal number : 500
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6342
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 926
executor 2 server cover_cnt 9 output_pos_value 18170
2023/03/29 03:48:08 for select break: 1
2023/03/29 03:48:08 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:08 wg wait finish
2023/03/29 03:48:08 ------ all executors finish execution
2023/03/29 03:48:08 exec time: 70
2023/03/29 03:48:08 ----- PS len: 4
2023/03/29 03:48:08 [CLIENT] executor 3 has 11 replies
time breakdown 2: 31, 42, 0
2023/03/29 03:48:08 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:48:08 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:08 [SERVER] executor 2 has 9 replies
before receive testcase: 0 0
2023/03/29 03:48:08 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:08 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 150 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 144 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 126 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/29 03:48:08 fuzzer receive 187 signal and 0 cover from executor 3
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1402 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 1157 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 7645 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 97 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 500 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 6342 signal and 0 cover from userspace component
2023/03/29 03:48:08 ------- fuzzer executor 2 receive 926 signal and 0 cover from userspace component
2023/03/29 03:48:08 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:08 ----- no new client coverage: false, true
2023/03/29 03:48:08 mutate testcase with failures
2023/03/29 03:48:08 ----- insertCall()
2023/03/29 03:48:08 ----- generateCall 2459 open$dir open$dir
2023/03/29 03:48:08 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:08 prog length: 5
2023/03/29 03:48:08 HasCrashFail:false HasNetFail:false
03:48:08 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000100)='./file0\x00', 0x0)
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f0000000180), 0x0, 0x0, 0x0)
sync()
chmod(&(0x7f0000000080)='./file0\x00', 0x0)
open$dir(&(0x7f0000000000)='./file0\x00', 0x12900, 0x94bda4dc59423274)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 648
remove dir: /root/cephfs-client/dfs-0-660
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-661 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-661
receive_execute: 6, 13
receive_execute: 8, 13
receive_execute: 3, 13
receive_execute: 7, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 3060, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 323, pid 3060, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 3 signal number : 169
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 706, pid 3060, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 3 signal number : 327
----- completed 3
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 187, pid 3060, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 187, flag collect 0
----- executor 3 signal number : 48
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 3060, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 47
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 51, 0
execute_one time: 1, 62
2023/03/29 03:48:13 for select break: 1
2023/03/29 03:48:13 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 21, 4756, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 19, 4757, 0
before receive testcase: 0 1
2023/03/29 03:48:13 for select break: 1
2023/03/29 03:48:13 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1537
----- executor 2 executes write_coverage_signal cov->size 11004, flag collect 0
----- executor 2 signal number : 910
----- executor 2 executes write_coverage_signal cov->size 2752, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 540
----- executor 2 executes write_coverage_signal cov->size 7458, flag collect 0
----- executor 2 signal number : 71
----- executor 2 executes write_coverage_signal cov->size 20474, flag collect 0
2023/03/29 03:48:13 for select break: 1
2023/03/29 03:48:13 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 6015
----- executor 2 executes write_coverage_signal cov->size 2980, flag collect 0
----- executor 2 signal number : 277
----- executor 2 executes write_coverage_signal cov->size 14493, flag collect 0
----- executor 2 signal number : 2642
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 414
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 1233, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2432
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 20, 4758, 0
before receive testcase: 0 0
----- executor 2 signal number : 2230
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4071
----- executor 2 executes write_coverage_signal cov->size 51, flag collect 0
----- executor 2 signal number : 11
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1616
executor 2 server cover_cnt 16 output_pos_value 23255
2023/03/29 03:48:13 for select break: 1
2023/03/29 03:48:13 --------- executor 2 receive reply, reply.done 1
2023/03/29 03:48:13 wg wait finish
2023/03/29 03:48:13 ------ all executors finish execution
2023/03/29 03:48:13 exec time: 4778
2023/03/29 03:48:13 ----- PS len: 4
2023/03/29 03:48:13 [CLIENT] executor 3 has 5 replies
2023/03/29 03:48:13 [SERVER] executor 0 has 0 replies
2023/03/29 03:48:13 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 03:48:13 [SERVER] executor 1 has 0 replies
2023/03/29 03:48:13 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/29 03:48:13 [SERVER] executor 2 has 16 replies
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 1537 signal and 0 cover from userspace component
time breakdown 2: 16, 4765, 0
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 910 signal and 0 cover from userspace component
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 540 signal and 0 cover from userspace component
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 71 signal and 0 cover from userspace component
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 6015 signal and 0 cover from userspace component
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 277 signal and 0 cover from userspace component
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 2642 signal and 0 cover from userspace component
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 414 signal and 0 cover from userspace component
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/29 03:48:13 fuzzer receive 327 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 2432 signal and 0 cover from userspace component
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 2230 signal and 0 cover from userspace component
2023/03/29 03:48:13 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/29 03:48:13 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 4071 signal and 0 cover from userspace component
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/03/29 03:48:13 ------- fuzzer executor 2 receive 1616 signal and 0 cover from userspace component
2023/03/29 03:48:13 fsMds: [map[] map[] map[] map[]]
2023/03/29 03:48:13 ----- no new client coverage: false, true
2023/03/29 03:48:13 mutate testcase with failures
2023/03/29 03:48:13 ----- insertCall()
2023/03/29 03:48:13 ----- generateCall 2462 openat openat
2023/03/29 03:48:13 ----- mutateArg()
2023/03/29 03:48:13 ----- insertCall()
2023/03/29 03:48:13 ----- generateCall 171 dup2 dup2
2023/03/29 03:48:13 ----- insertCall()
2023/03/29 03:48:13 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/29 03:48:13 HasCrashFail: false, .HasNetFail: false
2023/03/29 03:48:13 prog length: 6
2023/03/29 03:48:13 HasCrashFail:false HasNetFail:false
03:48:13 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0xd11382, 0x0)
dup2(r0, r0)
r1 = fcntl$dupfd(r0, 0x406, r0)
fcntl$setpipe(r1, 0x407, 0x10000)
openat(r0, &(0x7f0000000000)='./file0\x00', 0x301000, 0xa0)
open(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
--
VM DIAGNOSIS:
03:48:03  Registers:
info registers vcpu 0
RAX=0000000000000001 RBX=0000000000000000 RCX=0000000000000000 RDX=00007ffff71c3000
RSI=00007fffffffbe50 RDI=0000000000000001 RBP=00007fffffffe4d0 RSP=00007fffffffe4b0
R8 =0000000000000017 R9 =0000000000000017 R10=00000000ffffffff R11=0000000000000000
R12=00007ffff732e270 R13=0000000000000000 R14=0000000000000000 R15=0000000000000000
RIP=00007ffff73032dc RFL=00000202 [-------] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff980 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7fffc88 CR3=000000010c204006 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000000000000000ff00 XMM01=25252525252525252525252525252525
XMM02=20726f747563657865202c6e69676562 XMM03=00000000000000000000000000000000
XMM04=0000000000000000000000000000ff00 XMM05=0000000000000000000000000000001a
XMM06=00000000000013880000000000000032 XMM07=00000000000002880000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=ffffffff81d3b3f0 RBX=0000000000000001 RCX=0000000000000000 RDX=ff1100026572e7e0
RSI=ff110001002cfe78 RDI=000000000048cb76 RBP=ff110001002b9680 RSP=ff110001002cfee8
R8 =000000000048cb75 R9 =0000000000000000 R10=0000000000000000 R11=0000000000000000
R12=ff110001002b9680 R13=ff110001002b9680 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff81d3b3fb RFL=00000202 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265700000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7ff3004 CR3=000000011857c003 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=000000000000ff000000000000000000 XMM03=00000000000000000000000000000000
XMM04=ffffffffffffffff0000000000000000 XMM05=00000000000000000000000000001000
XMM06=00000000000000000000000000000000 XMM07=00000000000000000000000000000000
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
