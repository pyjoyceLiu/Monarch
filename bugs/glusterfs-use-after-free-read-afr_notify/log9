r from userspace component
2023/04/02 01:12:25 fsMds: [map[] map[] map[] map[]]
Node-0:/root/daemon-log.23230
2023/04/02 01:12:25 failure smash: true false
2023/04/02 01:12:25 HasCrashFail: true, .HasNetFail: false
2023/04/02 01:12:25 disable threaded and collide
2023/04/02 01:12:25 prog length: 6
2023/04/02 01:12:25 send to channel: true, false
2023/04/02 01:12:25 prog length: 20
2023/04/02 01:12:25 HasCrashFail:true HasNetFail:false
01:12:25 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
syz_failure_sync(0x0, 0x3)
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-447
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 38
-----finish removing dir
receive_execute: 23, 76
mkdir time 37
executor 3 create dir /root/glusterfs-client/dfs-0-448 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-448
receive_execute: 37, 75
receive_execute: 22, 75
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
receive_execute: 78, 83
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5832, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 5832, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8494, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 8494, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 14, 0, 3
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 3489, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 3489, flag collect 1
----- executor 3 cover number : 942, signal number : 548
----- completed 8
execute_call 0, 14, 0, 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 196
----- completed 9
execute_call 0, 79, 0, 6
execute_one loop: 0, 0, 85
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 137, 0, 0
execute_one loop: 0, 0, 137
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 7364, flag collect 1
----- executor 0 cover number : 799, signal number : 983
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 5262, flag collect 1
----- executor 0 cover number : 1240, signal number : 1280
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 69
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1002, signal number : 750
----- executor 0 executes write_coverage_signal cov->size 1330, flag collect 1
----- executor 0 cover number : 570, signal number : 127
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 18 output_pos_value 7178
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
execute_call 0, 115, 0, 0
execute_one loop: 0, 0, 115
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 115, 0, 0
execute_one loop: 0, 0, 115
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 cover number : 601, signal number : 44
----- completed 15
execute_call 0, 68, 0, 7
execute_one loop: 0, 0, 75
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
----- executor 3 write_call_output, size 2573, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 2573, flag collect 1
----- executor 3 cover number : 739, signal number : 0
----- completed 18
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 84, 0, 0
execute_one loop: 0, 0, 84
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
==23230==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
execute_call 0, 2729, 0, 0
execute_one loop: 0, 0, 2729
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3065, 0
execute_one time: 2, 3066
----- executor 3 write_call_output, size 0, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 2728, 0, 0
execute_one loop: 0, 0, 2728
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1271, write pid:1271
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 1260, signal number : 345
----- completed 20
execute_call 0, 81, 0, 6
execute_one loop: 0, 0, 87
executor 3, execute_one inner time: 0, 3145, 0
execute_one time: 1, 3146
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 2 cover number : 7, signal number : 7
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 1 cover number : 7, signal number : 7
2023/04/02 01:12:28 for select break: 1
2023/04/02 01:12:28 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 18558, flag collect 1
----- executor 0 cover number : 525, signal number : 421
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 18778, flag collect 1
time breakdown 3: 161, 3148, 0
before receive testcase: 0 1
----- executor 2 cover number : 1731, signal number : 2150
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 1731, signal number : 2148
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 1 cover number : 401, signal number : 214
----- executor 1 executes write_coverage_signal cov->size 17200, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 30378, flag collect 1
----- executor 0 cover number : 142, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 709, flag collect 1
----- executor 0 cover number : 289, signal number : 207
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 576, signal number : 76
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 567, signal number : 279
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 539, signal number : 485
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2285, signal number : 2630
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1103, flag collect 1
----- executor 1 cover number : 280, signal number : 200
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 3358, flag collect 1
----- executor 1 cover number : 750, signal number : 424
----- executor 1 executes write_coverage_signal cov->size 1332, flag collect 1
----- executor 1 cover number : 417, signal number : 132
----- executor 1 executes write_coverage_signal cov->size 1564, flag collect 1
----- executor 1 cover number : 504, signal number : 362
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 410, signal number : 14
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1049
----- executor 0 executes write_coverage_signal cov->size 466, flag collect 1
----- executor 0 cover number : 168, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 0 cover number : 501, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1143, signal number : 965
----- executor 1 executes write_coverage_signal cov->size 24233, flag collect 1
----- executor 0 cover number : 126, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 2143, signal number : 2583
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 1112, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 280, signal number : 204
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 6384, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 2203, flag collect 1
----- executor 2 cover number : 596, signal number : 299
----- executor 2 executes write_coverage_signal cov->size 2487, flag collect 1
----- executor 2 cover number : 743, signal number : 256
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1561, signal number : 1266
----- executor 0 executes write_coverage_signal cov->size 223, flag collect 1
----- executor 0 cover number : 109, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 217, flag collect 1
----- executor 0 cover number : 109, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2129, signal number : 1126
----- executor 1 executes write_coverage_signal cov->size 29801, flag collect 1
----- executor 0 cover number : 142, signal number : 51
----- executor 0 executes write_coverage_signal cov->size 229, flag collect 1
----- executor 0 cover number : 115, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 1328, flag collect 1
----- executor 0 cover number : 602, signal number : 154
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 11, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1186, signal number : 1357
----- executor 2 executes write_coverage_signal cov->size 30236, flag collect 1
----- executor 1 cover number : 2180, signal number : 628
executor 1 server cover_cnt 16 output_pos_value 21411
2023/04/02 01:12:28 for select break: 1
2023/04/02 01:12:28 --------- executor 1 receive reply, reply.done 1
----- executor 0 cover number : 1824, signal number : 1201
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 1: 112, 3190, 0
before receive testcase: 0 0
----- executor 2 cover number : 609, signal number : 234
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1002, signal number : 514
----- executor 0 executes write_coverage_signal cov->size 1330, flag collect 1
----- executor 0 cover number : 570, signal number : 124
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 51, signal number : 53
executor 0 server cover_cnt 71 output_pos_value 24662
2023/04/02 01:12:28 for select break: 1
2023/04/02 01:12:28 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 2230, signal number : 1472
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 97, 3198, 0
before receive testcase: 0 0
----- executor 2 cover number : 1787, signal number : 661
executor 2 server cover_cnt 17 output_pos_value 21937
2023/04/02 01:12:28 for select break: 1
2023/04/02 01:12:28 --------- executor 2 receive reply, reply.done 1
2023/04/02 01:12:28 wg wait finish
2023/04/02 01:12:28 ------ all executors finish execution
2023/04/02 01:12:28 exec time: 3287
2023/04/02 01:12:28 ----- PS len: 4
2023/04/02 01:12:28 [CLIENT] executor 3 has 20 replies
2023/04/02 01:12:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 548 signal and 942 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 196 signal and 601 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:28 [SERVER] executor 1 has 16 replies
2023/04/02 01:12:28 [SERVER] executor 0 has 71 replies
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 7 signal and 7 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 983 signal and 799 cover from userspace component
time breakdown 2: 99, 3210, 0
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:28 [SERVER] executor 2 has 17 replies
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 2148 signal and 1731 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 7 signal and 7 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 1280 signal and 1240 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 69 signal and 142 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 2150 signal and 1731 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 750 signal and 1002 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:28 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 214 signal and 401 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 76 signal and 576 cover from userspace component
2023/04/02 01:12:28 fuzzer receive 0 signal and 739 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:28 fuzzer receive 345 signal and 1260 cover from executor 3
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 2630 signal and 2285 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 279 signal and 567 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 200 signal and 280 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 14 signal and 410 cover from userspace component
before receive testcase: 0 0
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 2583 signal and 2143 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 204 signal and 280 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 299 signal and 596 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 256 signal and 743 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 1357 signal and 1186 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 424 signal and 750 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 234 signal and 609 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 132 signal and 417 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 362 signal and 504 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 965 signal and 1143 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 1472 signal and 2230 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 2 receive 661 signal and 1787 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 1126 signal and 2129 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 1 receive 628 signal and 2180 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 127 signal and 570 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 421 signal and 525 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 2 signal and 142 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 3 signal and 10 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 207 signal and 289 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 485 signal and 539 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 1049 signal and 1141 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 8 signal and 168 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 54 signal and 501 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 6 signal and 126 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 9 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 1266 signal and 1561 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 4 signal and 109 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 3 signal and 109 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 51 signal and 142 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 4 signal and 115 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 154 signal and 602 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 6 signal and 11 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 1201 signal and 1824 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 514 signal and 1002 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 124 signal and 570 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 4 signal and 8 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 4 signal and 7 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 18 signal and 27 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:12:28 ------- fuzzer executor 0 receive 53 signal and 51 cover from userspace component
2023/04/02 01:12:28 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:12:28 disable threaded and collide
2023/04/02 01:12:28 prog length: 6
2023/04/02 01:12:28 prog length: 20
2023/04/02 01:12:28 HasCrashFail:true HasNetFail:false
01:12:28 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
syz_failure_sync(0x0, 0x3)
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 3: prog_data_offset 1576, prog_size 9256
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-448
remove dir time 60
-----finish removing dir
Node-0:/root/daemon-log.23300
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-449 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-449
receive_execute: 55, 88
receive_execute: 45, 88
receive_execute: 33, 88
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 88, 93
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 5832, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 5832, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8488, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 8488, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 13, 0, 3
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 3486, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 3486, flag collect 1
----- executor 3 cover number : 942, signal number : 548
----- completed 8
execute_call 0, 13, 0, 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 196
----- completed 9
execute_call 0, 106, 0, 8
execute_one loop: 0, 0, 114
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 156, 0, 0
execute_one loop: 0, 0, 156
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 28364, flag collect 1
----- executor 0 cover number : 1141, signal number : 1425
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 1
----- executor 0 cover number : 34, signal number : 32
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1785, signal number : 1995
----- executor 0 executes write_coverage_signal cov->size 5778, flag collect 1
----- executor 0 cover number : 533, signal number : 434
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 69
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1002, signal number : 573
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 12
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 19 output_pos_value 9551
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
execute_call 0, 95, 0, 0
execute_one loop: 0, 0, 95
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 95, 0, 1
execute_one loop: 0, 0, 96
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 59
----- directly resend shmid 59
-----executor 0 collect shmids 60
----- directly resend shmid 60
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
----- executor 3 write_call_output, size 32765, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 15
execute_call 0, 76, 0, 7
execute_one loop: 0, 0, 83
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2573, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 2573, flag collect 1
----- executor 3 cover number : 739, signal number : 0
----- completed 18
execute_call 0, 13, 0, 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 100, 0, 0
execute_one loop: 0, 0, 100
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
==23300==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
execute_call 0, 2853, 0, 0
execute_one loop: 0, 0, 2853
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3204, 0
execute_one time: 1, 3204
----- executor 3 write_call_output, size 0, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 2853, 0, 0
execute_one loop: 0, 0, 2853
cover_reset in execute_call
Node-0:/root/daemon-log.23370
----- executor 3 write_call_output, size 32765, pid 1272, write pid:1272
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 1262, signal number : 349
----- completed 20
execute_call 0, 88, 0, 8
execute_one loop: 0, 0, 96
executor 3, execute_one inner time: 1, 3301, 0
execute_one time: 0, 3302
2023/04/02 01:12:32 for select break: 1
2023/04/02 01:12:32 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 859, flag collect 1
time breakdown 3: 181, 3303, 1
before receive testcase: 0 0
----- executor 1 cover number : 289, signal number : 332
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1265, flag collect 1
----- executor 0 cover number : 435, signal number : 226
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 836, flag collect 1
----- executor 0 cover number : 501, signal number : 59
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 289, signal number : 332
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 539, signal number : 616
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 50, signal number : 45
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1664, signal number : 1937
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1869, flag collect 1
----- executor 1 cover number : 567, signal number : 292
----- executor 1 executes write_coverage_signal cov->size 16001, flag collect 1
----- executor 0 cover number : 126, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 119, flag collect 1
----- executor 0 cover number : 63, signal number : 28
----- executor 0 executes write_coverage_signal cov->size 3485, flag collect 1
----- executor 0 cover number : 658, signal number : 380
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 410, signal number : 59
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2285, signal number : 2774
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 12, signal number : 10
----- executor 1 executes write_coverage_signal cov->size 854, flag collect 1
----- executor 1 cover number : 270, signal number : 140
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 133
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2198, flag collect 1
----- executor 2 cover number : 516, signal number : 561
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1283
----- executor 0 executes write_coverage_signal cov->size 280, flag collect 1
----- executor 0 cover number : 140, signal number : 59
----- executor 0 executes write_coverage_signal cov->size 218, flag collect 1
----- executor 1 cover number : 703, signal number : 231
----- executor 1 executes write_coverage_signal cov->size 3278, flag collect 1
----- executor 0 cover number : 109, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 1 cover number : 767, signal number : 379
----- executor 1 executes write_coverage_signal cov->size 1564, flag collect 1
----- executor 1 cover number : 504, signal number : 338
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1494, signal number : 1752
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28518, flag collect 1
----- executor 1 cover number : 1143, signal number : 1005
----- executor 1 executes write_coverage_signal cov->size 24200, flag collect 1
----- executor 2 cover number : 401, signal number : 325
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2129, signal number : 1358
----- executor 1 executes write_coverage_signal cov->size 29797, flag collect 1
----- executor 2 cover number : 409, signal number : 11
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1819, signal number : 1342
----- executor 0 executes write_coverage_signal cov->size 5535, flag collect 1
----- executor 0 cover number : 450, signal number : 75
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2180, signal number : 832
executor 1 server cover_cnt 21 output_pos_value 24545
2023/04/02 01:12:32 for select break: 1
2023/04/02 01:12:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 143, 3358, 0
before receive testcase: 0 0
----- executor 2 cover number : 2395, signal number : 3131
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 12, signal number : 10
----- executor 2 executes write_coverage_signal cov->size 856, flag collect 1
----- executor 2 cover number : 270, signal number : 141
----- executor 2 executes write_coverage_signal cov->size 2842, flag collect 1
----- executor 2 cover number : 526, signal number : 223
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3273, flag collect 1
----- executor 2 cover number : 906, signal number : 496
----- executor 2 executes write_coverage_signal cov->size 2989, flag collect 1
----- executor 2 cover number : 759, signal number : 135
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1785, signal number : 1925
----- executor 0 executes write_coverage_signal cov->size 5778, flag collect 1
----- executor 0 cover number : 533, signal number : 238
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1189, signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 27863, flag collect 1
----- executor 0 cover number : 142, signal number : 65
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 1113, flag collect 1
----- executor 0 cover number : 499, signal number : 193
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 595, signal number : 244
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1966, signal number : 1311
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1002, signal number : 463
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 16
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 2 cover number : 1826, signal number : 834
----- executor 0 cover number : 523, signal number : 116
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 server cover_cnt 21 output_pos_value 24665
2023/04/02 01:12:32 for select break: 1
2023/04/02 01:12:32 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 121, 3390, 0
before receive testcase: 0 0
----- executor 0 cover number : 142, signal number : 15
executor 0 server cover_cnt 80 output_pos_value 29312
2023/04/02 01:12:32 for select break: 1
2023/04/02 01:12:32 --------- executor 0 receive reply, reply.done 1
2023/04/02 01:12:32 wg wait finish
2023/04/02 01:12:32 ------ all executors finish execution
2023/04/02 01:12:32 exec time: 3486
2023/04/02 01:12:32 ----- PS len: 4
2023/04/02 01:12:32 [CLIENT] executor 3 has 20 replies
2023/04/02 01:12:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 548 signal and 942 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 196 signal and 601 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 0 signal and 739 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:32 fuzzer receive 349 signal and 1262 cover from executor 3
2023/04/02 01:12:32 [SERVER] executor 1 has 21 replies
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 332 signal and 289 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 616 signal and 539 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 1937 signal and 1664 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:32 [SERVER] executor 0 has 80 replies
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 1425 signal and 1141 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 32 signal and 34 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 1995 signal and 1785 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 292 signal and 567 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 434 signal and 533 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 69 signal and 142 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 59 signal and 410 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 573 signal and 1002 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 12 signal and 165 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 2 signal and 10 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:12:32 [SERVER] executor 2 has 21 replies
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 332 signal and 289 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 45 signal and 50 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 226 signal and 435 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 2 signal and 165 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 561 signal and 516 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 59 signal and 501 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 6 signal and 126 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 10 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 28 signal and 63 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 2774 signal and 2285 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 1752 signal and 1494 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 380 signal and 658 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 10 signal and 12 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 1283 signal and 1141 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 59 signal and 140 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 140 signal and 270 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 325 signal and 401 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 133 signal and 526 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 11 signal and 409 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 231 signal and 703 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 3131 signal and 2395 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 379 signal and 767 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 338 signal and 504 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 1005 signal and 1143 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 1358 signal and 2129 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 10 signal and 12 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 1 receive 832 signal and 2180 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 141 signal and 270 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 223 signal and 526 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 496 signal and 906 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 135 signal and 759 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 1394 signal and 1189 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 244 signal and 595 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 3 signal and 109 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 1311 signal and 1966 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 2 receive 834 signal and 1826 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 1342 signal and 1819 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 75 signal and 450 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 1925 signal and 1785 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 238 signal and 533 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 65 signal and 142 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 5 signal and 9 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 193 signal and 499 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 463 signal and 1002 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 17 signal and 165 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 4 signal and 8 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 16 signal and 27 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 6 signal and 13 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 18 signal and 51 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 116 signal and 523 cover from userspace component
2023/04/02 01:12:32 ------- fuzzer executor 0 receive 15 signal and 142 cover from userspace component
time breakdown 0: 140, 3391, 0
before receive testcase: 0 0
2023/04/02 01:12:32 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:12:32 failure smash: true false
2023/04/02 01:12:32 HasCrashFail: true, .HasNetFail: false
2023/04/02 01:12:32 disable threaded and collide
2023/04/02 01:12:32 prog length: 6
2023/04/02 01:12:32 prog length: 20
2023/04/02 01:12:32 send to channel: true, false
2023/04/02 01:12:32 HasCrashFail:true HasNetFail:false
01:12:32 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
syz_failure_sync(0x0, 0x3)
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-449
remove dir time 43
-----finish removing dir
receive_execute: 25, 76
receive_execute: 55, 76
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-450 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-450
receive_execute: 17, 76
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 105, 86
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 12, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5828, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 5828, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 6, 0, 3
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 5755, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 5755, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8488, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 8488, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 12, 0, 8
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 3489, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 3489, flag collect 1
----- executor 3 cover number : 948, signal number : 549
----- completed 8
execute_call 0, 12, 0, 3
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 195
----- completed 9
execute_call 0, 65, 0, 7
execute_one loop: 0, 0, 72
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 141, 0, 0
execute_one loop: 0, 0, 141
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 1
----- executor 0 cover number : 34, signal number : 36
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1421
----- executor 0 executes write_coverage_signal cov->size 1494, flag collect 1
----- executor 0 cover number : 635, signal number : 672
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 691, flag collect 1
----- executor 0 cover number : 354, signal number : 239
----- executor 0 executes write_coverage_signal cov->size 19100, flag collect 1
----- executor 0 cover number : 953, signal number : 868
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 21
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 54
executor 0 server cover_cnt 11 output_pos_value 6580
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
-----executor 0 collect shmids 49
----- directly resend shmid 49
-----executor 0 collect shmids 50
----- directly resend shmid 50
-----executor 0 collect shmids 51
----- directly resend shmid 51
-----executor 0 collect shmids 52
----- directly resend shmid 52
execute_call 0, 98, 0, 0
execute_one loop: 0, 0, 98
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 98, 0, 0
execute_one loop: 0, 0, 98
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
----- executor 3 cover number : 601, signal number : 44
----- completed 15
execute_call 0, 82, 0, 15
execute_one loop: 0, 0, 97
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 8
----- directly resend shmid 8
----- executor 3 write_call_output, size 2570, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 2570, flag collect 1
----- executor 3 cover number : 739, signal number : 0
----- completed 18
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 19
execute_call 0, 79, 0, 7
execute_one loop: 0, 0, 86
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 194, 0, 0
execute_one loop: 0, 0, 194
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
==23370==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
execute_call 0, 2851, 0, 0
execute_one loop: 0, 0, 2851
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3284, 0
execute_one time: 4, 3284
----- executor 3 write_call_output, size 0, pid 1273, write pid:1273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 20
execute_call 0, 2851, 0, 0
execute_one loop: 0, 0, 2851
executor 3, execute_one inner time: 1, 3274, 0
execute_one time: 2, 3276
2023/04/02 01:12:35 for select break: 1
2023/04/02 01:12:35 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 841, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 801, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 1 cover number : 287, signal number : 329
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 4963, flag collect 1
----- executor 2 cover number : 287, signal number : 329
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 5403, flag collect 1
----- executor 1 cover number : 1347, signal number : 1502
----- executor 1 executes write_coverage_signal cov->size 84, flag collect 1
----- executor 1 cover number : 64, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 116, signal number : 104
----- executor 1 executes write_coverage_signal cov->size 126, flag collect 1
----- executor 1 cover number : 66, signal number : 47
----- executor 1 executes write_coverage_signal cov->size 15330, flag collect 1
----- executor 2 cover number : 1364, signal number : 1529
----- executor 2 executes write_coverage_signal cov->size 84, flag collect 1
----- executor 2 cover number : 64, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 2 cover number : 116, signal number : 105
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 1
----- executor 2 cover number : 66, signal number : 47
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 525, signal number : 494
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 191, 3279, 0
before receive testcase: 0 0
----- executor 1 cover number : 410, signal number : 229
----- executor 1 executes write_coverage_signal cov->size 24205, flag collect 1
----- executor 0 cover number : 142, signal number : 61
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 452, flag collect 1
----- executor 0 cover number : 156, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 1276, flag collect 1
----- executor 1 cover number : 1986, signal number : 2335
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 0 cover number : 444, signal number : 229
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 692, flag collect 1
----- executor 1 cover number : 265, signal number : 127
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1330, flag collect 1
----- executor 1 cover number : 415, signal number : 145
----- executor 1 executes write_coverage_signal cov->size 3350, flag collect 1
----- executor 1 cover number : 749, signal number : 314
----- executor 1 executes write_coverage_signal cov->size 31526, flag collect 1
----- executor 2 cover number : 410, signal number : 232
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 51
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 379, signal number : 77
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1143, signal number : 1276
----- executor 1 executes write_coverage_signal cov->size 27944, flag collect 1
----- executor 1 cover number : 2389, signal number : 1453
----- executor 1 executes write_coverage_signal cov->size 21797, flag collect 1
----- executor 0 cover number : 539, signal number : 455
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1789, signal number : 2188
----- executor 1 cover number : 1853, signal number : 406
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 694, flag collect 1
Node-0:/root/daemon-log.23445
executor 1 server cover_cnt 17 output_pos_value 19459
----- executor 2 cover number : 265, signal number : 127
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3350, flag collect 1
----- executor 2 cover number : 749, signal number : 363
----- executor 2 executes write_coverage_signal cov->size 1330, flag collect 1
----- executor 2 cover number : 415, signal number : 101
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1253
----- executor 0 executes write_coverage_signal cov->size 50, flag collect 1
----- executor 0 cover number : 38, signal number : 13
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 32
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
2023/04/02 01:12:35 for select break: 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
2023/04/02 01:12:35 --------- executor 1 receive reply, reply.done 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 3544, flag collect 1
time breakdown 1: 132, 3319, 0
before receive testcase: 0 0
----- executor 0 cover number : 1074, signal number : 815
----- executor 0 executes write_coverage_signal cov->size 11, flag collect 1
----- executor 0 cover number : 9, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1189, signal number : 1288
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1730, signal number : 1396
----- executor 0 executes write_coverage_signal cov->size 1111, flag collect 1
----- executor 0 cover number : 497, signal number : 150
----- executor 0 executes write_coverage_signal cov->size 691, flag collect 1
----- executor 0 cover number : 354, signal number : 142
----- executor 0 executes write_coverage_signal cov->size 19100, flag collect 1
----- executor 2 cover number : 2486, signal number : 1597
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 953, signal number : 748
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 46
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 130
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1996, signal number : 904
executor 2 server cover_cnt 17 output_pos_value 20108
----- executor 0 cover number : 142, signal number : 26
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 10
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 443, flag collect 1
----- executor 0 cover number : 249, signal number : 29
executor 0 server cover_cnt 67 output_pos_value 25094
2023/04/02 01:12:35 for select break: 1
2023/04/02 01:12:35 --------- executor 2 receive reply, reply.done 1
2023/04/02 01:12:35 for select break: 1
2023/04/02 01:12:35 --------- executor 0 receive reply, reply.done 1
2023/04/02 01:12:35 wg wait finish
2023/04/02 01:12:35 ------ all executors finish execution
2023/04/02 01:12:35 exec time: 3417
2023/04/02 01:12:35 ----- PS len: 4
2023/04/02 01:12:35 [CLIENT] executor 3 has 20 replies
2023/04/02 01:12:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:35 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:12:35 [SERVER] executor 1 has 17 replies
2023/04/02 01:12:35 [SERVER] executor 0 has 67 replies
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 36 signal and 34 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 1421 signal and 1141 cover from userspace component
2023/04/02 01:12:35 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 329 signal and 287 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 672 signal and 635 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 239 signal and 354 cover from userspace component
2023/04/02 01:12:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 868 signal and 953 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 21 signal and 27 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 1502 signal and 1347 cover from userspace component
2023/04/02 01:12:35 [SERVER] executor 2 has 17 replies
2023/04/02 01:12:35 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 329 signal and 287 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:35 fuzzer receive 549 signal and 948 cover from executor 3
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 0 signal and 64 cover from userspace component
2023/04/02 01:12:35 fuzzer receive 195 signal and 601 cover from executor 3
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 104 signal and 116 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 54 signal and 51 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 1529 signal and 1364 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 1 signal and 64 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 47 signal and 66 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 105 signal and 116 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 494 signal and 525 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 47 signal and 66 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 61 signal and 142 cover from userspace component
2023/04/02 01:12:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/04/02 01:12:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 229 signal and 410 cover from userspace component
2023/04/02 01:12:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:12:35 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 232 signal and 410 cover from userspace component
2023/04/02 01:12:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:35 fuzzer receive 0 signal and 739 cover from executor 3
2023/04/02 01:12:35 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 2335 signal and 1986 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 127 signal and 265 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 145 signal and 415 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 6 signal and 156 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 229 signal and 444 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 314 signal and 749 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 51 signal and 501 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 77 signal and 379 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 455 signal and 539 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 1276 signal and 1143 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 1453 signal and 2389 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 2188 signal and 1789 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 127 signal and 265 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 363 signal and 749 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 101 signal and 415 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 1288 signal and 1189 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 1253 signal and 1141 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 13 signal and 38 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 2 signal and 6 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 32 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 1597 signal and 2486 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 2 receive 904 signal and 1996 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 815 signal and 1074 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 6 signal and 9 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 1396 signal and 1730 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 150 signal and 497 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 142 signal and 354 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 748 signal and 953 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 17 signal and 27 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 3 signal and 13 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 46 signal and 51 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 130 signal and 523 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 26 signal and 142 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 10 signal and 51 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 3 signal and 7 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 0 receive 29 signal and 249 cover from userspace component
2023/04/02 01:12:35 ------- fuzzer executor 1 receive 406 signal and 1853 cover from userspace component
2023/04/02 01:12:35 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 101, 3339, 0
before receive testcase: 0 1
time breakdown 0: 93, 3341, 0
before receive testcase: 0 0
2023/04/02 01:12:35 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:12:35 disable threaded and collide
2023/04/02 01:12:35 prog length: 6
2023/04/02 01:12:35 prog length: 20
2023/04/02 01:12:35 HasCrashFail:true HasNetFail:false
01:12:35 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
syz_failure_sync(0x0, 0x3)
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir: /root/glusterfs-client/dfs-0-450
remove dir time 40
-----finish removing dir
mkdir time 31
executor 3 create dir /root/glusterfs-client/dfs-0-451 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-451
receive_execute: 30, 71
receive_execute: 31, 72
receive_execute: 50, 71
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 1
receive_execute: 82, 77
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5835, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 5835, flag collect 1
----- executor 3 cover number : 951, signal number : 1152
----- completed 4
execute_call 0, 5, 0, 4
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 5761, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 5761, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8500, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 8500, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 16, 0, 3
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 3492, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 3492, flag collect 1
----- executor 3 cover number : 942, signal number : 548
----- completed 8
execute_call 0, 17, 0, 3
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 196
----- completed 9
execute_call 0, 63, 0, 17
execute_one loop: 0, 0, 80
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 139, 0, 0
execute_one loop: 0, 0, 139
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1425
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 1
----- executor 0 cover number : 34, signal number : 32
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 1494, flag collect 1
----- executor 0 cover number : 635, signal number : 672
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 969, signal number : 1036
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 0 cover number : 349, signal number : 239
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 54
executor 0 server cover_cnt 14 output_pos_value 6800
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
-----executor 0 collect shmids 49
----- directly resend shmid 49
execute_call 0, 90, 0, 0
execute_one loop: 0, 0, 90
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 90, 0, 0
execute_one loop: 0, 0, 90
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
----- executor 3 write_call_output, size 32765, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 15
execute_call 0, 89, 0, 13
execute_one loop: 0, 0, 102
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2576, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 2576, flag collect 1
----- executor 3 cover number : 739, signal number : 0
----- completed 18
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 19
execute_call 0, 73, 0, 5
execute_one loop: 0, 0, 78
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 192, 0, 0
execute_one loop: 0, 0, 192
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
==23445==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
----- executor 3 write_call_output, size 0, pid 1275, write pid:1275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 20
execute_call 0, 2943, 0, 0
execute_one loop: 0, 0, 2943
executor 3, execute_one inner time: 1, 3357, 0
execute_one time: 1, 3358
2023/04/02 01:12:39 for select break: 1
2023/04/02 01:12:39 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 159, 3360, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1200, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 1329, flag collect 1
----- executor 2 cover number : 330, signal number : 383
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 3692, flag collect 1
----- executor 1 cover number : 334, signal number : 387
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 5302, flag collect 1
----- executor 2 cover number : 1054, signal number : 1102
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 1 cover number : 1408, signal number : 1528
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 13932, flag collect 1
execute_call 0, 2943, 0, 0
execute_one loop: 0, 0, 2943
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3364, 0
execute_one time: 1, 3364
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 0 cover number : 525, signal number : 490
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 410, signal number : 228
----- executor 1 executes write_coverage_signal cov->size 26603, flag collect 1
----- executor 2 cover number : 410, signal number : 350
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 70
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 1200, flag collect 1
----- executor 0 cover number : 435, signal number : 240
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 0 cover number : 501, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2096, signal number : 2631
----- executor 2 executes write_coverage_signal cov->size 1117, flag collect 1
----- executor 2 cover number : 280, signal number : 151
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3358, flag collect 1
----- executor 2 cover number : 750, signal number : 377
----- executor 2 executes write_coverage_signal cov->size 1330, flag collect 1
----- executor 2 cover number : 417, signal number : 102
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 69
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
Node-0:/root/daemon-log.23523
----- executor 0 cover number : 1141, signal number : 1229
----- executor 0 executes write_coverage_signal cov->size 49, flag collect 1
----- executor 0 cover number : 35, signal number : 25
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 33
----- executor 1 cover number : 2049, signal number : 2500
----- executor 1 executes write_coverage_signal cov->size 1031, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 280, signal number : 151
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1330, flag collect 1
----- executor 1 cover number : 417, signal number : 148
----- executor 1 executes write_coverage_signal cov->size 3358, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 1 cover number : 750, signal number : 320
----- executor 1 executes write_coverage_signal cov->size 28806, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 1187, signal number : 1256
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1158, signal number : 1246
----- executor 1 executes write_coverage_signal cov->size 931, flag collect 1
----- executor 1 cover number : 369, signal number : 11
----- executor 1 executes write_coverage_signal cov->size 28435, flag collect 1
----- executor 2 cover number : 2230, signal number : 1481
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2248, signal number : 1408
----- executor 1 executes write_coverage_signal cov->size 18514, flag collect 1
----- executor 1 cover number : 1852, signal number : 351
executor 1 server cover_cnt 14 output_pos_value 19610
----- executor 2 cover number : 1789, signal number : 558
executor 2 server cover_cnt 13 output_pos_value 18988
----- executor 0 cover number : 1608, signal number : 1685
2023/04/02 01:12:39 for select break: 1
2023/04/02 01:12:39 --------- executor 1 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 1111, flag collect 1
----- executor 0 cover number : 497, signal number : 179
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/04/02 01:12:39 for select break: 1
2023/04/02 01:12:39 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 103, 3419, 0
before receive testcase: 0 0
time breakdown 1: 121, 3418, 0
before receive testcase: 0 0
----- executor 0 cover number : 969, signal number : 1030
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 0 cover number : 349, signal number : 145
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 44
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 142
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 21
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 9, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 443, flag collect 1
----- executor 0 cover number : 249, signal number : 36
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
executor 0 server cover_cnt 73 output_pos_value 22945
2023/04/02 01:12:39 for select break: 1
2023/04/02 01:12:39 --------- executor 0 receive reply, reply.done 1
2023/04/02 01:12:39 wg wait finish
2023/04/02 01:12:39 ------ all executors finish execution
2023/04/02 01:12:39 exec time: 3527
2023/04/02 01:12:39 ----- PS len: 4
2023/04/02 01:12:39 [SERVER] executor 1 has 14 replies
2023/04/02 01:12:39 [SERVER] executor 2 has 13 replies
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 383 signal and 330 cover from userspace component
2023/04/02 01:12:39 [SERVER] executor 0 has 73 replies
time breakdown 0: 101, 3456, 0
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 387 signal and 334 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 1425 signal and 1141 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 32 signal and 34 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 1528 signal and 1408 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 228 signal and 410 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 1102 signal and 1054 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 2500 signal and 2049 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 151 signal and 280 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 148 signal and 417 cover from userspace component
before receive testcase: 0 0
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 672 signal and 635 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 350 signal and 410 cover from userspace component
2023/04/02 01:12:39 [CLIENT] executor 3 has 20 replies
2023/04/02 01:12:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 1152 signal and 951 cover from executor 3
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 320 signal and 750 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:39 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 548 signal and 942 cover from executor 3
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 1036 signal and 969 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 239 signal and 349 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 8 signal and 8 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 54 signal and 51 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 490 signal and 525 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 70 signal and 142 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 2631 signal and 2096 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 1246 signal and 1158 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 240 signal and 435 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 11 signal and 369 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 54 signal and 501 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 1408 signal and 2248 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 4 signal and 126 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 9 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 69 signal and 286 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 1 receive 351 signal and 1852 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 1229 signal and 1141 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 25 signal and 35 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 33 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 151 signal and 280 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 377 signal and 750 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 fuzzer receive 196 signal and 601 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 0 signal and 739 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:12:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 102 signal and 417 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 1256 signal and 1187 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 1481 signal and 2230 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 2 receive 558 signal and 1789 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 1685 signal and 1608 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 2 signal and 3 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 179 signal and 497 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 1030 signal and 969 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 145 signal and 349 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 5 signal and 8 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 4 signal and 7 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 18 signal and 27 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 4 signal and 13 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 44 signal and 51 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 142 signal and 523 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 21 signal and 142 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 6 signal and 9 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 5 signal and 51 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 36 signal and 249 cover from userspace component
2023/04/02 01:12:39 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:12:39 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:12:39 failure smash: true false
2023/04/02 01:12:39 HasCrashFail: true, .HasNetFail: false
2023/04/02 01:12:39 disable threaded and collide
2023/04/02 01:12:39 prog length: 6
2023/04/02 01:12:39 prog length: 20
2023/04/02 01:12:39 send to channel: true, false
2023/04/02 01:12:39 HasCrashFail:true HasNetFail:false
01:12:39 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-451
remove dir time 47
-----finish removing dir
receive_execute: 93, 81
receive_execute: 95, 81
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-452 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-452
receive_execute: 57, 80
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
receive_execute: 146, 87
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5824, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 1
----- executor 3 cover number : 950, signal number : 1149
----- completed 4
execute_call 0, 5, 0, 5
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 1
----- executor 3 cover number : 919, signal number : 13
----- completed 5
execute_call 0, 6, 0, 3
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8482, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 8482, flag collect 1
----- executor 3 cover number : 1136, signal number : 308
----- completed 7
execute_call 0, 16, 0, 6
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 3468, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 3468, flag collect 1
----- executor 3 cover number : 941, signal number : 548
----- completed 8
execute_call 0, 12, 0, 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 196
----- completed 9
execute_call 0, 54, 0, 11
execute_one loop: 0, 0, 65
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 137, 0, 0
execute_one loop: 0, 0, 137
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1425
----- executor 0 executes write_coverage_signal cov->size 41, flag collect 1
----- executor 0 cover number : 35, signal number : 34
----- executor 0 executes write_coverage_signal cov->size 1722, flag collect 1
----- executor 0 cover number : 705, signal number : 767
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 0 cover number : 349, signal number : 239
----- executor 0 executes write_coverage_signal cov->size 15103, flag collect 1
----- executor 0 cover number : 753, signal number : 637
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 494
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 70
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 15 output_pos_value 7564
-----executor 0 collect shmids 69
----- directly resend shmid 69
-----executor 0 collect shmids 70
----- directly resend shmid 70
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
-----executor 0 collect shmids 49
----- directly resend shmid 49
-----executor 0 collect shmids 50
----- directly resend shmid 50
-----executor 0 collect shmids 51
----- directly resend shmid 51
-----executor 0 collect shmids 52
----- directly resend shmid 52
execute_call 0, 127, 0, 0
execute_one loop: 0, 0, 127
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 128, 0, 0
execute_one loop: 0, 0, 128
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
==23523==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 2843, 0, 0
execute_one loop: 0, 0, 2843
cover_reset in execute_call
execute_call 0, 2843, 0, 0
execute_one loop: 0, 0, 2843
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3108, 0
execute_one time: 2, 3108
----- executor 3 write_call_output, size 32765, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 1261, signal number : 349
----- completed 16
execute_call 0, 102, 0, 18
execute_one loop: 0, 0, 120
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2567, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 2567, flag collect 1
----- executor 3 cover number : 738, signal number : 1
----- completed 19
execute_call 0, 17, 0, 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
Node-0:/root/daemon-log.23599
----- executor 3 write_call_output, size 32765, pid 1276, write pid:1276
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 44
----- completed 20
execute_call 0, 74, 0, 6
execute_one loop: 0, 0, 80
executor 3, execute_one inner time: 0, 3319, 0
execute_one time: 4, 3320
2023/04/02 01:12:42 for select break: 1
2023/04/02 01:12:42 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 841, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 836, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 cover number : 287, signal number : 329
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 287, signal number : 329
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 233, 3325, 0
before receive testcase: 0 0
----- executor 0 cover number : 501, signal number : 38
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 539, signal number : 616
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2772, flag collect 1
----- executor 0 cover number : 414, signal number : 264
----- executor 0 executes write_coverage_signal cov->size 75, flag collect 1
----- executor 0 cover number : 57, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 26
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 919, flag collect 1
----- executor 0 cover number : 387, signal number : 209
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2106, signal number : 2439
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 19498, flag collect 1
----- executor 0 cover number : 1141, signal number : 1241
----- executor 0 executes write_coverage_signal cov->size 256, flag collect 1
----- executor 0 cover number : 139, signal number : 29
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 2106, signal number : 2437
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 814, signal number : 459
----- executor 1 executes write_coverage_signal cov->size 17745, flag collect 1
----- executor 1 cover number : 1790, signal number : 1054
----- executor 1 executes write_coverage_signal cov->size 27133, flag collect 1
----- executor 2 cover number : 410, signal number : 321
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1820, signal number : 1404
----- executor 0 executes write_coverage_signal cov->size 14294, flag collect 1
----- executor 1 cover number : 2139, signal number : 2647
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 872, flag collect 1
----- executor 1 cover number : 270, signal number : 132
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 140
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2116, flag collect 1
----- executor 1 cover number : 681, signal number : 276
----- executor 1 executes write_coverage_signal cov->size 3358, flag collect 1
----- executor 1 cover number : 750, signal number : 301
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1762, signal number : 1220
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 1176, flag collect 1
----- executor 0 cover number : 497, signal number : 147
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1447, signal number : 889
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2109, signal number : 2570
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 874, flag collect 1
----- executor 2 cover number : 270, signal number : 147
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 140
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 1 cover number : 1160, signal number : 1335
----- executor 1 executes write_coverage_signal cov->size 2539, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 4144, flag collect 1
----- executor 1 cover number : 534, signal number : 41
----- executor 1 executes write_coverage_signal cov->size 31533, flag collect 1
----- executor 2 cover number : 913, signal number : 472
----- executor 2 executes write_coverage_signal cov->size 1330, flag collect 1
----- executor 2 cover number : 417, signal number : 125
----- executor 0 cover number : 1205, signal number : 659
----- executor 0 executes write_coverage_signal cov->size 17492, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1210, signal number : 682
----- executor 0 executes write_coverage_signal cov->size 1537, flag collect 1
----- executor 0 cover number : 575, signal number : 611
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 47
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 1 cover number : 2421, signal number : 1859
----- executor 1 executes write_coverage_signal cov->size 27768, flag collect 1
----- executor 0 cover number : 526, signal number : 349
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 950, signal number : 926
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2256, signal number : 950
executor 1 server cover_cnt 20 output_pos_value 28970
----- executor 0 cover number : 142, signal number : 65
----- executor 0 executes write_coverage_signal cov->size 45, flag collect 1
----- executor 0 cover number : 10, signal number : 10
----- executor 0 executes write_coverage_signal cov->size 718, flag collect 1
----- executor 0 cover number : 272, signal number : 77
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/04/02 01:12:42 for select break: 1
2023/04/02 01:12:42 --------- executor 1 receive reply, reply.done 1
----- executor 2 cover number : 1189, signal number : 644
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 1: 176, 3386, 0
before receive testcase: 0 0
----- executor 0 cover number : 1547, signal number : 1790
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2230, signal number : 1788
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 890, signal number : 599
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 0 cover number : 525, signal number : 158
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 1
----- executor 0 cover number : 243, signal number : 30
----- executor 0 executes write_coverage_signal cov->size 812, flag collect 1
----- executor 0 cover number : 396, signal number : 209
----- executor 0 executes write_coverage_signal cov->size 64, flag collect 1
----- executor 0 cover number : 44, signal number : 3
executor 0 server cover_cnt 70 output_pos_value 34531
2023/04/02 01:12:42 for select break: 1
2023/04/02 01:12:42 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 1790, signal number : 917
executor 2 server cover_cnt 20 output_pos_value 27573
time breakdown 0: 137, 3402, 0
before receive testcase: 0 0
2023/04/02 01:12:42 for select break: 1
2023/04/02 01:12:42 --------- executor 2 receive reply, reply.done 1
2023/04/02 01:12:42 wg wait finish
2023/04/02 01:12:42 ------ all executors finish execution
2023/04/02 01:12:42 exec time: 3489
2023/04/02 01:12:42 ----- PS len: 4
2023/04/02 01:12:42 [CLIENT] executor 3 has 20 replies
2023/04/02 01:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:42 [SERVER] executor 0 has 70 replies
time breakdown 2: 174, 3408, 0
2023/04/02 01:12:42 [SERVER] executor 2 has 20 replies
before receive testcase: 0 0
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 329 signal and 287 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 2437 signal and 2106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:42 fuzzer receive 1149 signal and 950 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 13 signal and 919 cover from executor 3
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 321 signal and 410 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 889 signal and 1447 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 2570 signal and 2109 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 1425 signal and 1141 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 147 signal and 270 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 140 signal and 526 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 34 signal and 35 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 472 signal and 913 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 125 signal and 417 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 767 signal and 705 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 308 signal and 1136 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 548 signal and 941 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 196 signal and 600 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 349 signal and 1261 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 926 signal and 950 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 644 signal and 1189 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 1788 signal and 2230 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 2 receive 917 signal and 1790 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 239 signal and 349 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 637 signal and 753 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 54 signal and 51 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 494 signal and 523 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 70 signal and 142 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 1 signal and 51 cover from userspace component
2023/04/02 01:12:42 fuzzer receive 1 signal and 738 cover from executor 3
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:12:42 fuzzer receive 44 signal and 600 cover from executor 3
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 38 signal and 501 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 6 signal and 126 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 2 signal and 9 cover from userspace component
2023/04/02 01:12:42 [SERVER] executor 1 has 20 replies
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 329 signal and 287 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 616 signal and 539 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 264 signal and 414 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 2439 signal and 2106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 9 signal and 57 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 26 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 459 signal and 814 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 209 signal and 387 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 1054 signal and 1790 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 1241 signal and 1141 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 29 signal and 139 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 2647 signal and 2139 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 132 signal and 270 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 140 signal and 526 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 276 signal and 681 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 301 signal and 750 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 1335 signal and 1160 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 41 signal and 534 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 1404 signal and 1820 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 1220 signal and 1762 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 2 signal and 3 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 147 signal and 497 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 659 signal and 1205 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 1859 signal and 2421 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 682 signal and 1210 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 611 signal and 575 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 47 signal and 51 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 1 receive 950 signal and 2256 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 349 signal and 526 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 65 signal and 142 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 10 signal and 10 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 77 signal and 272 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 4 signal and 51 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 1790 signal and 1547 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 599 signal and 890 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 158 signal and 525 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 30 signal and 243 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 209 signal and 396 cover from userspace component
2023/04/02 01:12:42 ------- fuzzer executor 0 receive 3 signal and 44 cover from userspace component
2023/04/02 01:12:42 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:12:42 disable threaded and collide
2023/04/02 01:12:42 prog length: 6
2023/04/02 01:12:42 prog length: 20
2023/04/02 01:12:42 HasCrashFail:true HasNetFail:false
01:12:42 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-452
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 33
-----finish removing dir
receive_execute: 39, 65
receive_execute: 61, 65
receive_execute: 46, 64
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-453 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-453
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 116, 77
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5832, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 5832, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 6, 0, 6
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 7, 0, 4
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8494, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 8494, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 20, 0, 8
execute_one loop: 0, 0, 28
cover_reset in execute_call
----- executor 3 write_call_output, size 3495, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 3495, flag collect 1
----- executor 3 cover number : 948, signal number : 549
----- completed 8
execute_call 0, 15, 0, 4
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 195
----- completed 9
execute_call 0, 87, 0, 14
execute_one loop: 0, 0, 101
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 191, 0, 0
execute_one loop: 0, 0, 191
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1425
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 539, signal number : 468
----- executor 0 executes write_coverage_signal cov->size 12528, flag collect 1
----- executor 0 cover number : 1702, signal number : 1736
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1205, signal number : 744
----- executor 0 executes write_coverage_signal cov->size 21489, flag collect 1
----- executor 0 cover number : 1404, signal number : 919
----- executor 0 executes write_coverage_signal cov->size 1665, flag collect 1
----- executor 0 cover number : 603, signal number : 605
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 21
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 0 cover number : 526, signal number : 495
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 62
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
-----executor 0 collect shmids 59
----- directly resend shmid 59
-----executor 0 collect shmids 61
----- directly resend shmid 61
----- executor 0 cover number : 1182, signal number : 806
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 64
----- executor 0 executes write_coverage_signal cov->size 29053, flag collect 1
----- executor 0 cover number : 1552, signal number : 1335
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 1
----- executor 0 cover number : 243, signal number : 82
----- executor 0 executes write_coverage_signal cov->size 11844, flag collect 1
----- executor 0 cover number : 1226, signal number : 1350
----- executor 0 executes write_coverage_signal cov->size 17997, flag collect 1
----- executor 0 cover number : 1159, signal number : 1217
----- executor 0 executes write_coverage_signal cov->size 5261, flag collect 1
----- executor 0 cover number : 981, signal number : 222
----- executor 0 executes write_coverage_signal cov->size 812, flag collect 1
----- executor 0 cover number : 396, signal number : 21
executor 0 server cover_cnt 28 output_pos_value 26451
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 50
----- directly resend shmid 50
-----executor 0 collect shmids 51
----- directly resend shmid 51
-----executor 0 collect shmids 52
----- directly resend shmid 52
-----executor 0 collect shmids 53
----- directly resend shmid 53
-----executor 0 collect shmids 55
----- directly resend shmid 55
-----executor 0 collect shmids 56
----- directly resend shmid 56
-----executor 0 collect shmids 57
----- directly resend shmid 57
execute_call 0, 156, 0, 0
execute_one loop: 0, 0, 156
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 157, 0, 0
execute_one loop: 0, 0, 157
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
-----executor 0 collect shmids 58
----- directly resend shmid 58
-----executor 0 collect shmids 60
----- directly resend shmid 60
-----executor 0 collect shmids 62
----- directly resend shmid 62
-----executor 0 collect shmids 64
----- directly resend shmid 64
-----executor 0 collect shmids 65
----- directly resend shmid 65
-----executor 0 collect shmids 66
----- directly resend shmid 66
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
-----executor 0 collect shmids 63
----- directly resend shmid 63
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
==23599==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.23651
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
==23651==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.23633
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2803, 0, 0
execute_one loop: 0, 0, 2803
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3151, 0
execute_one time: 2, 3151
----- executor 3 write_call_output, size 0, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 2804, 0, 0
execute_one loop: 0, 0, 2804
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 1260, signal number : 345
----- completed 16
execute_call 0, 80, 0, 12
execute_one loop: 0, 0, 92
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2573, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 2573, flag collect 1
----- executor 3 cover number : 739, signal number : 1
----- completed 19
execute_call 0, 15, 0, 3
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1278, write pid:1278
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 20
execute_call 0, 75, 0, 13
execute_one loop: 0, 0, 88
executor 3, execute_one inner time: 0, 3336, 0
execute_one time: 3, 3336
2023/04/02 01:12:46 for select break: 1
2023/04/02 01:12:46 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 65, signal number : 74
----- executor 2 cover number : 65, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 1 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 23588, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 23590, flag collect 1
----- executor 0 cover number : 501, signal number : 168
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 193, 3343, 0
before receive testcase: 0 0
----- executor 2 cover number : 1723, signal number : 2110
----- executor 2 executes write_coverage_signal cov->size 494, flag collect 1
----- executor 2 cover number : 99, signal number : 25
----- executor 2 executes write_coverage_signal cov->size 9535, flag collect 1
----- executor 0 cover number : 126, signal number : 26
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 151
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1723, signal number : 2110
----- executor 1 executes write_coverage_signal cov->size 494, flag collect 1
----- executor 1 cover number : 99, signal number : 25
----- executor 1 executes write_coverage_signal cov->size 4003, flag collect 1
----- executor 2 cover number : 350, signal number : 405
----- executor 2 executes write_coverage_signal cov->size 45, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 2 cover number : 66, signal number : 57
----- executor 2 executes write_coverage_signal cov->size 29364, flag collect 1
----- executor 1 cover number : 282, signal number : 309
----- executor 1 executes write_coverage_signal cov->size 4045, flag collect 1
----- executor 1 cover number : 342, signal number : 95
----- executor 1 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 1 cover number : 66, signal number : 57
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1452
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1921, signal number : 1439
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 539, signal number : 532
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 42
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1640, signal number : 1174
----- executor 1 executes write_coverage_signal cov->size 5982, flag collect 1
----- executor 1 cover number : 1093, signal number : 432
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 410, signal number : 194
----- executor 2 executes write_coverage_signal cov->size 7077, flag collect 1
----- executor 2 cover number : 950, signal number : 656
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 2058, signal number : 3304
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 1176, flag collect 1
----- executor 0 cover number : 497, signal number : 202
----- executor 0 executes write_coverage_signal cov->size 149, flag collect 1
----- executor 0 cover number : 34, signal number : 32
----- executor 0 executes write_coverage_signal cov->size 84, flag collect 1
----- executor 0 cover number : 34, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1267, signal number : 1286
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2230, signal number : 2214
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 68, flag collect 1
----- executor 2 cover number : 30, signal number : 14
----- executor 2 executes write_coverage_signal cov->size 1441, flag collect 1
----- executor 2 cover number : 334, signal number : 215
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 1210, flag collect 1
----- executor 2 cover number : 388, signal number : 199
----- executor 2 executes write_coverage_signal cov->size 3534, flag collect 1
----- executor 2 cover number : 810, signal number : 347
----- executor 0 cover number : 1205, signal number : 761
----- executor 0 executes write_coverage_signal cov->size 21489, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
==23633==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
----- executor 1 cover number : 2818, signal number : 3155
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 68, flag collect 1
----- executor 1 cover number : 30, signal number : 14
----- executor 1 executes write_coverage_signal cov->size 1368, flag collect 1
----- executor 1 cover number : 334, signal number : 215
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 2 cover number : 1204, signal number : 1280
----- executor 2 executes write_coverage_signal cov->size 17560, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 1326, flag collect 1
----- executor 1 cover number : 415, signal number : 245
----- executor 1 executes write_coverage_signal cov->size 3418, flag collect 1
----- executor 0 cover number : 1404, signal number : 1177
----- executor 0 executes write_coverage_signal cov->size 17282, flag collect 1
----- executor 1 cover number : 786, signal number : 362
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1594, signal number : 880
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 952, signal number : 1303
----- executor 0 executes write_coverage_signal cov->size 32449, flag collect 1
----- executor 1 cover number : 1757, signal number : 1676
----- executor 1 executes write_coverage_signal cov->size 2539, flag collect 1
----- executor 2 cover number : 2108, signal number : 1632
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 534, signal number : 53
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1618, signal number : 2605
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 56
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 0 cover number : 526, signal number : 423
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1799, signal number : 1226
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1789, signal number : 801
executor 2 server cover_cnt 21 output_pos_value 28727
----- executor 0 cover number : 142, signal number : 77
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 1
----- executor 0 cover number : 10, signal number : 12
----- executor 0 executes write_coverage_signal cov->size 806, flag collect 1
----- executor 0 cover number : 275, signal number : 126
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 23357, flag collect 1
----- executor 1 cover number : 2552, signal number : 1501
executor 1 server cover_cnt 21 output_pos_value 31719
----- executor 0 cover number : 1189, signal number : 1490
----- executor 0 executes write_coverage_signal cov->size 26393, flag collect 1
2023/04/02 01:12:46 for select break: 1
2023/04/02 01:12:46 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 104, 3418, 0
before receive testcase: 0 0
2023/04/02 01:12:46 for select break: 1
2023/04/02 01:12:46 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 126, 3419, 0
Node-0:/root/daemon-log.23677
----- executor 0 cover number : 1373, signal number : 1139
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
before receive testcase: 0 0
----- executor 0 cover number : 1182, signal number : 1141
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 0 cover number : 525, signal number : 179
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1754, signal number : 2416
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 1
----- executor 0 cover number : 243, signal number : 130
----- executor 0 executes write_coverage_signal cov->size 20556, flag collect 1
----- executor 0 cover number : 1248, signal number : 2328
----- executor 0 executes write_coverage_signal cov->size 30886, flag collect 1
----- executor 0 cover number : 1320, signal number : 2350
----- executor 0 executes write_coverage_signal cov->size 7247, flag collect 1
----- executor 0 cover number : 1155, signal number : 708
----- executor 0 executes write_coverage_signal cov->size 7329, flag collect 1
----- executor 0 cover number : 1155, signal number : 510
----- executor 0 executes write_coverage_signal cov->size 6363, flag collect 1
----- executor 0 cover number : 741, signal number : 309
executor 0 server cover_cnt 92 output_pos_value 77902
2023/04/02 01:12:46 for select break: 1
2023/04/02 01:12:46 --------- executor 0 receive reply, reply.done 1
2023/04/02 01:12:46 wg wait finish
2023/04/02 01:12:46 ------ all executors finish execution
2023/04/02 01:12:46 exec time: 3528
2023/04/02 01:12:46 ----- PS len: 4
2023/04/02 01:12:46 [CLIENT] executor 3 has 20 replies
2023/04/02 01:12:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 549 signal and 948 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 195 signal and 601 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 345 signal and 1260 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 1 signal and 739 cover from executor 3
2023/04/02 01:12:46 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:12:46 [SERVER] executor 1 has 21 replies
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 74 signal and 65 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 2110 signal and 1723 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 25 signal and 99 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 309 signal and 282 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 95 signal and 342 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 57 signal and 66 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 1174 signal and 1640 cover from userspace component
2023/04/02 01:12:46 [SERVER] executor 2 has 21 replies
time breakdown 0: 110, 3464, 0
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
before receive testcase: 0 0
2023/04/02 01:12:46 [SERVER] executor 0 has 92 replies
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1425 signal and 1141 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 468 signal and 539 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1736 signal and 1702 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 744 signal and 1205 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 919 signal and 1404 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 605 signal and 603 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 21 signal and 27 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 432 signal and 1093 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 1286 signal and 1267 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 3155 signal and 2818 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 14 signal and 30 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 215 signal and 334 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 54 signal and 51 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 2110 signal and 1723 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 25 signal and 99 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 245 signal and 415 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 495 signal and 526 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 62 signal and 142 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 3 signal and 51 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 362 signal and 786 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 405 signal and 350 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 1676 signal and 1757 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 57 signal and 66 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 53 signal and 534 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 1439 signal and 1921 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 194 signal and 410 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 1226 signal and 1799 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 1 receive 1501 signal and 2552 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 656 signal and 950 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 2214 signal and 2230 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 806 signal and 1182 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 14 signal and 30 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 215 signal and 334 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 64 signal and 523 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 199 signal and 388 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 347 signal and 810 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1335 signal and 1552 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 82 signal and 243 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1350 signal and 1226 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 1280 signal and 1204 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1217 signal and 1159 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 880 signal and 1594 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 222 signal and 981 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 1632 signal and 2108 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 2 receive 801 signal and 1789 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 21 signal and 396 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 168 signal and 501 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 26 signal and 126 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1 signal and 9 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 151 signal and 286 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1452 signal and 1141 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 532 signal and 539 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 42 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 3304 signal and 2058 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 202 signal and 497 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 32 signal and 34 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1 signal and 34 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 761 signal and 1205 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1177 signal and 1404 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1303 signal and 952 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 2605 signal and 1618 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 18 signal and 27 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 4 signal and 13 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 56 signal and 51 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 423 signal and 526 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 77 signal and 142 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 12 signal and 10 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 126 signal and 275 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 7 signal and 51 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1490 signal and 1189 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1139 signal and 1373 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 1141 signal and 1182 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 179 signal and 525 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 2416 signal and 1754 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 130 signal and 243 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 2328 signal and 1248 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 2350 signal and 1320 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 708 signal and 1155 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 510 signal and 1155 cover from userspace component
2023/04/02 01:12:46 ------- fuzzer executor 0 receive 309 signal and 741 cover from userspace component
2023/04/02 01:12:46 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:12:46 failure smash: true false
2023/04/02 01:12:46 HasCrashFail: true, .HasNetFail: false
2023/04/02 01:12:46 disable threaded and collide
2023/04/02 01:12:46 send to channel: true, false
2023/04/02 01:12:46 prog length: 6
2023/04/02 01:12:46 prog length: 20
2023/04/02 01:12:46 HasCrashFail:true HasNetFail:false
01:12:46 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
syz_failure_sync(0x0, 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
syz_failure_sync(0x1, 0x3)
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-453
remove dir time 25
-----finish removing dir
receive_execute: 84, 49
receive_execute: 38, 50
receive_execute: 82, 49
mkdir time 24
executor 3 create dir /root/glusterfs-client/dfs-0-454 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-454
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 147, 56
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5828, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 5828, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 4, 0, 5
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 5755, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 5755, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 7, 0, 4
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 8479, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 8479, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 17, 0, 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 3480, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 3480, flag collect 1
----- executor 3 cover number : 942, signal number : 548
----- completed 8
execute_call 0, 19, 0, 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
execute_call 0, 145, 0, 0
execute_one loop: 0, 0, 145
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 1
----- executor 0 cover number : 34, signal number : 36
----- executor 3 cover number : 601, signal number : 196
----- completed 9
execute_call 0, 67, 0, 9
execute_one loop: 0, 0, 76
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1421
----- executor 0 executes write_coverage_signal cov->size 5622, flag collect 1
----- executor 0 cover number : 1387, signal number : 1416
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 13, signal number : 13
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 932, signal number : 704
----- executor 0 executes write_coverage_signal cov->size 634, flag collect 1
----- executor 0 cover number : 280, signal number : 161
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 55
executor 0 server cover_cnt 14 output_pos_value 7799
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 50
----- directly resend shmid 50
-----executor 0 collect shmids 51
----- directly resend shmid 51
-----executor 0 collect shmids 53
----- directly resend shmid 53
execute_call 0, 97, 0, 0
execute_one loop: 0, 0, 97
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 97, 0, 0
execute_one loop: 0, 0, 98
cover_reset in execute_call
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
----- executor 3 write_call_output, size 32765, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 15
execute_call 0, 68, 0, 7
execute_one loop: 0, 0, 75
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 76, 0, 0
execute_one loop: 0, 0, 76
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
==23677==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
execute_call 0, 2855, 0, 0
execute_one loop: 0, 0, 2855
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3174, 1
execute_one time: 3, 3175
----- executor 3 write_call_output, size 0, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 2856, 0, 0
execute_one loop: 0, 0, 2856
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12621, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 12621, flag collect 1
----- executor 3 cover number : 1329, signal number : 317
----- completed 19
execute_call 0, 21, 0, 3
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1279, write pid:1279
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 46
----- completed 20
execute_call 0, 62, 0, 10
execute_one loop: 0, 0, 72
executor 3, execute_one inner time: 0, 3265, 0
execute_one time: 2, 3265
2023/04/02 01:12:49 for select break: 1
2023/04/02 01:12:49 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 1 cover number : 7, signal number : 7
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
time breakdown 3: 203, 3270, 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 18407, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 2 cover number : 7, signal number : 7
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 18407, flag collect 1
----- executor 0 cover number : 525, signal number : 423
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1763, signal number : 2180
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 62
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 202
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1763, signal number : 2180
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 539, signal number : 446
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1248
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 1200, flag collect 1
----- executor 0 cover number : 435, signal number : 118
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 0 cover number : 501, signal number : 85
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
Node-0:/root/daemon-log.23754
----- executor 2 cover number : 280, signal number : 366
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 310, signal number : 384
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 2772, flag collect 1
----- executor 0 cover number : 414, signal number : 232
----- executor 0 executes write_coverage_signal cov->size 75, flag collect 1
----- executor 0 cover number : 57, signal number : 13
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 26
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 7924, flag collect 1
----- executor 1 cover number : 287, signal number : 95
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1578, signal number : 1364
----- executor 0 executes write_coverage_signal cov->size 218, flag collect 1
----- executor 0 cover number : 109, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 228, flag collect 1
----- executor 0 cover number : 119, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1325, flag collect 1
----- executor 0 cover number : 600, signal number : 141
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 576, signal number : 385
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 932, signal number : 487
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 410, signal number : 95
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1864, signal number : 1666
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 41
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 144
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 281, signal number : 90
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1270, signal number : 1268
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 25
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 9, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 439, flag collect 1
----- executor 0 cover number : 249, signal number : 33
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
executor 0 server cover_cnt 71 output_pos_value 27533
----- executor 1 cover number : 2235, signal number : 2252
----- executor 1 executes write_coverage_signal cov->size 396, flag collect 1
----- executor 1 cover number : 31, signal number : 17
----- executor 1 executes write_coverage_signal cov->size 911, flag collect 1
----- executor 1 cover number : 280, signal number : 204
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
2023/04/02 01:12:49 for select break: 1
2023/04/02 01:12:49 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 88, 3342, 0
before receive testcase: 0 1
----- executor 1 cover number : 1362, signal number : 1903
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1420, signal number : 883
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 574, signal number : 381
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 576, signal number : 97
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1237, signal number : 1384
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1473, signal number : 1425
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1050, signal number : 890
----- executor 1 executes write_coverage_signal cov->size 22447, flag collect 1
----- executor 2 cover number : 2455, signal number : 2516
----- executor 2 executes write_coverage_signal cov->size 396, flag collect 1
----- executor 2 cover number : 31, signal number : 14
----- executor 2 executes write_coverage_signal cov->size 913, flag collect 1
----- executor 2 cover number : 280, signal number : 206
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1304, signal number : 1123
----- executor 1 executes write_coverage_signal cov->size 22177, flag collect 1
----- executor 2 cover number : 1481, signal number : 1893
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1303, signal number : 695
----- executor 2 cover number : 1221, signal number : 717
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1524, signal number : 1620
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1192, signal number : 1416
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1187, signal number : 931
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1066, signal number : 872
----- executor 2 executes write_coverage_signal cov->size 22277, flag collect 1
----- executor 1 cover number : 2078, signal number : 1785
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1304, signal number : 1046
----- executor 2 executes write_coverage_signal cov->size 22184, flag collect 1
----- executor 1 cover number : 1826, signal number : 1046
executor 1 server cover_cnt 23 output_pos_value 40690
2023/04/02 01:12:49 for select break: 1
2023/04/02 01:12:49 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 131, 3441, 0
before receive testcase: 0 0
----- executor 2 cover number : 1303, signal number : 624
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1656, signal number : 1623
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1369, signal number : 745
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1758, signal number : 1385
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2810, signal number : 1962
executor 2 server cover_cnt 23 output_pos_value 42530
2023/04/02 01:12:49 for select break: 1
2023/04/02 01:12:49 --------- executor 2 receive reply, reply.done 1
2023/04/02 01:12:49 wg wait finish
2023/04/02 01:12:49 ------ all executors finish execution
2023/04/02 01:12:49 exec time: 3537
2023/04/02 01:12:49 ----- PS len: 4
2023/04/02 01:12:49 [CLIENT] executor 3 has 20 replies
2023/04/02 01:12:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:49 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:12:49 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:12:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:49 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:12:49 fuzzer receive 548 signal and 942 cover from executor 3
2023/04/02 01:12:49 fuzzer receive 196 signal and 601 cover from executor 3
2023/04/02 01:12:49 [SERVER] executor 2 has 23 replies
2023/04/02 01:12:49 [SERVER] executor 1 has 23 replies
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 7 signal and 7 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 2180 signal and 1763 cover from userspace component
2023/04/02 01:12:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 384 signal and 310 cover from userspace component
2023/04/02 01:12:49 [SERVER] executor 0 has 71 replies
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 95 signal and 287 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 36 signal and 34 cover from userspace component
2023/04/02 01:12:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 1421 signal and 1141 cover from userspace component
2023/04/02 01:12:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:49 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 7 signal and 7 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 1416 signal and 1387 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 13 signal and 13 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 2180 signal and 1763 cover from userspace component
time breakdown 2: 133, 3487, 0
before receive testcase: 0 1
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 704 signal and 932 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 161 signal and 280 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 55 signal and 51 cover from userspace component
2023/04/02 01:12:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 423 signal and 525 cover from userspace component
2023/04/02 01:12:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 62 signal and 142 cover from userspace component
2023/04/02 01:12:49 fuzzer receive 317 signal and 1329 cover from executor 3
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/04/02 01:12:49 fuzzer receive 46 signal and 601 cover from executor 3
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 366 signal and 280 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 90 signal and 281 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 202 signal and 286 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 446 signal and 539 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 385 signal and 576 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 95 signal and 410 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 1248 signal and 1141 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 118 signal and 435 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 85 signal and 501 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 1268 signal and 1270 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 2252 signal and 2235 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 17 signal and 31 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 204 signal and 280 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 1903 signal and 1362 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 883 signal and 1420 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 1384 signal and 1237 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 890 signal and 1050 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 1123 signal and 1304 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 695 signal and 1303 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 381 signal and 574 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 1620 signal and 1524 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 97 signal and 576 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 931 signal and 1187 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 1425 signal and 1473 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 1785 signal and 2078 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 11 signal and 126 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 1 signal and 10 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 1 signal and 2 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 2516 signal and 2455 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 1 receive 1046 signal and 1826 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 14 signal and 31 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 206 signal and 280 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 1893 signal and 1481 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 232 signal and 414 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 717 signal and 1221 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 13 signal and 57 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 1416 signal and 1192 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 872 signal and 1066 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 1046 signal and 1304 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 26 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 624 signal and 1303 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 1623 signal and 1656 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 745 signal and 1369 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 1385 signal and 1758 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 2 receive 1962 signal and 2810 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 1364 signal and 1578 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 3 signal and 109 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 8 signal and 119 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 141 signal and 600 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 487 signal and 932 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 1666 signal and 1864 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 4 signal and 8 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 4 signal and 7 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 17 signal and 27 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 3 signal and 13 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 41 signal and 51 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 144 signal and 523 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 25 signal and 142 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 5 signal and 51 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 2 signal and 9 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 33 signal and 249 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:49 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:12:49 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:12:49 disable threaded and collide
2023/04/02 01:12:49 prog length: 6
2023/04/02 01:12:49 prog length: 20
2023/04/02 01:12:49 HasCrashFail:true HasNetFail:false
01:12:49 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
syz_failure_sync(0x0, 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
syz_failure_sync(0x1, 0x3)
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-454
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 29
-----finish removing dir
mkdir time 18
executor 3 create dir /root/glusterfs-client/dfs-0-455 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-455
receive_execute: 44, 47
receive_execute: 188, 47
receive_execute: 89, 47
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 253, 50
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5835, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 5835, flag collect 1
----- executor 3 cover number : 951, signal number : 1152
----- completed 4
execute_call 0, 3, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5761, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 5761, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8486, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 8486, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 11, 0, 3
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 3468, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 3468, flag collect 1
----- executor 3 cover number : 942, signal number : 548
----- completed 8
execute_call 0, 13, 0, 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 196
----- completed 9
execute_call 0, 75, 0, 15
execute_one loop: 0, 0, 90
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 139, 0, 0
execute_one loop: 0, 0, 139
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 751, signal number : 930
----- executor 0 executes write_coverage_signal cov->size 41, flag collect 1
----- executor 0 cover number : 35, signal number : 37
----- executor 0 executes write_coverage_signal cov->size 4854, flag collect 1
----- executor 0 cover number : 1485, signal number : 1501
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 57
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 499
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 68
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1182, signal number : 862
----- executor 0 executes write_coverage_signal cov->size 6300, flag collect 1
----- executor 0 cover number : 1135, signal number : 526
executor 0 server cover_cnt 14 output_pos_value 9880
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
execute_call 0, 111, 0, 0
execute_one loop: 0, 0, 111
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 111, 0, 0
execute_one loop: 0, 0, 111
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 15
execute_call 0, 73, 0, 18
execute_one loop: 0, 0, 91
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 90, 0, 0
execute_one loop: 0, 0, 90
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
==23754==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.23806
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
==23806==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.23789
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2680, 0, 0
execute_one loop: 0, 0, 2680
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3021, 0
execute_one time: 2, 3021
----- executor 3 write_call_output, size 0, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 2680, 0, 0
execute_one loop: 0, 0, 2680
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12640, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 12640, flag collect 1
----- executor 3 cover number : 1327, signal number : 313
----- completed 19
execute_call 0, 36, 0, 8
execute_one loop: 0, 0, 44
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1281, write pid:1281
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 46
----- completed 20
execute_call 0, 67, 0, 8
execute_one loop: 0, 0, 75
executor 3, execute_one inner time: 1, 3136, 0
execute_one time: 2, 3137
2023/04/02 01:12:53 for select break: 1
2023/04/02 01:12:53 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 65, signal number : 74
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 2 cover number : 65, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 23909, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 23911, flag collect 1
----- executor 0 cover number : 501, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 303, 3140, 0
before receive testcase: 0 0
----- executor 1 cover number : 1758, signal number : 2152
----- executor 1 executes write_coverage_signal cov->size 2136, flag collect 1
----- executor 1 cover number : 202, signal number : 213
----- executor 1 executes write_coverage_signal cov->size 707, flag collect 1
----- executor 1 cover number : 142, signal number : 101
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1758, signal number : 2152
----- executor 2 executes write_coverage_signal cov->size 2318, flag collect 1
----- executor 2 cover number : 290, signal number : 313
----- executor 2 executes write_coverage_signal cov->size 651, flag collect 1
----- executor 2 cover number : 33, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 222, flag collect 1
----- executor 0 cover number : 113, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 919, flag collect 1
----- executor 0 cover number : 387, signal number : 202
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 576, signal number : 371
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 614, signal number : 382
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 751, signal number : 986
----- executor 0 executes write_coverage_signal cov->size 256, flag collect 1
----- executor 0 cover number : 139, signal number : 26
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 671, signal number : 120
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 576, signal number : 93
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1819, signal number : 1149
----- executor 0 executes write_coverage_signal cov->size 11978, flag collect 1
----- executor 1 cover number : 1124, signal number : 1008
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1683, signal number : 1231
----- executor 0 executes write_coverage_signal cov->size 1176, flag collect 1
----- executor 0 cover number : 497, signal number : 142
----- executor 0 executes write_coverage_signal cov->size 48, flag collect 1
----- executor 0 cover number : 34, signal number : 26
----- executor 0 executes write_coverage_signal cov->size 108, flag collect 1
----- executor 0 cover number : 34, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 2389, flag collect 1
----- executor 0 cover number : 758, signal number : 205
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1130, signal number : 1008
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1115, signal number : 465
----- executor 0 executes write_coverage_signal cov->size 11748, flag collect 1
----- executor 1 cover number : 1581, signal number : 1581
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 201, flag collect 1
----- executor 1 cover number : 31, signal number : 15
----- executor 1 executes write_coverage_signal cov->size 1686, flag collect 1
----- executor 1 cover number : 469, signal number : 277
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 955, signal number : 1090
----- executor 0 executes write_coverage_signal cov->size 10718, flag collect 1
----- executor 2 cover number : 2276, signal number : 2464
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 198, flag collect 1
----- executor 2 cover number : 31, signal number : 15
----- executor 2 executes write_coverage_signal cov->size 2156, flag collect 1
----- executor 2 cover number : 469, signal number : 286
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1460, signal number : 1397
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 46
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 0 cover number : 526, signal number : 357
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 559, signal number : 886
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 616, signal number : 590
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 71
----- executor 0 executes write_coverage_signal cov->size 45, flag collect 1
----- executor 0 cover number : 10, signal number : 10
----- executor 0 executes write_coverage_signal cov->size 718, flag collect 1
----- executor 0 cover number : 272, signal number : 76
----- executor 0 executes write_coverage_signal cov->size 7045, flag collect 1
----- executor 0 cover number : 777, signal number : 628
----- executor 0 executes write_coverage_signal cov->size 6166, flag collect 1
----- executor 0 cover number : 856, signal number : 342
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 559, signal number : 558
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 559, signal number : 282
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1182, signal number : 985
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 699, signal number : 875
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1315, signal number : 1698
----- executor 0 executes write_coverage_signal cov->size 13570, flag collect 1
----- executor 1 cover number : 595, signal number : 758
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1226, signal number : 1223
----- executor 0 executes write_coverage_signal cov->size 15764, flag collect 1
----- executor 2 cover number : 595, signal number : 560
----- executor 2 executes write_coverage_signal cov->size 5270, flag collect 1
----- executor 2 cover number : 984, signal number : 787
----- executor 2 executes write_coverage_signal cov->size 5276, flag collect 1
----- executor 2 cover number : 983, signal number : 132
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1264, signal number : 1287
----- executor 0 executes write_coverage_signal cov->size 7220, flag collect 1
----- executor 0 cover number : 1155, signal number : 399
----- executor 0 executes write_coverage_signal cov->size 7162, flag collect 1
----- executor 0 cover number : 1146, signal number : 283
executor 0 server cover_cnt 70 output_pos_value 47022
----- executor 1 cover number : 624, signal number : 594
----- executor 1 executes write_coverage_signal cov->size 5269, flag collect 1
2023/04/02 01:12:53 for select break: 1
----- executor 1 cover number : 983, signal number : 760
----- executor 1 executes write_coverage_signal cov->size 5275, flag collect 1
2023/04/02 01:12:53 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 1104, signal number : 1129
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 982, signal number : 103
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 235, 3204, 0
before receive testcase: 0 1
----- executor 2 cover number : 1009, signal number : 433
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1026, signal number : 889
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1433, signal number : 1301
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1104, signal number : 510
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1933, signal number : 1131
executor 2 server cover_cnt 24 output_pos_value 31800
2023/04/02 01:12:53 for select break: 1
2023/04/02 01:12:53 --------- executor 2 receive reply, reply.done 1
----- executor 1 cover number : 1598, signal number : 901
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 2: 91, 3225, 1
before receive testcase: 0 0
----- executor 1 cover number : 2291, signal number : 1470
executor 1 server cover_cnt 24 output_pos_value 29886
2023/04/02 01:12:53 for select break: 1
2023/04/02 01:12:53 --------- executor 1 receive reply, reply.done 1
2023/04/02 01:12:53 wg wait finish
2023/04/02 01:12:53 ------ all executors finish execution
2023/04/02 01:12:53 exec time: 3287
2023/04/02 01:12:53 ----- PS len: 4
2023/04/02 01:12:53 [CLIENT] executor 3 has 20 replies
2023/04/02 01:12:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 1152 signal and 951 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:53 [SERVER] executor 1 has 24 replies
2023/04/02 01:12:53 [SERVER] executor 0 has 70 replies
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 7 signal and 7 cover from userspace component
2023/04/02 01:12:53 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 930 signal and 751 cover from userspace component
2023/04/02 01:12:53 [SERVER] executor 2 has 24 replies
2023/04/02 01:12:53 fuzzer receive 548 signal and 942 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 196 signal and 601 cover from executor 3
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 2152 signal and 1758 cover from userspace component
2023/04/02 01:12:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 313 signal and 290 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 1 signal and 33 cover from userspace component
2023/04/02 01:12:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:53 fuzzer receive 313 signal and 1327 cover from executor 3
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 74 signal and 65 cover from userspace component
2023/04/02 01:12:53 fuzzer receive 46 signal and 601 cover from executor 3
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 37 signal and 35 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 1501 signal and 1485 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 57 signal and 51 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 499 signal and 523 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 68 signal and 142 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 6 signal and 10 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 862 signal and 1182 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 526 signal and 1135 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 54 signal and 501 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 4 signal and 126 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 9 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 382 signal and 614 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 93 signal and 576 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 1008 signal and 1130 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 2464 signal and 2276 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 15 signal and 31 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 2152 signal and 1758 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 2 signal and 113 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 213 signal and 202 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 202 signal and 387 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 101 signal and 142 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 986 signal and 751 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 286 signal and 469 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 371 signal and 576 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 120 signal and 671 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 1008 signal and 1124 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 886 signal and 559 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 558 signal and 559 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 1581 signal and 1581 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 26 signal and 139 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 15 signal and 31 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 277 signal and 469 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 875 signal and 699 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 560 signal and 595 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 590 signal and 616 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 282 signal and 559 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 787 signal and 984 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 132 signal and 983 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 1129 signal and 1104 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 433 signal and 1009 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 758 signal and 595 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 594 signal and 624 cover from userspace component
time breakdown 1: 136, 3241, 0
before receive testcase: 0 0
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 760 signal and 983 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 1301 signal and 1433 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 1149 signal and 1819 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 1231 signal and 1683 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 103 signal and 982 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 889 signal and 1026 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 2 receive 1131 signal and 1933 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 142 signal and 497 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 26 signal and 34 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 3 signal and 34 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 510 signal and 1104 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 205 signal and 758 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 465 signal and 1115 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 1090 signal and 955 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 901 signal and 1598 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 1 receive 1470 signal and 2291 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 1397 signal and 1460 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 46 signal and 51 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 357 signal and 526 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 71 signal and 142 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 10 signal and 10 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 76 signal and 272 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 628 signal and 777 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 342 signal and 856 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 985 signal and 1182 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 1698 signal and 1315 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 1223 signal and 1226 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 1287 signal and 1264 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 399 signal and 1155 cover from userspace component
2023/04/02 01:12:53 ------- fuzzer executor 0 receive 283 signal and 1146 cover from userspace component
==23789==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
2023/04/02 01:12:53 fsMds: [map[] map[] map[] map[]]
Node-0:/root/daemon-log.23828
2023/04/02 01:12:53 failure smash: true false
2023/04/02 01:12:53 HasCrashFail: true, .HasNetFail: false
2023/04/02 01:12:53 send to channel: true, false
2023/04/02 01:12:53 disable threaded and collide
2023/04/02 01:12:53 prog length: 6
2023/04/02 01:12:53 prog length: 20
2023/04/02 01:12:53 HasCrashFail:true HasNetFail:false
01:12:53 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
syz_failure_sync(0x0, 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
syz_failure_sync(0x1, 0x3)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-455
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 54
-----finish removing dir
receive_execute: 83, 84
mkdir time 29
executor 3 create dir /root/glusterfs-client/dfs-0-456 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-456
receive_execute: 69, 84
receive_execute: 106, 83
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 4, 0
output_pos: 1, output_pos_value 1
receive_execute: 167, 93
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5814, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 5814, flag collect 1
----- executor 3 cover number : 950, signal number : 1149
----- completed 4
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 1
----- executor 3 cover number : 919, signal number : 13
----- completed 5
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8474, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 8474, flag collect 1
----- executor 3 cover number : 1136, signal number : 308
----- completed 7
execute_call 0, 18, 0, 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 3470, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 3470, flag collect 1
----- executor 3 cover number : 941, signal number : 548
----- completed 8
execute_call 0, 13, 0, 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 196
----- completed 9
execute_call 0, 86, 0, 7
execute_one loop: 0, 0, 93
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 148, 0, 0
execute_one loop: 0, 0, 148
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1425
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 1
----- executor 0 cover number : 34, signal number : 32
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 1494, flag collect 1
----- executor 0 cover number : 635, signal number : 672
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 0 cover number : 349, signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 449, signal number : 492
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 502
----- executor 0 executes write_coverage_signal cov->size 168, flag collect 1
----- executor 0 cover number : 126, signal number : 52
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 6
executor 0 server cover_cnt 17 output_pos_value 6961
execute_call 0, 78, 0, 0
execute_one loop: 0, 0, 78
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 78, 0, 0
execute_one loop: 0, 0, 78
cover_reset in execute_call
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
-----executor 0 collect shmids 50
----- directly resend shmid 50
-----executor 0 collect shmids 51
----- directly resend shmid 51
-----executor 0 collect shmids 52
----- directly resend shmid 52
-----executor 0 collect shmids 53
----- directly resend shmid 53
-----executor 0 collect shmids 54
----- directly resend shmid 54
-----executor 0 collect shmids 55
----- directly resend shmid 55
-----executor 0 collect shmids 56
----- directly resend shmid 56
-----executor 0 collect shmids 57
----- directly resend shmid 57
----- executor 3 write_call_output, size 32765, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 44
----- completed 15
execute_call 0, 73, 0, 17
execute_one loop: 0, 0, 90
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 90, 0, 0
execute_one loop: 0, 0, 90
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
==23828==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2722, 0, 0
execute_one loop: 0, 0, 2722
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3038, 0
execute_one time: 4, 3038
----- executor 3 write_call_output, size 0, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 2722, 0, 0
execute_one loop: 0, 0, 2722
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12613, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 12613, flag collect 1
----- executor 3 cover number : 1326, signal number : 313
----- completed 19
execute_call 0, 31, 0, 2
execute_one loop: 0, 0, 33
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1282, write pid:1282
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 46
----- completed 20
execute_call 0, 72, 0, 15
execute_one loop: 0, 0, 87
executor 3, execute_one inner time: 0, 3151, 0
execute_one time: 1, 3152
2023/04/02 01:12:56 for select break: 1
2023/04/02 01:12:56 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 65, signal number : 74
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
executor 2 write_server_output
----- executor 1 executes write_coverage_signal cov->size 18776, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 2 cover number : 65, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 18776, flag collect 1
----- executor 0 cover number : 501, signal number : 36
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 260, 3157, 0
before receive testcase: 0 0
----- executor 1 cover number : 1730, signal number : 2106
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 66, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 116, signal number : 104
----- executor 1 executes write_coverage_signal cov->size 126, flag collect 1
----- executor 1 cover number : 66, signal number : 57
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1730, signal number : 2106
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 2 cover number : 116, signal number : 105
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 1
----- executor 2 cover number : 66, signal number : 57
----- executor 2 executes write_coverage_signal cov->size 4186, flag collect 1
----- executor 0 cover number : 126, signal number : 22
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 1
----- executor 0 cover number : 10, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 209
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 408, signal number : 224
----- executor 2 executes write_coverage_signal cov->size 13678, flag collect 1
----- executor 2 cover number : 576, signal number : 69
----- executor 2 executes write_coverage_signal cov->size 22029, flag collect 1
----- executor 1 cover number : 410, signal number : 229
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1218
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1672, signal number : 1847
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 879, flag collect 1
----- executor 2 cover number : 278, signal number : 173
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 1740, flag collect 1
----- executor 2 cover number : 543, signal number : 296
----- executor 2 executes write_coverage_signal cov->size 2938, flag collect 1
----- executor 2 cover number : 640, signal number : 234
----- executor 2 executes write_coverage_signal cov->size 28599, flag collect 1
----- executor 1 cover number : 408, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 539, signal number : 463
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 31
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1151, signal number : 1238
----- executor 2 executes write_coverage_signal cov->size 7015, flag collect 1
----- executor 1 cover number : 2004, signal number : 2304
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 870, flag collect 1
----- executor 1 cover number : 278, signal number : 175
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1328, flag collect 1
----- executor 2 cover number : 859, signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 415, signal number : 226
----- executor 1 executes write_coverage_signal cov->size 3350, flag collect 1
----- executor 1 cover number : 749, signal number : 308
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 2023, signal number : 2173
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 1111, flag collect 1
----- executor 0 cover number : 497, signal number : 194
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 0 cover number : 349, signal number : 138
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2554, signal number : 1918
----- executor 2 executes write_coverage_signal cov->size 31606, flag collect 1
----- executor 1 cover number : 1194, signal number : 1402
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 449, signal number : 537
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 44
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 2 cover number : 2315, signal number : 751
executor 2 server cover_cnt 19 output_pos_value 22295
----- executor 0 cover number : 523, signal number : 304
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 928, signal number : 257
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
2023/04/02 01:12:56 for select break: 1
2023/04/02 01:12:56 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 167, 3203, 0
before receive testcase: 0 0
----- executor 0 cover number : 142, signal number : 58
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 499, flag collect 1
----- executor 0 cover number : 248, signal number : 37
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 450, flag collect 1
----- executor 0 cover number : 154, signal number : 14
executor 0 server cover_cnt 70 output_pos_value 22443
----- executor 1 cover number : 1926, signal number : 1276
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
2023/04/02 01:12:56 for select break: 1
2023/04/02 01:12:56 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 190, 3208, 0
before receive testcase: 0 0
----- executor 1 cover number : 2109, signal number : 1180
executor 1 server cover_cnt 19 output_pos_value 22273
2023/04/02 01:12:56 for select break: 1
2023/04/02 01:12:56 --------- executor 1 receive reply, reply.done 1
2023/04/02 01:12:56 wg wait finish
2023/04/02 01:12:56 ------ all executors finish execution
2023/04/02 01:12:56 exec time: 3298
2023/04/02 01:12:56 ----- PS len: 4
2023/04/02 01:12:56 [SERVER] executor 1 has 19 replies
2023/04/02 01:12:56 [SERVER] executor 2 has 19 replies
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 74 signal and 65 cover from userspace component
2023/04/02 01:12:56 [CLIENT] executor 3 has 20 replies
2023/04/02 01:12:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 1149 signal and 950 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 13 signal and 919 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 308 signal and 1136 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 548 signal and 941 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 196 signal and 600 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 44 signal and 600 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 313 signal and 1326 cover from executor 3
2023/04/02 01:12:56 fuzzer receive 46 signal and 600 cover from executor 3
2023/04/02 01:12:56 [SERVER] executor 0 has 70 replies
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 1425 signal and 1141 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 32 signal and 34 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 672 signal and 635 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 239 signal and 349 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 2106 signal and 1730 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 3 signal and 66 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 105 signal and 116 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 57 signal and 66 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 492 signal and 449 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 8 signal and 8 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 224 signal and 408 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 2106 signal and 1730 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 3 signal and 66 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 104 signal and 116 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 54 signal and 51 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 502 signal and 523 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 52 signal and 126 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 6 signal and 7 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 36 signal and 501 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 22 signal and 126 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 7 signal and 10 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 209 signal and 286 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 69 signal and 576 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 57 signal and 66 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 229 signal and 410 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 1218 signal and 1141 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 463 signal and 539 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 31 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 0 signal and 408 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 1847 signal and 1672 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 173 signal and 278 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 2304 signal and 2004 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 175 signal and 278 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 296 signal and 543 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 234 signal and 640 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 1238 signal and 1151 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 54 signal and 859 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 226 signal and 415 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 308 signal and 749 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 1918 signal and 2554 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 2 receive 751 signal and 2315 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 1402 signal and 1194 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 257 signal and 928 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 2173 signal and 2023 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 2 signal and 3 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 194 signal and 497 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 138 signal and 349 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 537 signal and 449 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 5 signal and 8 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 4 signal and 7 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 17 signal and 27 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 3 signal and 13 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 44 signal and 51 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 304 signal and 523 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 58 signal and 142 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 6 signal and 9 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 37 signal and 248 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 0 receive 14 signal and 154 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 1276 signal and 1926 cover from userspace component
2023/04/02 01:12:56 ------- fuzzer executor 1 receive 1180 signal and 2109 cover from userspace component
time breakdown 1: 153, 3215, 0
before receive testcase: 0 0
2023/04/02 01:12:56 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:12:56 disable threaded and collide
2023/04/02 01:12:56 prog length: 6
2023/04/02 01:12:56 prog length: 20
2023/04/02 01:12:56 HasCrashFail:true HasNetFail:false
01:12:56 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
syz_failure_sync(0x0, 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
syz_failure_sync(0x1, 0x3)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-456
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 20
-----finish removing dir
mkdir time 19
executor 3 create dir /root/glusterfs-client/dfs-0-457 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-457
receive_execute: 29, 41
receive_execute: 17, 41
receive_execute: 24, 41
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 66, 51
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5832, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 5832, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
Node-0:/root/daemon-log.23897
----- executor 3 write_call_output, size 8488, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 8488, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 14, 0, 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 3470, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 3470, flag collect 1
----- executor 3 cover number : 942, signal number : 548
----- completed 8
execute_call 0, 9, 0, 3
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 196
----- completed 9
execute_call 0, 67, 0, 8
execute_one loop: 0, 0, 75
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 127, 0, 0
execute_one loop: 0, 0, 127
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 114, flag collect 1
----- executor 0 cover number : 63, signal number : 75
----- executor 0 executes write_coverage_signal cov->size 2808, flag collect 1
----- executor 0 cover number : 414, signal number : 462
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1982, signal number : 2368
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 0 cover number : 530, signal number : 440
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 77
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1001, signal number : 570
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 1
executor 0 server cover_cnt 12 output_pos_value 8371
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
execute_call 0, 66, 0, 0
execute_one loop: 0, 0, 66
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 66, 0, 0
execute_one loop: 0, 0, 66
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 15
execute_call 0, 85, 0, 5
execute_one loop: 0, 0, 90
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 90, 0, 0
execute_one loop: 0, 0, 90
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
==23897==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 2852, 0, 0
execute_one loop: 0, 0, 2852
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_call 0, 2852, 0, 0
execute_one loop: 0, 0, 2852
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3135, 0
execute_one time: 2, 3136
----- executor 3 write_call_output, size 12631, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 12631, flag collect 1
----- executor 3 cover number : 1327, signal number : 313
----- completed 19
execute_call 0, 21, 0, 3
execute_one loop: 0, 0, 24
cover_reset in execute_call
Node-0:/root/daemon-log.23953
----- executor 3 write_call_output, size 32765, pid 1284, write pid:1284
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 46
----- completed 20
execute_call 0, 79, 0, 10
execute_one loop: 0, 0, 89
executor 3, execute_one inner time: 1, 3240, 0
execute_one time: 1, 3241
2023/04/02 01:12:59 for select break: 1
2023/04/02 01:12:59 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1482, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1510, flag collect 1
----- executor 2 cover number : 280, signal number : 318
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 280, signal number : 318
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 50
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 117, 3245, 0
before receive testcase: 0 0
----- executor 0 cover number : 126, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 206
----- executor 0 executes write_coverage_signal cov->size 2886, flag collect 1
----- executor 0 cover number : 436, signal number : 72
----- executor 0 executes write_coverage_signal cov->size 2934, flag collect 1
----- executor 0 cover number : 466, signal number : 337
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 27
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 519, signal number : 594
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1982, signal number : 2767
----- executor 0 executes write_coverage_signal cov->size 5780, flag collect 1
----- executor 0 cover number : 535, signal number : 235
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2165, signal number : 2588
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 516, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 58
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 1104, flag collect 1
----- executor 2 cover number : 410, signal number : 324
----- executor 2 executes write_coverage_signal cov->size 32704, flag collect 1
----- executor 0 cover number : 498, signal number : 149
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2163, signal number : 2573
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 0 cover number : 1001, signal number : 418
----- executor 0 executes write_coverage_signal cov->size 1131, flag collect 1
----- executor 0 cover number : 477, signal number : 91
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
executor 0 server cover_cnt 57 output_pos_value 22108
----- executor 1 executes write_coverage_signal cov->size 13014, flag collect 1
----- executor 2 cover number : 409, signal number : 96
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 576, signal number : 334
----- executor 1 executes write_coverage_signal cov->size 4186, flag collect 1
2023/04/02 01:12:59 for select break: 1
2023/04/02 01:12:59 --------- executor 0 receive reply, reply.done 1
----- executor 1 cover number : 409, signal number : 13
----- executor 1 executes write_coverage_signal cov->size 31669, flag collect 1
time breakdown 0: 65, 3291, 0
before receive testcase: 0 0
----- executor 2 cover number : 1968, signal number : 2427
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 992, flag collect 1
----- executor 2 cover number : 280, signal number : 154
----- executor 2 executes write_coverage_signal cov->size 2842, flag collect 1
----- executor 2 cover number : 526, signal number : 153
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 2002, flag collect 1
----- executor 1 cover number : 2454, signal number : 3182
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 904, flag collect 1
----- executor 2 cover number : 657, signal number : 186
----- executor 2 executes write_coverage_signal cov->size 4260, flag collect 1
----- executor 1 cover number : 280, signal number : 158
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2842, flag collect 1
----- executor 1 cover number : 526, signal number : 228
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 3358, flag collect 1
----- executor 1 cover number : 750, signal number : 403
----- executor 1 executes write_coverage_signal cov->size 2904, flag collect 1
----- executor 2 cover number : 937, signal number : 339
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 681, signal number : 163
----- executor 1 executes write_coverage_signal cov->size 27484, flag collect 1
----- executor 1 cover number : 1151, signal number : 1360
----- executor 1 executes write_coverage_signal cov->size 7015, flag collect 1
----- executor 2 cover number : 996, signal number : 1241
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 859, signal number : 118
----- executor 1 executes write_coverage_signal cov->size 26004, flag collect 1
----- executor 1 cover number : 1674, signal number : 1006
----- executor 1 executes write_coverage_signal cov->size 29225, flag collect 1
----- executor 2 cover number : 1189, signal number : 736
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2306, signal number : 1013
executor 1 server cover_cnt 20 output_pos_value 26722
----- executor 2 cover number : 2374, signal number : 2073
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
2023/04/02 01:12:59 for select break: 1
2023/04/02 01:12:59 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 58, 3321, 0
before receive testcase: 0 0
----- executor 2 cover number : 1789, signal number : 924
executor 2 server cover_cnt 20 output_pos_value 26764
2023/04/02 01:12:59 for select break: 1
2023/04/02 01:12:59 --------- executor 2 receive reply, reply.done 1
2023/04/02 01:12:59 wg wait finish
2023/04/02 01:12:59 ------ all executors finish execution
2023/04/02 01:12:59 exec time: 3370
2023/04/02 01:12:59 ----- PS len: 4
2023/04/02 01:12:59 [CLIENT] executor 3 has 20 replies
2023/04/02 01:12:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 548 signal and 942 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 196 signal and 601 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 313 signal and 1327 cover from executor 3
2023/04/02 01:12:59 fuzzer receive 46 signal and 601 cover from executor 3
2023/04/02 01:12:59 [SERVER] executor 0 has 57 replies
2023/04/02 01:12:59 [SERVER] executor 1 has 20 replies
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 318 signal and 280 cover from userspace component
2023/04/02 01:12:59 [SERVER] executor 2 has 20 replies
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 318 signal and 280 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 594 signal and 519 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 2588 signal and 2165 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 324 signal and 410 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 96 signal and 409 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 3 signal and 516 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 2427 signal and 1968 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 154 signal and 280 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 153 signal and 526 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 2573 signal and 2163 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 186 signal and 657 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 75 signal and 63 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 339 signal and 937 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 462 signal and 414 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 1241 signal and 996 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 2368 signal and 1982 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 736 signal and 1189 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 440 signal and 530 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 77 signal and 142 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 2073 signal and 2374 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 570 signal and 1001 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 1 signal and 165 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 50 signal and 501 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 4 signal and 126 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 2 receive 924 signal and 1789 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 10 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 206 signal and 286 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 72 signal and 436 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 337 signal and 466 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 27 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 334 signal and 576 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 13 signal and 409 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 3182 signal and 2454 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 158 signal and 280 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 228 signal and 526 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 403 signal and 750 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 163 signal and 681 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 1360 signal and 1151 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 118 signal and 859 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 1006 signal and 1674 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 2767 signal and 1982 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 235 signal and 535 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 58 signal and 142 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 6 signal and 10 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 149 signal and 498 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 1 receive 1013 signal and 2306 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 418 signal and 1001 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 91 signal and 477 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 7 signal and 8 cover from userspace component
2023/04/02 01:12:59 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
time breakdown 2: 70, 3330, 0
before receive testcase: 0 0
2023/04/02 01:12:59 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:13:00 failure smash: true false
2023/04/02 01:13:00 HasCrashFail: true, .HasNetFail: false
2023/04/02 01:13:00 disable threaded and collide
2023/04/02 01:13:00 prog length: 6
2023/04/02 01:13:00 prog length: 20
2023/04/02 01:13:00 send to channel: true, false
2023/04/02 01:13:00 HasCrashFail:true HasNetFail:false
01:13:00 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="cb7ee857caba085bff7aa5fd1ab712efc6d0ecc083e40e22353381ae0529e549b4b3c225e9e7dd3309c66c1a7bab8814b0e6c48855b801b5dfb13a69efd0d6f699259bc0ea6452ba6fba1c3ee14eda11c6df5db4d9deee4e769d8df68fa73e07ea220aafd52c5551443fc4906f30e274d3f9f84034deeacc4f2d807fd47f2ef9f52f7960545f007cb50c19a957ce7f4ae2fd56c3a82e6733b0c4afba39264467588d62f356893abc9c186962872525ce571a5ad6e7ee2e02fcab095e3cbe9335703cd66910900071696cb0e740610af5cb1d711720646b2137f14caaf49ce7b88c62afa4fba83db25195616b19c0db64bd5eec5331ff325468d193eaf8def4ffbfb6eaf8069dcf864003d327ed67a3ef351b107b1eb30c7de25d803debc6507cacefe63c88b8a10b9b2ce48272f84ab5f69a0f9d99534efb5dfff362f03f7253caa55cc12ae2e238c05eee10cfa5f146dd18033a2bf64e1aae1e33bf8386bbee03319829eee147f74b749806f05fba16c165ef6b2e33a43935fdd47be314aacb142eba14aea5396077dcf0225428664ab59fe6a9f55a738b6dde9dec2e387be91a932b607042386923b25db40605962b66bc6b1bdf59402bda51de81152b9a4756ff7983c5e8610a69d362969d2583890d485e953543536b3d63b0c5d165597ea8e0a1ed73f5307d15ad804be791486afadd349f9e7627f760e9a773a0599593ed069a549126a3159065c75925cb457f415f00d3427d77ba55bfc73b9f16326021b6a573530f0822f91a164a1dc55f80268be2186b8a700804fbaf252fc028bdf25aa03ef7b9a01a68eaeba81d2d9c00078ee423de313387a2b60e5d503621bdc4c56fcdf534524d94541b4d76957681beeff11b0efd047d2acc239d30d6a86ec9848ad9530b66ae00a11750276b285ab1d9b710cdb05a1912b245e0f22a1fff6f505fd10e4815e345891c7e3a084941c87847043e5f90af07b0a9ed5b450c804d706c404834ab846a9fe14eb1f7a06e404f3fad62afb5b137e9533615cb1e79b887a8b3f536c00977560d079351b03b7bfea44a1bdb28e041c568b9722cf9a0f85cd08b28d833c410ca4b2f99c627edad47dd8242c029a0c09ac40418b800b5bb18c8106443efe02605a6089caa0bfe7e92cec6d8be303f1446c40be6057dece2d630ddc0a83cc29e6666c9e60a24e51bdeaed23e290e08ecfcd4e486122c5bb7f287ebc0aeb7738a75ddfbc5f32656d8d4418e8102b135ab14920713c7122371a42c7ad3af099fa90e4f95967b8b9e08d822242ca107c4aef30308909abef2000d9be2f3afe81a7700c21585e471fc18738b8bc85c62c3027848a005f6f74d7260a136e58656dc23a0b7994d155bcee63ddc9a74ec6ee0813e1ac4625cc2b59dfb63ee529b102d8d280ba75f7b16d3189f309e0d68c12de815423b3f0f3acacea65f158c54444c939f7a6ebe09575f5d6378afe468030d15ef4c605a330d7dec27cba26aa3ca92742330612a9c410dfe1aadfe54b8ae2c43d7ca786ef528b4df208042bb083c46ed9491ac9c2f6f77c91775ce54e8a09dab45d907227b9d12ecb63340f9e23f9f6db355faafcc926ebab8c5ca6937680c3351b17d11f854470d7e48949d8924ab4fc25eafcc734739af53bc970444b70d9a59347e55be397ef9a91719deccbb6fae999b21352c9ac681e5307a1326368bd0855e134ba7a136c2884181bf1aaaf7181dc6be357c78b53d637caf33ea0481a8473de870f584255370162fa6da9b6e82998e41308ab6738e550b309eacb522dfd308fed27e7b862477713ee6224b07b604937d448950034216ab9e741c034cfc3c8dd5b4cb89a4cfcaa4c0e490ed6eacf73dfd58fba14ecc2cd42d522054027cc75a452d4815fa94a6cda23415c1268351de5ec91e31a3b3846a9b1de3e97d0c554d04d895d067d49aa29da787acb068f67472ce49684b59ca3875002382003932b86eb2b0824e8683c8290d58178f11da594e271df6d2dadb442053cec938f114cd45b54a60290fdf317d404006567301221a887aa4545da87c5643ecd5a86c837d2234628851b809d0f129ca9ac001ae81230671fd7a0b0316c283714f560baa25d98548a0e95a69de4f5f3c89ae90f8dcd363fb948cfe759543d0ae9e496286a11fdbef7db7812a37fedf87c72c23a2e98ee2447a93f9b0033a9b49e64d80ffa599743bd6c363e44d9124cbf927ecb4d6daeb0f9a70e2ab6518ac52706facc6bc9f591ab03e4a301a27c9624ee22a886fb9c1431c2e9ac545db0bf642a93bc68d1e6d04e9004a1299f6f061307d1d86c40c0d2ff52dcb4c498706ab94c29fb456cfa5dcc75572256ca319cab6f7246994e20af4bd806834821de1bc855b66dc52c7444fd2d5f25a1d00298f15b6cd83c0697424c2294184ad8565e0deb19c4d084495268c910a90e87639828c435bc27d2defc6d043097ed43a2891d7ce11b32c921c5ab80af95398b44ba81c9f186a59f14ccc814f3d1701e294164a2407c47632929c7a8e36168e73108c1d4ce3fda7d74b76b5ff9cb2a54b25161298b282b53435847a3d1b3a31c2544640fe6b46bdda16ecf11327e094817b294da26e299c46d06f35ede1f9db0cf248c1f3093b08ec2a108e3f935660b8d37e852db6338642383cca41a50c042bfd57fef9aecf43d1a8be072c17f5b00e13f3ae2cb9aa5c78d797d4c4f86f0c2e17f41940b9ddb2aeca472b94814752bfc36ecc32bf7eafc12a20ef522736d6b732a3e208ad443a1ce675f385595df53ae4130d220b1b8898ff448c96c4e322540c119146a710bfd68efe71e65b4306e899bc83c675143030dd721457c7d2a7e1934020e9a86b0153b0122d92e63e74eb8315e10eb3e5af0e3cadf6902e6e9541239a6cbe252adefeac36f1d736b36cd160e5348ad06120db3ad4c86e086da3ce15bfd6144633a6bba633ff854032fdb533a49c4ca8911f4323b6d64b7d052ff3be04d7dd9a4bfd004265fc3362763cacba90912379aa5ae3dca7c81069ca54403f9baba9d09fc16986b3d0c3f1a8469f75e4a57ef85468b70c7f816b106486d5da0c1b9ae1908548877207b6705d87b9808863c607767c0cc97b8575c49b6e1c221250f7ba2e387105474e89186c11e2ae754d1dcf3a63a820cf753d97f354e59c14902ba9cf2795c8f47257e30e6a2800a1d331fafee064b35653e40bc8e61fb34fb3a73009f63b249bf27c8b49f0899e189c86c5fb3245a282e81fed043e9d7b98cbae92734f2433fed63714dcf4fa22014c090b2d6f742439c8fc681e29a554ec28904c4e8e10a10a17d1ecdca7cc60ed8de8c773c6c2165f3ef8d9d9e6495d5043b5b602836c10a40513637ee7c40a0929dea1107d909dbdf33349f0e94c38d8dd74212082a65992a664c20f157a5652335e2b85d4f7ed01f0ecfe236b9be6b6e311c4b62f7fa4fe93a94ba5e601fe27ae89c47dd755b7bd5fe8b04b697a01417b6d021063a71c58ba19cb2554429aa740062a417171aecf88f4951c980f39ac6ffced130c0c6727fb8c33480167d94a414ad60547ff2c9db96ac7f03c821d19e28d0eacadabacdeead42b5e87aa8d7f827226dfcb215b13ee19b36200232d802149cb001718ba9607427ce23f22b188bbd6ca1a0c4f69c0949b1b3731010cb448f41acb04fd729620233f6e06c261d8b29ea47c7e6b82b561dea494be3a0c81d63653c8c677d443f225364dc4695e3f5ef69a6611bf1907343482f8c00b5e77c84e08800f2ac78f9429e6b6c24a316d62aed541fcbc7a2100afd265dd2b3a2d677a92d1417a2bec87311efcd89f4082028ba2e4f952357a4a10ae7b98a406d50449d5c27e1abbb4f0c15eecf8230b9364f4175cf33f4ee56824e4206594dd465110a6ecaaf7247f937a9ddbbb0df3de2a685055ca188be8920cf1ba1ddc74f4e522da5b4dcf7134542ac84fa9bc0a81dfea038bb877263154ae709a7aa9bcde773ca15f51d068aa9d0686c444ae987a9ef0842fa938e830d49f35d0c8dc3741b464a5f1afd544dc1877a9866031a3e0e642f2fa30b854c57b2beb268db912157fe2a79bb8a2077532ed28951e5c53a9089c31860e69fabd63df2975eb400229eef06aea8a44bdf03e491177f3e30daa80d37b77f434638f8bfd48105b17375afeaefc63529dc792f3ec8c79313d19c8162fed589357da69e5600a044536ef8337b98e255109f63b8ead8f963fa3ae2fb4a65953521bd7aee73ab2483930fbe90786149a034dd1f5492a33fa9abce711a47c957ae497f8146b929d0877a2c4d6efef1e7fd56f171e92deb2d7bb1c03237ea9a0b2b1058cd01c047631c9abfe85eee1fa6732d5d0e04a20d3c4dd1551fce5a27d12d0ffa0f19e32221ed47e5b07768b03903b1060e4bd07e73738a227788b8a6aecf1dc72fd46df67e5087d4a856df4efa0a6dc963e99a68a73d01b399487a6c272bc14b6f58ee64f29b84bdd75f3d39c499fc9ff02ffe0c268989cc9bdffb80b7639f405528c5a804278ff97559f9a9f807566ca84b2cb6b4fd2bdefeaf8a32b7acfd453297198814ab43ebeeffe6af7b3d0689bcc8e1baecf6ea3764e7ad21f9fe46b102a7010a650a19e1a767dbd27687d19aa6cd8cef074926a9e5d97ddc811567e6fd1a41b901026d4e94e8b364ed7f50f848046898e76a7b724c66292d418d10be9612f40594b7cc2f2086c546b1ecc6cb97d927bf06e55d43e6379063eeea681ba38042e403958bb5ba20c8b8e2809f47e336b3b0ede2cc75c866fc6e1cea9c7f9f3f1afc10513ad970c9a66e5b8bc6210c6280f2f11a213fe2a6f7180a718cc0debed0941041d8cf9b1d12805144325be53fc15aa94d850c57c657703458188f9d4a135b18b45cfde7d21a5aaba4b7ed01dc935e0e1741bdf7d979195cf38c92c45af9ef1f809e5d26fcda03ee31dd7498616992d9fa707e8c78b2ff0061dca25feabb8919a0f70cd643fe5bdaae4a25c4f7481889933ae499a49f9351b9ce1a8366921de4c8bcac59d0c94411aaf1e1163be3095c24e3f9d007d788fe12ecf7869e0508ed3ac973b5c7ff0b72621c746780ebfd698ee2af2a6afc6a7bd3aa31ba1b744c4299f51bd46e98ea0423c787604633729dbf53fccff1fa20572bf0209eac508448580f09e4c758e46b63ec0e68bd1a3867d2117d016b53a1896bd48332dca9e41f8bda098ed0c6ad9b37de8ad580bc1ce1e196e88de534f3ad613e4165c861e337e1233583c0869083e55e26cb6db896dea2d6c4769078c929b97be7b17fd311ae95ebea14d7286323babcf08c6ec3a11c21442795a159012faf7d4ccd86c66c3e6ea857cdb9a287990cf1dcc25df6e212a36d82dcd1c4a5cf79ee9f4e8aaf5c40098cb03e834e97aab8267655b02d470b1097ab4bd40370f10ee034782fc407b49010d2e9b6a752c5f4aca9c07858f20fd7722e5b52f9f909c9232f2b789b50f783608a07064d62e24d7e50ff46fa7b957943daf5523b19ff7c0ab4a1b20f4484fb0df8e57356d79fb8143825073547fec3ca5b601de4aa617c1272115cb2aee0340131f3d6a2159e40377c5c6a9bb0c96cdfb0412f34a587f353820b2874cfa26da74119569e27744cb9218829894fd5f466eb9c803e938b1054ed55d659d8e8197c578e2d0ec444efea884a3262c43bcfc5de911bef32e4a08b9baf5d02e3e2e4e0df44b821ba4561fb528c9ed17fa9b36b002e2539e6dfb18c8f16e5b90f966f915564f72c705a7756e07be1e8bd6381c78499b7acab8b374afad15f9f4", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
syz_failure_sync(0x0, 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
syz_failure_sync(0x1, 0x3)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-457
remove dir time 27
-----finish removing dir
receive_execute: 34, 55
receive_execute: 25, 56
receive_execute: 64, 55
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-458 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-458
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 1, 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 100, 60
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5828, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 5828, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 4, 0, 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5755, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 5755, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 3, 0, 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8462, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 8462, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 13, 0, 3
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 3482, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 3482, flag collect 1
----- executor 3 cover number : 942, signal number : 548
----- completed 8
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_call 0, 122, 0, 0
----- executor 3 write_call_output, size 32765, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 196
----- completed 9
execute_call 0, 63, 0, 6
execute_one loop: 0, 0, 69
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 122
executor 0 write_server_output
executor 3 waits for recv msg
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1425
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 1
----- executor 0 cover number : 34, signal number : 32
----- executor 0 executes write_coverage_signal cov->size 1494, flag collect 1
----- executor 0 cover number : 635, signal number : 672
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 1
----- executor 0 cover number : 28, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1599, signal number : 1812
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 51, signal number : 54
executor 0 server cover_cnt 13 output_pos_value 7642
execute_call 0, 80, 0, 0
execute_one loop: 0, 0, 80
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 80, 0, 0
execute_one loop: 0, 0, 80
cover_reset in execute_call
-----executor 0 collect shmids 52
----- directly resend shmid 52
-----executor 0 collect shmids 53
----- directly resend shmid 53
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 32765, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
----- executor 3 cover number : 601, signal number : 44
----- completed 15
execute_call 0, 88, 0, 17
execute_one loop: 0, 0, 105
execute_call 0, 104, 0, 0
execute_one loop: 0, 0, 104
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
==23953==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
----- executor 3 write_call_output, size 0, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 2891, 0, 0
execute_one loop: 0, 0, 2891
cover_reset in execute_call
execute_call 0, 2891, 0, 0
execute_one loop: 0, 0, 2891
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3197, 0
execute_one time: 1, 3197
----- executor 3 write_call_output, size 12618, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 12618, flag collect 1
----- executor 3 cover number : 1329, signal number : 317
----- completed 19
execute_call 0, 22, 0, 4
execute_one loop: 0, 0, 26
cover_reset in execute_call
Node-0:/root/daemon-log.24033
----- executor 3 write_call_output, size 32765, pid 1285, write pid:1285
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 46
----- completed 20
execute_call 0, 75, 0, 17
execute_one loop: 0, 0, 92
executor 3, execute_one inner time: 1, 3307, 0
execute_one time: 3, 3309
executor 1 write_server_output
executor 0 write_server_output
2023/04/02 01:13:03 for select break: 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 827, flag collect 1
2023/04/02 01:13:03 --------- executor 3 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 850, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 2 cover number : 287, signal number : 329
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 287, signal number : 329
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 709, flag collect 1
----- executor 0 cover number : 289, signal number : 212
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 160, 3315, 0
before receive testcase: 0 1
----- executor 2 cover number : 538, signal number : 616
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2240, signal number : 2645
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 5376, flag collect 1
----- executor 2 cover number : 575, signal number : 301
----- executor 2 executes write_coverage_signal cov->size 12498, flag collect 1
----- executor 2 cover number : 411, signal number : 40
----- executor 2 executes write_coverage_signal cov->size 25312, flag collect 1
----- executor 1 cover number : 516, signal number : 591
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1243
----- executor 0 executes write_coverage_signal cov->size 5674, flag collect 1
----- executor 0 cover number : 558, signal number : 515
----- executor 0 executes write_coverage_signal cov->size 1265, flag collect 1
----- executor 0 cover number : 435, signal number : 132
----- executor 0 executes write_coverage_signal cov->size 461, flag collect 1
----- executor 0 cover number : 163, signal number : 15
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1673, signal number : 1938
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 23, flag collect 1
----- executor 2 cover number : 19, signal number : 19
----- executor 2 executes write_coverage_signal cov->size 874, flag collect 1
----- executor 2 cover number : 269, signal number : 140
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 132
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 786, flag collect 1
----- executor 2 cover number : 405, signal number : 44
----- executor 2 executes write_coverage_signal cov->size 4688, flag collect 1
----- executor 2 cover number : 829, signal number : 476
----- executor 2 executes write_coverage_signal cov->size 28614, flag collect 1
----- executor 2 cover number : 1151, signal number : 1287
----- executor 2 executes write_coverage_signal cov->size 7015, flag collect 1
----- executor 2 cover number : 859, signal number : 77
----- executor 2 executes write_coverage_signal cov->size 31622, flag collect 1
----- executor 1 cover number : 2307, signal number : 2750
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2316, signal number : 1529
----- executor 2 executes write_coverage_signal cov->size 29965, flag collect 1
----- executor 0 cover number : 142, signal number : 63
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 1265, flag collect 1
----- executor 0 cover number : 435, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 0 cover number : 501, signal number : 72
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2565, signal number : 1425
executor 2 server cover_cnt 21 output_pos_value 25782
2023/04/02 01:13:03 for select break: 1
2023/04/02 01:13:03 --------- executor 2 receive reply, reply.done 1
----- executor 1 cover number : 575, signal number : 382
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 2: 81, 3360, 0
before receive testcase: 0 0
----- executor 0 cover number : 126, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2772, flag collect 1
----- executor 0 cover number : 414, signal number : 270
----- executor 0 executes write_coverage_signal cov->size 75, flag collect 1
----- executor 0 cover number : 57, signal number : 12
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 28
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 6055, flag collect 1
----- executor 1 cover number : 410, signal number : 96
----- executor 0 cover number : 1382, signal number : 1085
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 252, flag collect 1
----- executor 0 cover number : 131, signal number : 12
----- executor 0 executes write_coverage_signal cov->size 218, flag collect 1
----- executor 0 cover number : 109, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1326, flag collect 1
----- executor 0 cover number : 600, signal number : 237
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1788, signal number : 2209
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 23, flag collect 1
----- executor 1 cover number : 19, signal number : 19
----- executor 1 executes write_coverage_signal cov->size 872, flag collect 1
----- executor 1 cover number : 269, signal number : 143
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 139
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2179, flag collect 1
----- executor 1 cover number : 703, signal number : 196
----- executor 1 executes write_coverage_signal cov->size 3245, flag collect 1
----- executor 1 cover number : 767, signal number : 293
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1599, signal number : 1522
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 222, flag collect 1
----- executor 0 cover number : 111, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 222, flag collect 1
----- executor 0 cover number : 110, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 244, flag collect 1
----- executor 0 cover number : 130, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 230, flag collect 1
----- executor 0 cover number : 116, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 0 cover number : 10, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 950, signal number : 1005
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1823, signal number : 1784
----- executor 0 executes write_coverage_signal cov->size 6481, flag collect 1
----- executor 0 cover number : 577, signal number : 238
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1189, signal number : 583
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 190, signal number : 46
----- executor 0 executes write_coverage_signal cov->size 5642, flag collect 1
----- executor 0 cover number : 532, signal number : 50
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1979, signal number : 1198
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2485, signal number : 1739
executor 1 server cover_cnt 21 output_pos_value 26562
----- executor 0 cover number : 142, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1838, flag collect 1
----- executor 0 cover number : 615, signal number : 246
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 14
executor 0 server cover_cnt 72 output_pos_value 30270
2023/04/02 01:13:03 for select break: 1
2023/04/02 01:13:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 89, 3404, 0
before receive testcase: 0 0
time breakdown 0: 119, 3408, 0
before receive testcase: 0 1
2023/04/02 01:13:03 for select break: 1
2023/04/02 01:13:03 --------- executor 0 receive reply, reply.done 1
2023/04/02 01:13:03 wg wait finish
2023/04/02 01:13:03 ------ all executors finish execution
2023/04/02 01:13:03 exec time: 3463
2023/04/02 01:13:03 ----- PS len: 4
2023/04/02 01:13:03 [SERVER] executor 2 has 21 replies
2023/04/02 01:13:03 [CLIENT] executor 3 has 20 replies
2023/04/02 01:13:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 329 signal and 287 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 616 signal and 538 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 2645 signal and 2240 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:03 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:13:03 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:13:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:03 [SERVER] executor 0 has 72 replies
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 1425 signal and 1141 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 32 signal and 34 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 672 signal and 635 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 8 signal and 28 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 1812 signal and 1599 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 18 signal and 27 cover from userspace component
2023/04/02 01:13:03 [SERVER] executor 1 has 21 replies
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 301 signal and 575 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 54 signal and 51 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 329 signal and 287 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 212 signal and 289 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 40 signal and 411 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 591 signal and 516 cover from userspace component
2023/04/02 01:13:03 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 1938 signal and 1673 cover from userspace component
2023/04/02 01:13:03 fuzzer receive 548 signal and 942 cover from executor 3
2023/04/02 01:13:03 fuzzer receive 196 signal and 601 cover from executor 3
2023/04/02 01:13:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 19 signal and 19 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 2750 signal and 2307 cover from userspace component
2023/04/02 01:13:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 382 signal and 575 cover from userspace component
2023/04/02 01:13:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:03 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:13:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 140 signal and 269 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 96 signal and 410 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 132 signal and 526 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 1243 signal and 1141 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 2209 signal and 1788 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 19 signal and 19 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 143 signal and 269 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 139 signal and 526 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 515 signal and 558 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 132 signal and 435 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 15 signal and 163 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 63 signal and 142 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 1 signal and 9 cover from userspace component
2023/04/02 01:13:03 fuzzer receive 317 signal and 1329 cover from executor 3
2023/04/02 01:13:03 fuzzer receive 46 signal and 601 cover from executor 3
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 44 signal and 405 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 196 signal and 703 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 476 signal and 829 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 1287 signal and 1151 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 293 signal and 767 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 17 signal and 435 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 1005 signal and 950 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 77 signal and 859 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 583 signal and 1189 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 1198 signal and 1979 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 1529 signal and 2316 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 72 signal and 501 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 1 receive 1739 signal and 2485 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 5 signal and 165 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 8 signal and 126 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 10 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 2 receive 1425 signal and 2565 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 270 signal and 414 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 12 signal and 57 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 28 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 2 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 1085 signal and 1382 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 12 signal and 131 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 3 signal and 109 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 237 signal and 600 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 1522 signal and 1599 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 11 signal and 106 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 7 signal and 111 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 6 signal and 110 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 18 signal and 130 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 7 signal and 116 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 6 signal and 10 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 1784 signal and 1823 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 238 signal and 577 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 46 signal and 190 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 50 signal and 532 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 7 signal and 142 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 246 signal and 615 cover from userspace component
2023/04/02 01:13:03 ------- fuzzer executor 0 receive 14 signal and 165 cover from userspace component
2023/04/02 01:13:03 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:13:03 disable threaded and collide
2023/04/02 01:13:03 prog length: 6
2023/04/02 01:13:03 prog length: 20
2023/04/02 01:13:03 HasCrashFail:true HasNetFail:false
01:13:03 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
syz_failure_sync(0x0, 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
syz_failure_sync(0x1, 0x3)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
executor 3: prog_data_offset 1576, prog_size 9256
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-458
remove dir time 49
-----finish removing dir
receive_execute: 81, 74
receive_execute: 39, 74
receive_execute: 35, 74
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-459 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-459
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 123, 79
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5831, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 5831, flag collect 1
----- executor 3 cover number : 951, signal number : 1152
----- completed 4
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5761, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 5761, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8485, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 8485, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 15, 0, 2
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 3492, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 3492, flag collect 1
----- executor 3 cover number : 942, signal number : 548
----- completed 8
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 196
----- completed 9
execute_call 0, 69, 0, 13
execute_one loop: 0, 0, 82
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 129, 0, 0
execute_one loop: 0, 0, 129
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1425
----- executor 0 executes write_coverage_signal cov->size 41, flag collect 1
----- executor 0 cover number : 35, signal number : 34
----- executor 0 executes write_coverage_signal cov->size 2124, flag collect 1
----- executor 0 cover number : 567, signal number : 580
----- executor 0 executes write_coverage_signal cov->size 171, flag collect 1
----- executor 0 cover number : 133, signal number : 69
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 55
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 499
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 69
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1408, flag collect 1
----- executor 0 cover number : 166, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
executor 0 server cover_cnt 13 output_pos_value 5609
-----executor 0 collect shmids 72
----- directly resend shmid 72
-----executor 0 collect shmids 75
----- directly resend shmid 75
-----executor 0 collect shmids 50
----- directly resend shmid 50
-----executor 0 collect shmids 15
----- directly resend shmid 15
execute_call 0, 97, 0, 0
execute_one loop: 0, 0, 97
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 97, 0, 0
execute_one loop: 0, 0, 97
cover_reset in execute_call
-----executor 0 collect shmids 73
----- directly resend shmid 73
-----executor 0 collect shmids 74
----- directly resend shmid 74
-----executor 0 collect shmids 76
----- directly resend shmid 76
-----executor 0 collect shmids 77
----- directly resend shmid 77
----- executor 3 write_call_output, size 32765, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 15
execute_call 0, 68, 0, 17
execute_one loop: 0, 0, 85
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 85, 0, 0
execute_one loop: 0, 0, 85
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
==24033==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2824, 0, 0
execute_one loop: 0, 0, 2824
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3135, 0
execute_one time: 3, 3136
----- executor 3 write_call_output, size 0, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 2825, 0, 0
execute_one loop: 0, 0, 2825
cover_reset in execute_call
----- executor 3 write_call_output, size 12631, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 12631, flag collect 1
----- executor 3 cover number : 1327, signal number : 313
----- completed 19
execute_call 0, 33, 0, 7
execute_one loop: 0, 0, 40
cover_reset in execute_call
Node-0:/root/daemon-log.24105
----- executor 3 write_call_output, size 32765, pid 1287, write pid:1287
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 46
----- completed 20
execute_call 0, 115, 0, 6
execute_one loop: 0, 0, 121
executor 3, execute_one inner time: 0, 3295, 0
execute_one time: 2, 3295
2023/04/02 01:13:06 for select break: 1
2023/04/02 01:13:06 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 748, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 762, flag collect 1
----- executor 1 cover number : 289, signal number : 332
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 202, 3299, 0
before receive testcase: 0 0
----- executor 2 cover number : 289, signal number : 332
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 0 cover number : 501, signal number : 32
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 516, signal number : 591
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2806, flag collect 1
----- executor 0 cover number : 432, signal number : 268
----- executor 0 executes write_coverage_signal cov->size 142, flag collect 1
----- executor 0 cover number : 65, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 919, flag collect 1
----- executor 0 cover number : 387, signal number : 201
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2095, signal number : 2427
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 66, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 18257, flag collect 1
----- executor 2 cover number : 2093, signal number : 2422
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1210
----- executor 0 executes write_coverage_signal cov->size 256, flag collect 1
----- executor 0 cover number : 139, signal number : 25
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 790, signal number : 465
----- executor 1 executes write_coverage_signal cov->size 3590, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 766, signal number : 128
----- executor 1 executes write_coverage_signal cov->size 20086, flag collect 1
----- executor 1 cover number : 1867, signal number : 2223
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1171, flag collect 1
----- executor 1 cover number : 278, signal number : 125
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 410, signal number : 322
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 526, signal number : 132
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 4317, flag collect 1
----- executor 1 cover number : 845, signal number : 436
----- executor 1 executes write_coverage_signal cov->size 1155, flag collect 1
----- executor 1 cover number : 523, signal number : 100
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1820, signal number : 1987
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 2 cover number : 1805, signal number : 1181
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 530, signal number : 96
----- executor 0 executes write_coverage_signal cov->size 168, flag collect 1
----- executor 0 cover number : 126, signal number : 14
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 9, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 12888, flag collect 1
----- executor 1 cover number : 1143, signal number : 1374
----- executor 1 executes write_coverage_signal cov->size 2539, flag collect 1
----- executor 1 cover number : 534, signal number : 42
----- executor 1 executes write_coverage_signal cov->size 32118, flag collect 1
----- executor 0 cover number : 1736, signal number : 1017
----- executor 0 executes write_coverage_signal cov->size 1176, flag collect 1
----- executor 0 cover number : 497, signal number : 195
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2258, signal number : 2646
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1157, flag collect 1
----- executor 2 cover number : 278, signal number : 141
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 134
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3274, flag collect 1
----- executor 2 cover number : 767, signal number : 410
----- executor 2 executes write_coverage_signal cov->size 2198, flag collect 1
----- executor 2 cover number : 703, signal number : 178
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1307, signal number : 834
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 42
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 1 cover number : 2248, signal number : 1846
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 526, signal number : 300
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 995, signal number : 1065
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 53
----- executor 0 executes write_coverage_signal cov->size 21, flag collect 1
----- executor 0 cover number : 9, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 721, flag collect 1
----- executor 0 cover number : 276, signal number : 55
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 0 cover number : 525, signal number : 80
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 1
----- executor 0 cover number : 243, signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2204, signal number : 995
executor 1 server cover_cnt 21 output_pos_value 26027
----- executor 2 cover number : 1206, signal number : 668
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
2023/04/02 01:13:06 for select break: 1
2023/04/02 01:13:06 --------- executor 1 receive reply, reply.done 1
----- executor 0 cover number : 1182, signal number : 683
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 1: 113, 3352, 0
before receive testcase: 0 0
----- executor 2 cover number : 1788, signal number : 1258
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1399, signal number : 1519
executor 0 server cover_cnt 66 output_pos_value 30048
2023/04/02 01:13:06 for select break: 1
2023/04/02 01:13:06 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 2091, signal number : 1496
executor 2 server cover_cnt 21 output_pos_value 28754
2023/04/02 01:13:06 for select break: 1
2023/04/02 01:13:06 --------- executor 2 receive reply, reply.done 1
2023/04/02 01:13:06 wg wait finish
2023/04/02 01:13:06 ------ all executors finish execution
2023/04/02 01:13:06 exec time: 3438
2023/04/02 01:13:06 ----- PS len: 4
2023/04/02 01:13:06 [CLIENT] executor 3 has 20 replies
2023/04/02 01:13:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:06 [SERVER] executor 1 has 21 replies
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 332 signal and 289 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 591 signal and 516 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 2427 signal and 2095 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 0 signal and 66 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:06 [SERVER] executor 0 has 66 replies
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 465 signal and 790 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 128 signal and 766 cover from userspace component
2023/04/02 01:13:06 [SERVER] executor 2 has 21 replies
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 332 signal and 289 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 1425 signal and 1141 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 34 signal and 35 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 580 signal and 567 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 69 signal and 133 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 55 signal and 51 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 499 signal and 523 cover from userspace component
2023/04/02 01:13:06 fuzzer receive 1152 signal and 951 cover from executor 3
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 51 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 69 signal and 142 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 6 signal and 7 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 1 signal and 166 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 32 signal and 501 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 4 signal and 126 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 3 signal and 9 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 268 signal and 432 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 8 signal and 65 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
time breakdown 2: 155, 3365, 0
before receive testcase: 0 1
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 2422 signal and 2093 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 0 signal and 66 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 322 signal and 410 cover from userspace component
2023/04/02 01:13:06 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 1181 signal and 1805 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 2646 signal and 2258 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 548 signal and 942 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 196 signal and 601 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 313 signal and 1327 cover from executor 3
2023/04/02 01:13:06 fuzzer receive 46 signal and 601 cover from executor 3
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 201 signal and 387 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 1210 signal and 1141 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 2223 signal and 1867 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 25 signal and 139 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 125 signal and 278 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 132 signal and 526 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 436 signal and 845 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 100 signal and 523 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 1374 signal and 1143 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 42 signal and 534 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 1846 signal and 2248 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 1 receive 995 signal and 2204 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 141 signal and 278 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 134 signal and 526 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 410 signal and 767 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 178 signal and 703 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 1065 signal and 995 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 1987 signal and 1820 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 96 signal and 530 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 14 signal and 126 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 2 signal and 9 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 668 signal and 1206 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 1017 signal and 1736 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 195 signal and 497 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 834 signal and 1307 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 42 signal and 51 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 1258 signal and 1788 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 300 signal and 526 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 2 signal and 51 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 53 signal and 142 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 2 receive 1496 signal and 2091 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 5 signal and 9 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 55 signal and 276 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 80 signal and 525 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 20 signal and 243 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 683 signal and 1182 cover from userspace component
2023/04/02 01:13:06 ------- fuzzer executor 0 receive 1519 signal and 1399 cover from userspace component
time breakdown 0: 109, 3361, 0
before receive testcase: 0 0
2023/04/02 01:13:06 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:13:06 failure smash: true false
2023/04/02 01:13:06 HasCrashFail: true, .HasNetFail: false
2023/04/02 01:13:06 send to channel: true, false
2023/04/02 01:13:06 disable threaded and collide
2023/04/02 01:13:06 prog length: 6
2023/04/02 01:13:06 prog length: 20
2023/04/02 01:13:06 HasCrashFail:true HasNetFail:false
01:13:06 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
syz_failure_sync(0x0, 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-459
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 33
-----finish removing dir
receive_execute: 27, 73
mkdir time 39
executor 3 create dir /root/glusterfs-client/dfs-0-460 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-460
receive_execute: 37, 73
receive_execute: 24, 74
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 85, 82
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5824, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 1
----- executor 3 cover number : 950, signal number : 1149
----- completed 4
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5749, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 5749, flag collect 1
----- executor 3 cover number : 919, signal number : 13
----- completed 5
execute_call 0, 14, 0, 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8476, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 8476, flag collect 1
----- executor 3 cover number : 1136, signal number : 308
----- completed 7
execute_call 0, 19, 0, 3
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 3483, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 3483, flag collect 1
----- executor 3 cover number : 947, signal number : 549
----- completed 8
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 195
----- completed 9
execute_call 0, 54, 0, 17
execute_one loop: 0, 0, 71
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 134, 0, 0
execute_one loop: 0, 0, 134
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1424
----- executor 0 executes write_coverage_signal cov->size 71, flag collect 1
----- executor 0 cover number : 36, signal number : 37
----- executor 0 executes write_coverage_signal cov->size 2723, flag collect 1
----- executor 0 cover number : 988, signal number : 1074
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 16169, flag collect 1
----- executor 0 cover number : 787, signal number : 709
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 0 cover number : 349, signal number : 196
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 491
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 67
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 16 output_pos_value 8179
/root/glusterfs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 109, 0, 0
execute_one loop: 0, 0, 109
cover_reset in execute_call
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 109, 0, 0
execute_one loop: 0, 0, 109
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 32765, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 44
----- completed 15
execute_call 0, 103, 0, 13
execute_one loop: 0, 0, 116
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2567, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 2567, flag collect 1
execute_call 0, 128, 0, 0
----- executor 3 cover number : 738, signal number : 0
----- completed 18
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 3 waits for recv msg
execute_one loop: 0, 0, 128
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
==24105==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2810, 0, 0
execute_one loop: 0, 0, 2810
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 1, 3181, 0
execute_one time: 2, 3182
----- executor 3 write_call_output, size 0, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 2811, 0, 0
execute_one loop: 0, 0, 2811
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1288, write pid:1288
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 1261, signal number : 349
----- completed 20
execute_call 0, 96, 0, 7
execute_one loop: 0, 0, 103
executor 3, execute_one inner time: 0, 3277, 0
execute_one time: 2, 3277
2023/04/02 01:13:10 for select break: 1
2023/04/02 01:13:10 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 780, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 766, flag collect 1
----- executor 1 cover number : 278, signal number : 315
----- executor 2 cover number : 278, signal number : 315
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 0 cover number : 501, signal number : 39
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 167, 3281, 0
before receive testcase: 0 0
Node-0:/root/daemon-log.24177
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 28430, flag collect 1
----- executor 0 cover number : 126, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 21, flag collect 1
----- executor 0 cover number : 9, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 200
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2097, signal number : 2548
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 116, signal number : 104
----- executor 1 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 1 cover number : 66, signal number : 47
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1230
----- executor 0 executes write_coverage_signal cov->size 2838, flag collect 1
----- executor 0 cover number : 429, signal number : 297
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 29
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2099, signal number : 2545
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 1671, signal number : 1438
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 116, signal number : 105
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 2 cover number : 66, signal number : 47
----- executor 2 executes write_coverage_signal cov->size 14660, flag collect 1
----- executor 2 cover number : 1446, signal number : 1049
----- executor 2 executes write_coverage_signal cov->size 22705, flag collect 1
----- executor 0 cover number : 2083, signal number : 2246
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 1176, flag collect 1
----- executor 0 cover number : 497, signal number : 144
----- executor 0 executes write_coverage_signal cov->size 19743, flag collect 1
----- executor 1 cover number : 410, signal number : 387
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1245, signal number : 807
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2269, signal number : 2803
----- executor 1 executes write_coverage_signal cov->size 827, flag collect 1
----- executor 1 cover number : 270, signal number : 143
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 3953, flag collect 1
----- executor 0 cover number : 1048, signal number : 607
----- executor 0 executes write_coverage_signal cov->size 1671, flag collect 1
----- executor 0 cover number : 603, signal number : 620
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 47
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 1 cover number : 793, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 739, flag collect 1
----- executor 1 cover number : 377, signal number : 64
----- executor 1 executes write_coverage_signal cov->size 18757, flag collect 1
----- executor 0 cover number : 526, signal number : 346
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 686, signal number : 637
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1326, signal number : 662
----- executor 2 executes write_coverage_signal cov->size 29088, flag collect 1
----- executor 0 cover number : 142, signal number : 62
----- executor 0 executes write_coverage_signal cov->size 35, flag collect 1
----- executor 0 cover number : 9, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 718, flag collect 1
----- executor 0 cover number : 272, signal number : 74
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2189, signal number : 2583
----- executor 2 executes write_coverage_signal cov->size 829, flag collect 1
----- executor 2 cover number : 270, signal number : 128
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 102
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3058, flag collect 1
----- executor 0 cover number : 1460, signal number : 1686
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 665, signal number : 361
----- executor 2 executes write_coverage_signal cov->size 2418, flag collect 1
----- executor 2 cover number : 785, signal number : 185
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1187, signal number : 889
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 890, signal number : 603
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 1
----- executor 0 cover number : 16, signal number : 16
executor 0 server cover_cnt 67 output_pos_value 31430
----- executor 2 cover number : 1168, signal number : 1288
----- executor 2 executes write_coverage_signal cov->size 1564, flag collect 1
----- executor 1 cover number : 1789, signal number : 971
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 504, signal number : 27
----- executor 2 executes write_coverage_signal cov->size 31886, flag collect 1
2023/04/02 01:13:10 for select break: 1
2023/04/02 01:13:10 --------- executor 0 receive reply, reply.done 1
----- executor 1 cover number : 2229, signal number : 1396
executor 1 server cover_cnt 17 output_pos_value 26493
time breakdown 0: 100, 3348, 0
before receive testcase: 0 0
2023/04/02 01:13:10 for select break: 1
2023/04/02 01:13:10 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 110, 3354, 0
before receive testcase: 0 0
----- executor 2 cover number : 2264, signal number : 1731
----- executor 2 executes write_coverage_signal cov->size 26110, flag collect 1
----- executor 2 cover number : 1659, signal number : 721
executor 2 server cover_cnt 19 output_pos_value 27287
2023/04/02 01:13:10 for select break: 1
2023/04/02 01:13:10 --------- executor 2 receive reply, reply.done 1
2023/04/02 01:13:10 wg wait finish
2023/04/02 01:13:10 ------ all executors finish execution
2023/04/02 01:13:10 exec time: 3456
2023/04/02 01:13:10 ----- PS len: 4
2023/04/02 01:13:10 [CLIENT] executor 3 has 20 replies
2023/04/02 01:13:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:10 [SERVER] executor 1 has 17 replies
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 315 signal and 278 cover from userspace component
2023/04/02 01:13:10 [SERVER] executor 2 has 19 replies
2023/04/02 01:13:10 [SERVER] executor 0 has 67 replies
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 315 signal and 278 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 7 signal and 7 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 2545 signal and 2099 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 105 signal and 116 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 1424 signal and 1141 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 47 signal and 66 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 37 signal and 36 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 1049 signal and 1446 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 1074 signal and 988 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 709 signal and 787 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 662 signal and 1326 cover from userspace component
2023/04/02 01:13:10 fuzzer receive 1149 signal and 950 cover from executor 3
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 2583 signal and 2189 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 128 signal and 270 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 2548 signal and 2097 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 104 signal and 116 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 47 signal and 66 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 1438 signal and 1671 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 387 signal and 410 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 2803 signal and 2269 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 143 signal and 270 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 444 signal and 793 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 64 signal and 377 cover from userspace component
2023/04/02 01:13:10 fuzzer receive 13 signal and 919 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 308 signal and 1136 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 549 signal and 947 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 195 signal and 600 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 44 signal and 600 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 0 signal and 738 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:10 fuzzer receive 349 signal and 1261 cover from executor 3
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 196 signal and 349 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 54 signal and 51 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 491 signal and 523 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 67 signal and 142 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 3 signal and 7 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 102 signal and 526 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 361 signal and 665 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 185 signal and 785 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 39 signal and 501 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 6 signal and 126 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 3 signal and 9 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 200 signal and 286 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 1288 signal and 1168 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 27 signal and 504 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 1230 signal and 1141 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 297 signal and 429 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 29 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 1731 signal and 2264 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
time breakdown 2: 98, 3383, 0
before receive testcase: 0 0
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 637 signal and 686 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 2 receive 721 signal and 1659 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 889 signal and 1187 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 971 signal and 1789 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 1 receive 1396 signal and 2229 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 2246 signal and 2083 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 2 signal and 3 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 144 signal and 497 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 807 signal and 1245 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 607 signal and 1048 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 620 signal and 603 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 47 signal and 51 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 346 signal and 526 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 62 signal and 142 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 7 signal and 9 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 74 signal and 272 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 1686 signal and 1460 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 603 signal and 890 cover from userspace component
2023/04/02 01:13:10 ------- fuzzer executor 0 receive 16 signal and 16 cover from userspace component
2023/04/02 01:13:10 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:13:10 disable threaded and collide
2023/04/02 01:13:10 prog length: 6
2023/04/02 01:13:10 prog length: 20
2023/04/02 01:13:10 HasCrashFail:true HasNetFail:false
01:13:10 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
syz_failure_sync(0x0, 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-460
remove dir time 25
-----finish removing dir
mkdir time 20
receive_execute: 29, 46
receive_execute: 65, 45
receive_execute: 59, 46
executor 3 create dir /root/glusterfs-client/dfs-0-461 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-461
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 122, 53
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5826, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 5826, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 6, 0, 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 5755, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 5755, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8482, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 8482, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 14, 0, 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 3480, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 3480, flag collect 1
----- executor 3 cover number : 942, signal number : 548
----- completed 8
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 196
----- completed 9
execute_call 0, 76, 0, 16
execute_one loop: 0, 0, 92
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 142, 0, 0
execute_one loop: 0, 0, 142
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 write_call_output, size 0, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 cover number : 539, signal number : 682
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1210
----- executor 0 executes write_coverage_signal cov->size 2714, flag collect 1
----- executor 0 cover number : 979, signal number : 1061
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 19412, flag collect 1
----- executor 0 cover number : 1133, signal number : 1089
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 21
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 493
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 63
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 651, flag collect 1
----- executor 0 cover number : 37, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
executor 0 server cover_cnt 16 output_pos_value 9364
-----executor 0 collect shmids 50
----- directly resend shmid 50
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 51
----- directly resend shmid 51
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 52
----- directly resend shmid 52
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 53
----- directly resend shmid 53
-----executor 0 collect shmids 55
----- directly resend shmid 55
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 56
----- directly resend shmid 56
-----executor 0 collect shmids 4
----- directly resend shmid 4
execute_call 0, 138, 0, 0
execute_one loop: 0, 0, 138
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 139, 0, 0
execute_one loop: 0, 0, 139
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 15
execute_call 0, 79, 0, 14
execute_one loop: 0, 0, 93
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2570, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 2570, flag collect 1
----- executor 3 cover number : 739, signal number : 0
----- completed 18
execute_call 0, 13, 0, 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 108, 0, 0
execute_one loop: 0, 0, 108
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
==24177==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2905, 0, 0
execute_one loop: 0, 0, 2905
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3293, 0
execute_one time: 2, 3293
----- executor 3 write_call_output, size 0, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 2905, 0, 0
execute_one loop: 0, 0, 2905
cover_reset in execute_call
Node-0:/root/daemon-log.24249
----- executor 3 write_call_output, size 32765, pid 1290, write pid:1290
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 1260, signal number : 345
----- completed 20
execute_call 0, 85, 0, 7
execute_one loop: 0, 0, 92
executor 3, execute_one inner time: 0, 3377, 0
execute_one time: 2, 3377
2023/04/02 01:13:13 for select break: 1
2023/04/02 01:13:13 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 175, 3381, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 852, flag collect 1
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 2 cover number : 287, signal number : 329
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 4
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 866, flag collect 1
----- executor 1 cover number : 287, signal number : 329
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 45
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 539, signal number : 616
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 199
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 539, signal number : 617
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2124, signal number : 2473
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 26358, flag collect 1
----- executor 0 cover number : 539, signal number : 667
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2123, signal number : 2473
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 0 cover number : 1141, signal number : 1053
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 28
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 1612, signal number : 1184
----- executor 2 executes write_coverage_signal cov->size 11013, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1167, signal number : 351
----- executor 2 executes write_coverage_signal cov->size 27059, flag collect 1
----- executor 1 cover number : 1771, signal number : 1449
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 2028, signal number : 2166
----- executor 0 executes write_coverage_signal cov->size 4784, flag collect 1
----- executor 0 cover number : 350, signal number : 100
----- executor 0 executes write_coverage_signal cov->size 1176, flag collect 1
----- executor 0 cover number : 497, signal number : 161
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2323, signal number : 2716
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 883, flag collect 1
----- executor 2 cover number : 269, signal number : 129
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 133
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 4254, flag collect 1
----- executor 2 cover number : 938, signal number : 487
----- executor 2 executes write_coverage_signal cov->size 1216, flag collect 1
----- executor 2 cover number : 390, signal number : 84
----- executor 2 executes write_coverage_signal cov->size 7990, flag collect 1
----- executor 2 cover number : 902, signal number : 786
----- executor 2 executes write_coverage_signal cov->size 27633, flag collect 1
----- executor 1 cover number : 409, signal number : 297
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 917, signal number : 518
----- executor 0 executes write_coverage_signal cov->size 22986, flag collect 1
----- executor 2 cover number : 1143, signal number : 698
----- executor 2 executes write_coverage_signal cov->size 31531, flag collect 1
----- executor 0 cover number : 1489, signal number : 1212
----- executor 0 executes write_coverage_signal cov->size 1537, flag collect 1
----- executor 0 cover number : 575, signal number : 615
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 48
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 1 cover number : 2240, signal number : 2789
----- executor 1 executes write_coverage_signal cov->size 881, flag collect 1
----- executor 1 cover number : 269, signal number : 145
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 144
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 526, signal number : 361
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1968, signal number : 1154
----- executor 2 executes write_coverage_signal cov->size 29705, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2746, flag collect 1
----- executor 1 cover number : 627, signal number : 347
----- executor 1 executes write_coverage_signal cov->size 2726, flag collect 1
----- executor 1 cover number : 865, signal number : 249
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2255, signal number : 1356
executor 2 server cover_cnt 20 output_pos_value 29057
----- executor 0 cover number : 142, signal number : 61
----- executor 0 executes write_coverage_signal cov->size 31, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 721, flag collect 1
----- executor 0 cover number : 276, signal number : 85
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 14
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
2023/04/02 01:13:13 for select break: 1
2023/04/02 01:13:13 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 75, 3447, 0
before receive testcase: 0 0
----- executor 0 cover number : 523, signal number : 119
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 595, signal number : 624
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1444, signal number : 1812
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1206, signal number : 1035
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 890, signal number : 599
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 1
----- executor 0 cover number : 243, signal number : 48
executor 0 server cover_cnt 72 output_pos_value 34838
----- executor 1 cover number : 1635, signal number : 1067
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 110, 3468, 0
before receive testcase: 0 1
2023/04/02 01:13:13 for select break: 1
2023/04/02 01:13:13 --------- executor 0 receive reply, reply.done 1
----- executor 1 cover number : 2380, signal number : 1556
executor 1 server cover_cnt 19 output_pos_value 28674
2023/04/02 01:13:13 for select break: 1
2023/04/02 01:13:13 --------- executor 1 receive reply, reply.done 1
2023/04/02 01:13:13 wg wait finish
2023/04/02 01:13:13 ------ all executors finish execution
2023/04/02 01:13:13 exec time: 3522
2023/04/02 01:13:13 ----- PS len: 4
2023/04/02 01:13:13 [CLIENT] executor 3 has 20 replies
2023/04/02 01:13:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:13 [SERVER] executor 1 has 19 replies
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 329 signal and 287 cover from userspace component
2023/04/02 01:13:13 [SERVER] executor 0 has 72 replies
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 682 signal and 539 cover from userspace component
2023/04/02 01:13:13 [SERVER] executor 2 has 20 replies
time breakdown 1: 105, 3476, 0
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 1210 signal and 1141 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 329 signal and 287 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 617 signal and 539 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 616 signal and 539 cover from userspace component
before receive testcase: 0 0
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 2473 signal and 2123 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:13 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 548 signal and 942 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 196 signal and 601 cover from executor 3
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 2473 signal and 2124 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 1449 signal and 1771 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 297 signal and 409 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 2789 signal and 2240 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 1184 signal and 1612 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 1061 signal and 979 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 1089 signal and 1133 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 21 signal and 27 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 145 signal and 269 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 54 signal and 51 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 144 signal and 526 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 493 signal and 523 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 63 signal and 142 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 351 signal and 1167 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 2 signal and 37 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 2716 signal and 2323 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 129 signal and 269 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 45 signal and 501 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 133 signal and 526 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 487 signal and 938 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 84 signal and 390 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 786 signal and 902 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 698 signal and 1143 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 6 signal and 126 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 2 signal and 9 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 199 signal and 286 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 1154 signal and 1968 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 2 receive 1356 signal and 2255 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 667 signal and 539 cover from userspace component
2023/04/02 01:13:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 1053 signal and 1141 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 28 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 347 signal and 627 cover from userspace component
2023/04/02 01:13:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 249 signal and 865 cover from userspace component
2023/04/02 01:13:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 624 signal and 595 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 1035 signal and 1206 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 1067 signal and 1635 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 1 receive 1556 signal and 2380 cover from userspace component
2023/04/02 01:13:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 0 signal and 739 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:13 fuzzer receive 345 signal and 1260 cover from executor 3
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 2166 signal and 2028 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 100 signal and 350 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 161 signal and 497 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 518 signal and 917 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 1212 signal and 1489 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 615 signal and 575 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 17 signal and 27 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 4 signal and 13 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 48 signal and 51 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 361 signal and 526 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 61 signal and 142 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 85 signal and 276 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 14 signal and 51 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 119 signal and 523 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 1812 signal and 1444 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 599 signal and 890 cover from userspace component
2023/04/02 01:13:13 ------- fuzzer executor 0 receive 48 signal and 243 cover from userspace component
2023/04/02 01:13:13 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:13:14 failure smash: true false
2023/04/02 01:13:14 HasCrashFail: true, .HasNetFail: false
2023/04/02 01:13:14 disable threaded and collide
2023/04/02 01:13:14 prog length: 6
2023/04/02 01:13:14 prog length: 20
2023/04/02 01:13:14 send to channel: true, false
2023/04/02 01:13:14 HasCrashFail:true HasNetFail:false
01:13:14 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="cb7ee857caba085bff7aa5fd1ab712efc6d0ecc083e40e22353381ae0529e549b4b3c225e9e7dd3309c66c1a7bab8814b0e6c48855b801b5dfb13a69efd0d6f699259bc0ea6452ba6fba1c3ee14eda11c6df5db4d9deee4e769d8df68fa73e07ea220aafd52c5551443fc4906f30e274d3f9f84034deeacc4f2d807fd47f2ef9f52f7960545f007cb50c19a957ce7f4ae2fd56c3a82e6733b0c4afba39264467588d62f356893abc9c186962872525ce571a5ad6e7ee2e02fcab095e3cbe9335703cd66910900071696cb0e740610af5cb1d711720646b2137f14caaf49ce7b88c62afa4fba83db25195616b19c0db64bd5eec5331ff325468d193eaf8def4ffbfb6eaf8069dcf864003d327ed67a3ef351b107b1eb30c7de25d803debc6507cacefe63c88b8a10b9b2ce48272f84ab5f69a0f9d99534efb5dfff362f03f7253caa55cc12ae2e238c05eee10cfa5f146dd18033a2bf64e1aae1e33bf8386bbee03319829eee147f74b749806f05fba16c165ef6b2e33a43935fdd47be314aacb142eba14aea5396077dcf0225428664ab59fe6a9f55a738b6dde9dec2e387be91a932b607042386923b25db40605962b66bc6b1bdf59402bda51de81152b9a4756ff7983c5e8610a69d362969d2583890d485e953543536b3d63b0c5d165597ea8e0a1ed73f5307d15ad804be791486afadd349f9e7627f760e9a773a0599593ed069a549126a3159065c75925cb457f415f00d3427d77ba55bfc73b9f16326021b6a573530f0822f91a164a1dc55f80268be2186b8a700804fbaf252fc028bdf25aa03ef7b9a01a68eaeba81d2d9c00078ee423de313387a2b60e5d503621bdc4c56fcdf534524d94541b4d76957681beeff11b0efd047d2acc239d30d6a86ec9848ad9530b66ae00a11750276b285ab1d9b710cdb05a1912b245e0f22a1fff6f505fd10e4815e345891c7e3a084941c87847043e5f90af07b0a9ed5b450c804d706c404834ab846a9fe14eb1f7a06e404f3fad62afb5b137e9533615cb1e79b887a8b3f536c00977560d079351b03b7bfea44a1bdb28e041c568b9722cf9a0f85cd08b28d833c410ca4b2f99c627edad47dd8242c029a0c09ac40418b800b5bb18c8106443efe02605a6089caa0bfe7e92cec6d8be303f1446c40be6057dece2d630ddc0a83cc29e6666c9e60a24e51bdeaed23e290e08ecfcd4e486122c5bb7f287ebc0aeb7738a75ddfbc5f32656d8d4418e8102b135ab14920713c7122371a42c7ad3af099fa90e4f95967b8b9e08d822242ca107c4aef30308909abef2000d9be2f3afe81a7700c21585e471fc18738b8bc85c62c3027848a005f6f74d7260a136e58656dc23a0b7994d155bcee63ddc9a74ec6ee0813e1ac4625cc2b59dfb63ee529b102d8d280ba75f7b16d3189f309e0d68c12de815423b3f0f3acacea65f158c54444c939f7a6ebe09575f5d6378afe468030d15ef4c605a330d7dec27cba26aa3ca92742330612a9c410dfe1aadfe54b8ae2c43d7ca786ef528b4df208042bb083c46ed9491ac9c2f6f77c91775ce54e8a09dab45d907227b9d12ecb63340f9e23f9f6db355faafcc926ebab8c5ca6937680c3351b17d11f854470d7e48949d8924ab4fc25eafcc734739af53bc970444b70d9a59347e55be397ef9a91719deccbb6fae999b21352c9ac681e5307a1326368bd0855e134ba7a136c2884181bf1aaaf7181dc6be357c78b53d637caf33ea0481a8473de870f584255370162fa6da9b6e82998e41308ab6738e550b309eacb522dfd308fed27e7b862477713ee6224b07b604937d448950034216ab9e741c034cfc3c8dd5b4cb89a4cfcaa4c0e490ed6eacf73dfd58fba14ecc2cd42d522054027cc75a452d4815fa94a6cda23415c1268351de5ec91e31a3b3846a9b1de3e97d0c554d04d895d067d49aa29da787acb068f67472ce49684b59ca3875002382003932b86eb2b0824e8683c8290d58178f11da594e271df6d2dadb442053cec938f114cd45b54a60290fdf317d404006567301221a887aa4545da87c5643ecd5a86c837d2234628851b809d0f129ca9ac001ae81230671fd7a0b0316c283714f560baa25d98548a0e95a69de4f5f3c89ae90f8dcd363fb948cfe759543d0ae9e496286a11fdbef7db7812a37fedf87c72c23a2e98ee2447a93f9b0033a9b49e64d80ffa599743bd6c363e44d9124cbf927ecb4d6daeb0f9a70e2ab6518ac52706facc6bc9f591ab03e4a301a27c9624ee22a886fb9c1431c2e9ac545db0bf642a93bc68d1e6d04e9004a1299f6f061307d1d86c40c0d2ff52dcb4c498706ab94c29fb456cfa5dcc75572256ca319cab6f7246994e20af4bd806834821de1bc855b66dc52c7444fd2d5f25a1d00298f15b6cd83c0697424c2294184ad8565e0deb19c4d084495268c910a90e87639828c435bc27d2defc6d043097ed43a2891d7ce11b32c921c5ab80af95398b44ba81c9f186a59f14ccc814f3d1701e294164a2407c47632929c7a8e36168e73108c1d4ce3fda7d74b76b5ff9cb2a54b25161298b282b53435847a3d1b3a31c2544640fe6b46bdda16ecf11327e094817b294da26e299c46d06f35ede1f9db0cf248c1f3093b08ec2a108e3f935660b8d37e852db6338642383cca41a50c042bfd57fef9aecf43d1a8be072c17f5b00e13f3ae2cb9aa5c78d797d4c4f86f0c2e17f41940b9ddb2aeca472b94814752bfc36ecc32bf7eafc12a20ef522736d6b732a3e208ad443a1ce675f385595df53ae4130d220b1b8898ff448c96c4e322540c119146a710bfd68efe71e65b4306e899bc83c675143030dd721457c7d2a7e1934020e9a86b0153b0122d92e63e74eb8315e10eb3e5af0e3cadf6902e6e9541239a6cbe252adefeac36f1d736b36cd160e5348ad06120db3ad4c86e086da3ce15bfd6144633a6bba633ff854032fdb533a49c4ca8911f4323b6d64b7d052ff3be04d7dd9a4bfd004265fc3362763cacba90912379aa5ae3dca7c81069ca54403f9baba9d09fc16986b3d0c3f1a8469f75e4a57ef85468b70c7f816b106486d5da0c1b9ae1908548877207b6705d87b9808863c607767c0cc97b8575c49b6e1c221250f7ba2e387105474e89186c11e2ae754d1dcf3a63a820cf753d97f354e59c14902ba9cf2795c8f47257e30e6a2800a1d331fafee064b35653e40bc8e61fb34fb3a73009f63b249bf27c8b49f0899e189c86c5fb3245a282e81fed043e9d7b98cbae92734f2433fed63714dcf4fa22014c090b2d6f742439c8fc681e29a554ec28904c4e8e10a10a17d1ecdca7cc60ed8de8c773c6c2165f3ef8d9d9e6495d5043b5b602836c10a40513637ee7c40a0929dea1107d909dbdf33349f0e94c38d8dd74212082a65992a664c20f157a5652335e2b85d4f7ed01f0ecfe236b9be6b6e311c4b62f7fa4fe93a94ba5e601fe27ae89c47dd755b7bd5fe8b04b697a01417b6d021063a71c58ba19cb2554429aa740062a417171aecf88f4951c980f39ac6ffced130c0c6727fb8c33480167d94a414ad60547ff2c9db96ac7f03c821d19e28d0eacadabacdeead42b5e87aa8d7f827226dfcb215b13ee19b36200232d802149cb001718ba9607427ce23f22b188bbd6ca1a0c4f69c0949b1b3731010cb448f41acb04fd729620233f6e06c261d8b29ea47c7e6b82b561dea494be3a0c81d63653c8c677d443f225364dc4695e3f5ef69a6611bf1907343482f8c00b5e77c84e08800f2ac78f9429e6b6c24a316d62aed541fcbc7a2100afd265dd2b3a2d677a92d1417a2bec87311efcd89f4082028ba2e4f952357a4a10ae7b98a406d50449d5c27e1abbb4f0c15eecf8230b9364f4175cf33f4ee56824e4206594dd465110a6ecaaf7247f937a9ddbbb0df3de2a685055ca188be8920cf1ba1ddc74f4e522da5b4dcf7134542ac84fa9bc0a81dfea038bb877263154ae709a7aa9bcde773ca15f51d068aa9d0686c444ae987a9ef0842fa938e830d49f35d0c8dc3741b464a5f1afd544dc1877a9866031a3e0e642f2fa30b854c57b2beb268db912157fe2a79bb8a2077532ed28951e5c53a9089c31860e69fabd63df2975eb400229eef06aea8a44bdf03e491177f3e30daa80d37b77f434638f8bfd48105b17375afeaefc63529dc792f3ec8c79313d19c8162fed589357da69e5600a044536ef8337b98e255109f63b8ead8f963fa3ae2fb4a65953521bd7aee73ab2483930fbe90786149a034dd1f5492a33fa9abce711a47c957ae497f8146b929d0877a2c4d6efef1e7fd56f171e92deb2d7bb1c03237ea9a0b2b1058cd01c047631c9abfe85eee1fa6732d5d0e04a20d3c4dd1551fce5a27d12d0ffa0f19e32221ed47e5b07768b03903b1060e4bd07e73738a227788b8a6aecf1dc72fd46df67e5087d4a856df4efa0a6dc963e99a68a73d01b399487a6c272bc14b6f58ee64f29b84bdd75f3d39c499fc9ff02ffe0c268989cc9bdffb80b7639f405528c5a804278ff97559f9a9f807566ca84b2cb6b4fd2bdefeaf8a32b7acfd453297198814ab43ebeeffe6af7b3d0689bcc8e1baecf6ea3764e7ad21f9fe46b102a7010a650a19e1a767dbd27687d19aa6cd8cef074926a9e5d97ddc811567e6fd1a41b901026d4e94e8b364ed7f50f848046898e76a7b724c66292d418d10be9612f40594b7cc2f2086c546b1ecc6cb97d927bf06e55d43e6379063eeea681ba38042e403958bb5ba20c8b8e2809f47e336b3b0ede2cc75c866fc6e1cea9c7f9f3f1afc10513ad970c9a66e5b8bc6210c6280f2f11a213fe2a6f7180a718cc0debed0941041d8cf9b1d12805144325be53fc15aa94d850c57c657703458188f9d4a135b18b45cfde7d21a5aaba4b7ed01dc935e0e1741bdf7d979195cf38c92c45af9ef1f809e5d26fcda03ee31dd7498616992d9fa707e8c78b2ff0061dca25feabb8919a0f70cd643fe5bdaae4a25c4f7481889933ae499a49f9351b9ce1a8366921de4c8bcac59d0c94411aaf1e1163be3095c24e3f9d007d788fe12ecf7869e0508ed3ac973b5c7ff0b72621c746780ebfd698ee2af2a6afc6a7bd3aa31ba1b744c4299f51bd46e98ea0423c787604633729dbf53fccff1fa20572bf0209eac508448580f09e4c758e46b63ec0e68bd1a3867d2117d016b53a1896bd48332dca9e41f8bda098ed0c6ad9b37de8ad580bc1ce1e196e88de534f3ad613e4165c861e337e1233583c0869083e55e26cb6db896dea2d6c4769078c929b97be7b17fd311ae95ebea14d7286323babcf08c6ec3a11c21442795a159012faf7d4ccd86c66c3e6ea857cdb9a287990cf1dcc25df6e212a36d82dcd1c4a5cf79ee9f4e8aaf5c40098cb03e834e97aab8267655b02d470b1097ab4bd40370f10ee034782fc407b49010d2e9b6a752c5f4aca9c07858f20fd7722e5b52f9f909c9232f2b789b50f783608a07064d62e24d7e50ff46fa7b957943daf5523b19ff7c0ab4a1b20f4484fb0df8e57356d79fb8143825073547fec3ca5b601de4aa617c1272115cb2aee0340131f3d6a2159e40377c5c6a9bb0c96cdfb0412f34a587f353820b2874cfa26da74119569e27744cb9218829894fd5f466eb9c803e938b1054ed55d659d8e8197c578e2d0ec444efea884a3262c43bcfc5de911bef32e4a08b9baf5d02e3e2e4e0df44b821ba4561fb528c9ed17fa9b36b002e2539e6dfb18c8f16e5b90f966f915564f72c705a7756e07be1e8bd6381c78499b7acab8b374afad15f9f4", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
syz_failure_sync(0x0, 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir: /root/glusterfs-client/dfs-0-461
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 35
-----finish removing dir
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-462 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-462
receive_execute: 28, 60
receive_execute: 37, 60
receive_execute: 57, 60
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 116, 66
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 5, 2
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5832, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 5832, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 5, 0, 5
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 5, 0, 4
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8494, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 8494, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 17, 0, 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 3486, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 3486, flag collect 1
----- executor 3 cover number : 942, signal number : 548
----- completed 8
execute_call 0, 18, 0, 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 196
----- completed 9
execute_call 0, 92, 0, 17
execute_one loop: 0, 0, 109
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 173, 0, 0
execute_one loop: 0, 0, 173
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1425
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 540, signal number : 469
----- executor 0 executes write_coverage_signal cov->size 2401, flag collect 1
----- executor 0 cover number : 867, signal number : 960
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 0 cover number : 349, signal number : 237
----- executor 0 executes write_coverage_signal cov->size 27852, flag collect 1
----- executor 0 cover number : 1355, signal number : 1350
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 490
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 63
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 20 output_pos_value 10269
-----executor 0 collect shmids 58
----- directly resend shmid 58
-----executor 0 collect shmids 61
----- directly resend shmid 61
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
execute_call 0, 153, 0, 0
execute_one loop: 0, 0, 153
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 154, 0, 0
execute_one loop: 0, 0, 154
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 15
execute_call 0, 84, 0, 7
execute_one loop: 0, 0, 91
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2573, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 2573, flag collect 1
----- executor 3 cover number : 739, signal number : 0
----- completed 18
execute_call 0, 14, 0, 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 19
execute_call 0, 84, 0, 18
execute_one loop: 0, 0, 102
cover_reset in execute_call
execute_call 0, 209, 0, 0
execute_one loop: 0, 0, 209
executor 3 waits for recv msg
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
==24249==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.24301
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
==24301==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.24283
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2663, 0, 0
execute_one loop: 0, 0, 2663
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3198, 0
execute_one time: 1, 3198
2023/04/02 01:13:17 for select break: 1
2023/04/02 01:13:17 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 0, pid 1291, write pid:1291
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 20
execute_call 0, 2664, 0, 0
execute_one loop: 0, 0, 2664
executor 3, execute_one inner time: 0, 3192, 0
execute_one time: 1, 3193
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 65, signal number : 74
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 23810, flag collect 1
----- executor 2 cover number : 65, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 23588, flag collect 1
----- executor 0 cover number : 501, signal number : 50
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 182, 3195, 0
before receive testcase: 0 0
----- executor 0 cover number : 126, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 1 cover number : 1723, signal number : 2108
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 66, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 27, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 5566, flag collect 1
----- executor 0 cover number : 286, signal number : 208
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1723, signal number : 2110
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 5560, flag collect 1
----- executor 1 cover number : 281, signal number : 311
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 281, signal number : 312
----- executor 2 executes write_coverage_signal cov->size 27, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 17725, flag collect 1
----- executor 2 cover number : 1453, signal number : 937
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1694, signal number : 1174
----- executor 1 executes write_coverage_signal cov->size 2059, flag collect 1
----- executor 1 cover number : 409, signal number : 8
----- executor 1 executes write_coverage_signal cov->size 11824, flag collect 1
----- executor 1 cover number : 1267, signal number : 1120
----- executor 1 executes write_coverage_signal cov->size 30000, flag collect 1
----- executor 2 cover number : 410, signal number : 99
----- executor 2 executes write_coverage_signal cov->size 11822, flag collect 1
----- executor 2 cover number : 1266, signal number : 1116
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2649, signal number : 2884
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1101, flag collect 1
----- executor 1 cover number : 280, signal number : 166
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2567, flag collect 1
----- executor 1 cover number : 722, signal number : 380
----- executor 1 executes write_coverage_signal cov->size 2098, flag collect 1
----- executor 0 cover number : 1141, signal number : 1267
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 605, signal number : 185
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2259, signal number : 2212
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1103, flag collect 1
----- executor 2 cover number : 280, signal number : 177
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3162, flag collect 1
----- executor 2 cover number : 769, signal number : 471
----- executor 2 executes write_coverage_signal cov->size 1530, flag collect 1
----- executor 2 cover number : 435, signal number : 111
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1877, signal number : 1860
----- executor 1 executes write_coverage_signal cov->size 5463, flag collect 1
----- executor 1 cover number : 730, signal number : 76
----- executor 1 executes write_coverage_signal cov->size 29507, flag collect 1
----- executor 2 cover number : 1189, signal number : 1318
----- executor 2 executes write_coverage_signal cov->size 6934, flag collect 1
----- executor 0 cover number : 540, signal number : 439
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 2 cover number : 1115, signal number : 573
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 30
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 2161, signal number : 1333
----- executor 1 executes write_coverage_signal cov->size 31099, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 2 cover number : 2124, signal number : 1586
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 1 cover number : 1893, signal number : 928
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
executor 1 server cover_cnt 20 output_pos_value 29147
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/04/02 01:13:17 for select break: 1
2023/04/02 01:13:17 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 88, 3245, 0
before receive testcase: 0 0
----- executor 2 cover number : 1788, signal number : 802
executor 2 server cover_cnt 20 output_pos_value 27237
2023/04/02 01:13:17 for select break: 1
2023/04/02 01:13:17 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 117, 3250, 0
before receive testcase: 0 0
----- executor 0 cover number : 2106, signal number : 2352
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 1176, flag collect 1
----- executor 0 cover number : 497, signal number : 161
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 1
----- executor 0 cover number : 31, signal number : 21
----- executor 0 executes write_coverage_signal cov->size 42, flag collect 1
----- executor 0 cover number : 34, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1048, signal number : 660
----- executor 0 executes write_coverage_signal cov->size 31426, flag collect 1
----- executor 0 cover number : 1802, signal number : 1486
----- executor 0 executes write_coverage_signal cov->size 8891, flag collect 1
----- executor 0 cover number : 955, signal number : 1012
----- executor 0 executes write_coverage_signal cov->size 4109, flag collect 1
----- executor 0 cover number : 1173, signal number : 941
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 15
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 52
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 0 cover number : 526, signal number : 389
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 72
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 1
----- executor 0 cover number : 10, signal number : 12
----- executor 0 executes write_coverage_signal cov->size 721, flag collect 1
----- executor 0 cover number : 276, signal number : 108
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4337, flag collect 1
----- executor 0 cover number : 564, signal number : 479
----- executor 0 executes write_coverage_signal cov->size 3636, flag collect 1
----- executor 0 cover number : 585, signal number : 126
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 0 cover number : 525, signal number : 185
----- executor 0 executes write_coverage_signal cov->size 29604, flag collect 1
----- executor 0 cover number : 1845, signal number : 2114
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 991, signal number : 652
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 1
----- executor 0 cover number : 243, signal number : 58
----- executor 0 executes write_coverage_signal cov->size 9612, flag collect 1
----- executor 0 cover number : 1226, signal number : 1208
----- executor 0 executes write_coverage_signal cov->size 8617, flag collect 1
----- executor 0 cover number : 1132, signal number : 949
----- executor 0 executes write_coverage_signal cov->size 7255, flag collect 1
----- executor 0 cover number : 1155, signal number : 383
----- executor 0 executes write_coverage_signal cov->size 7280, flag collect 1
----- executor 0 cover number : 1155, signal number : 285
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 6, signal number : 2
executor 0 server cover_cnt 84 output_pos_value 49662
2023/04/02 01:13:17 for select break: 1
2023/04/02 01:13:17 --------- executor 0 receive reply, reply.done 1
2023/04/02 01:13:17 wg wait finish
2023/04/02 01:13:17 ------ all executors finish execution
2023/04/02 01:13:17 exec time: 3354
2023/04/02 01:13:17 ----- PS len: 4
2023/04/02 01:13:17 [CLIENT] executor 3 has 20 replies
2023/04/02 01:13:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:13:17 [SERVER] executor 0 has 84 replies
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 1425 signal and 1141 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 469 signal and 540 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 960 signal and 867 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
time breakdown 0: 97, 3295, 0
2023/04/02 01:13:17 [SERVER] executor 1 has 20 replies
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 74 signal and 65 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 237 signal and 349 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 1350 signal and 1355 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 7 signal and 7 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 18 signal and 27 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 54 signal and 51 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 490 signal and 523 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 2108 signal and 1723 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 63 signal and 142 cover from userspace component
2023/04/02 01:13:17 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/04/02 01:13:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:17 [SERVER] executor 2 has 20 replies
2023/04/02 01:13:17 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
2023/04/02 01:13:17 fuzzer receive 548 signal and 942 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 196 signal and 601 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 3 signal and 66 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 2110 signal and 1723 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 3 signal and 66 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 311 signal and 281 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 312 signal and 281 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 1 signal and 51 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 50 signal and 501 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 6 signal and 126 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 2 signal and 10 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 208 signal and 286 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 1267 signal and 1141 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 439 signal and 540 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 30 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:13:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 0 signal and 739 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:13:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 937 signal and 1453 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 99 signal and 410 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 1174 signal and 1694 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 1116 signal and 1266 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 8 signal and 409 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 2212 signal and 2259 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 1120 signal and 1267 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 177 signal and 280 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 471 signal and 769 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 111 signal and 435 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 1318 signal and 1189 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 2884 signal and 2649 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 2352 signal and 2106 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 166 signal and 280 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 2 signal and 3 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 161 signal and 497 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 21 signal and 31 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 380 signal and 722 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 7 signal and 34 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 185 signal and 605 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 660 signal and 1048 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 1860 signal and 1877 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 76 signal and 730 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 1486 signal and 1802 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 573 signal and 1115 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 1012 signal and 955 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 1333 signal and 2161 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 941 signal and 1173 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 1 receive 928 signal and 1893 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 15 signal and 27 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 1586 signal and 2124 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 3 signal and 13 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 52 signal and 51 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 2 receive 802 signal and 1788 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 389 signal and 526 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 72 signal and 142 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 12 signal and 10 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 108 signal and 276 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 5 signal and 51 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 479 signal and 564 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 126 signal and 585 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 185 signal and 525 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 2114 signal and 1845 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 652 signal and 991 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 58 signal and 243 cover from userspace component
before receive testcase: 0 0
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 1208 signal and 1226 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 949 signal and 1132 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 383 signal and 1155 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 285 signal and 1155 cover from userspace component
2023/04/02 01:13:17 ------- fuzzer executor 0 receive 2 signal and 6 cover from userspace component
2023/04/02 01:13:17 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:13:17 disable threaded and collide
2023/04/02 01:13:17 prog length: 6
2023/04/02 01:13:17 prog length: 20
2023/04/02 01:13:17 HasCrashFail:true HasNetFail:false
01:13:17 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
syz_failure_sync(0x0, 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-462
==24283==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.24327
remove dir time 44
-----finish removing dir
mkdir time 39
executor 3 create dir /root/glusterfs-client/dfs-0-463 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-463
receive_execute: 87, 83
receive_execute: 82, 83
receive_execute: 37, 83
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 130, 88
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5824, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 1
----- executor 3 cover number : 950, signal number : 1149
----- completed 4
execute_call 0, 6, 0, 3
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 1
----- executor 3 cover number : 919, signal number : 13
----- completed 5
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8482, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 8482, flag collect 1
----- executor 3 cover number : 1136, signal number : 308
----- completed 7
execute_call 0, 10, 0, 3
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 3483, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 3483, flag collect 1
----- executor 3 cover number : 947, signal number : 549
----- completed 8
execute_call 0, 13, 0, 3
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 195
----- completed 9
execute_call 0, 93, 0, 22
execute_one loop: 0, 0, 115
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 175, 0, 0
execute_one loop: 0, 0, 175
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 7477, flag collect 1
----- executor 0 cover number : 804, signal number : 989
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1737, signal number : 2007
----- executor 0 executes write_coverage_signal cov->size 5778, flag collect 1
----- executor 0 cover number : 533, signal number : 436
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 69
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1001, signal number : 583
----- executor 0 executes write_coverage_signal cov->size 1330, flag collect 1
----- executor 0 cover number : 570, signal number : 134
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 17 output_pos_value 9211
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
----- executor 3 write_call_output, size 0, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 97, 0, 0
execute_one loop: 0, 0, 97
cover_reset in execute_call
-----executor 0 collect shmids 36
----- directly resend shmid 36
execute_call 0, 97, 0, 0
execute_one loop: 0, 0, 97
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 51
----- directly resend shmid 51
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 32765, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 8
----- directly resend shmid 8
----- executor 3 cover number : 600, signal number : 44
----- completed 15
execute_call 0, 69, 0, 14
execute_one loop: 0, 0, 83
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2567, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 2567, flag collect 1
----- executor 3 cover number : 738, signal number : 0
----- completed 18
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
----- executor 3 write_call_output, size 32765, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 44
----- completed 19
execute_call 0, 70, 0, 13
execute_one loop: 0, 0, 83
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 176, 0, 0
execute_one loop: 0, 0, 176
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
==24327==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
----- executor 3 write_call_output, size 0, pid 1292, write pid:1292
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 20
execute_call 0, 2730, 0, 0
execute_one loop: 0, 0, 2730
executor 3, execute_one inner time: 1, 3171, 0
execute_one time: 2, 3172
2023/04/02 01:13:20 for select break: 1
2023/04/02 01:13:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 218, 3175, 0
before receive testcase: 0 0
execute_call 0, 2729, 0, 0
execute_one loop: 0, 0, 2729
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3177, 0
execute_one time: 1, 3177
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 2 cover number : 7, signal number : 7
----- executor 2 executes write_coverage_signal cov->size 27098, flag collect 1
----- executor 1 cover number : 7, signal number : 7
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 743, signal number : 899
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1567, signal number : 1493
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 2 cover number : 116, signal number : 63
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 1
----- executor 2 cover number : 66, signal number : 47
----- executor 2 executes write_coverage_signal cov->size 13944, flag collect 1
----- executor 0 cover number : 142, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 709, flag collect 1
----- executor 0 cover number : 289, signal number : 207
----- executor 0 executes write_coverage_signal cov->size 76, flag collect 1
----- executor 0 cover number : 36, signal number : 33
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 410, signal number : 236
----- executor 2 executes write_coverage_signal cov->size 1377, flag collect 1
----- executor 2 cover number : 409, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 29462, flag collect 1
----- executor 1 cover number : 50, signal number : 67
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2128, signal number : 2723
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 757, flag collect 1
----- executor 2 cover number : 270, signal number : 218
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 167
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 2002, flag collect 1
----- executor 2 cover number : 657, signal number : 198
----- executor 2 executes write_coverage_signal cov->size 3474, flag collect 1
----- executor 2 cover number : 774, signal number : 359
----- executor 2 executes write_coverage_signal cov->size 3998, flag collect 1
----- executor 2 cover number : 658, signal number : 477
----- executor 2 executes write_coverage_signal cov->size 27523, flag collect 1
----- executor 1 cover number : 1567, signal number : 1988
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 116, signal number : 100
----- executor 1 executes write_coverage_signal cov->size 126, flag collect 1
----- executor 1 cover number : 66, signal number : 47
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1106
----- executor 0 executes write_coverage_signal cov->size 1268, flag collect 1
----- executor 2 cover number : 1140, signal number : 831
----- executor 2 executes write_coverage_signal cov->size 24221, flag collect 1
----- executor 0 cover number : 438, signal number : 102
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 0 cover number : 525, signal number : 56
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2131, signal number : 1288
----- executor 2 executes write_coverage_signal cov->size 20214, flag collect 1
----- executor 1 cover number : 410, signal number : 236
----- executor 1 executes write_coverage_signal cov->size 1376, flag collect 1
----- executor 0 cover number : 142, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1265, flag collect 1
----- executor 1 cover number : 409, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 435, signal number : 12
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 0 cover number : 501, signal number : 43
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1985, signal number : 481
executor 2 server cover_cnt 21 output_pos_value 23192
----- executor 0 cover number : 126, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 25
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/04/02 01:13:20 for select break: 1
2023/04/02 01:13:20 --------- executor 2 receive reply, reply.done 1
----- executor 1 cover number : 2264, signal number : 2877
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 755, flag collect 1
----- executor 1 cover number : 270, signal number : 220
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 168
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
time breakdown 2: 165, 3220, 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 2002, flag collect 1
----- executor 1 cover number : 657, signal number : 191
----- executor 1 executes write_coverage_signal cov->size 3474, flag collect 1
----- executor 1 cover number : 774, signal number : 351
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1737, signal number : 1962
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 517, signal number : 465
----- executor 0 executes write_coverage_signal cov->size 5993, flag collect 1
----- executor 0 cover number : 549, signal number : 262
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1186, signal number : 1316
----- executor 1 executes write_coverage_signal cov->size 3989, flag collect 1
----- executor 1 cover number : 658, signal number : 51
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 57
----- executor 0 executes write_coverage_signal cov->size 232, flag collect 1
----- executor 0 cover number : 116, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 1328, flag collect 1
----- executor 0 cover number : 602, signal number : 159
----- executor 0 executes write_coverage_signal cov->size 220, flag collect 1
----- executor 0 cover number : 111, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 220, flag collect 1
----- executor 0 cover number : 111, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 219, flag collect 1
----- executor 0 cover number : 110, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1966, signal number : 931
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1001, signal number : 449
----- executor 0 executes write_coverage_signal cov->size 1545, flag collect 1
----- executor 0 cover number : 673, signal number : 148
----- executor 0 executes write_coverage_signal cov->size 222, flag collect 1
----- executor 0 cover number : 111, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 221, flag collect 1
----- executor 0 cover number : 110, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 244, flag collect 1
----- executor 0 cover number : 130, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 230, flag collect 1
----- executor 0 cover number : 116, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 219, flag collect 1
----- executor 0 cover number : 110, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 0 cover number : 10, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2073, signal number : 1014
executor 1 server cover_cnt 21 output_pos_value 22681
----- executor 0 cover number : 1867, signal number : 1578
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 126
----- executor 0 executes write_coverage_signal cov->size 722, flag collect 1
----- executor 0 cover number : 51, signal number : 10
executor 0 server cover_cnt 70 output_pos_value 30066
2023/04/02 01:13:20 for select break: 1
2023/04/02 01:13:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 170, 3252, 0
2023/04/02 01:13:20 for select break: 1
2023/04/02 01:13:20 --------- executor 0 receive reply, reply.done 1
2023/04/02 01:13:20 wg wait finish
2023/04/02 01:13:20 ------ all executors finish execution
2023/04/02 01:13:20 exec time: 3336
2023/04/02 01:13:20 ----- PS len: 4
2023/04/02 01:13:20 [CLIENT] executor 3 has 20 replies
2023/04/02 01:13:20 [SERVER] executor 1 has 21 replies
2023/04/02 01:13:20 [SERVER] executor 2 has 21 replies
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 7 signal and 7 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 7 signal and 7 cover from userspace component
2023/04/02 01:13:20 [SERVER] executor 0 has 70 replies
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 989 signal and 804 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 899 signal and 743 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 1149 signal and 950 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 13 signal and 919 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 308 signal and 1136 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 549 signal and 947 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 195 signal and 600 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 1493 signal and 1567 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 2007 signal and 1737 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 63 signal and 116 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 47 signal and 66 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 236 signal and 410 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 436 signal and 533 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 1 signal and 409 cover from userspace component
2023/04/02 01:13:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 44 signal and 600 cover from executor 3
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 67 signal and 50 cover from userspace component
2023/04/02 01:13:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 69 signal and 142 cover from userspace component
2023/04/02 01:13:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 2723 signal and 2128 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 218 signal and 270 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 167 signal and 526 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 198 signal and 657 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 1988 signal and 1567 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 359 signal and 774 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 100 signal and 116 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 477 signal and 658 cover from userspace component
2023/04/02 01:13:20 fuzzer receive 0 signal and 738 cover from executor 3
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 831 signal and 1140 cover from userspace component
2023/04/02 01:13:20 fuzzer receive 44 signal and 600 cover from executor 3
2023/04/02 01:13:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 1288 signal and 2131 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 583 signal and 1001 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 2 receive 481 signal and 1985 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 134 signal and 570 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 47 signal and 66 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 236 signal and 410 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 1 signal and 409 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 3 signal and 142 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 10 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 2877 signal and 2264 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 207 signal and 289 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 33 signal and 36 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 220 signal and 270 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 1106 signal and 1141 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 168 signal and 526 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 102 signal and 438 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 56 signal and 525 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 191 signal and 657 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 1 signal and 165 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 7 signal and 142 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 1 signal and 10 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 351 signal and 774 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 1316 signal and 1186 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 51 signal and 658 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 12 signal and 435 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 2 signal and 165 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 43 signal and 501 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 4 signal and 126 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 9 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 25 signal and 106 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 931 signal and 1966 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 1 receive 1014 signal and 2073 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 1962 signal and 1737 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 465 signal and 517 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 262 signal and 549 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 57 signal and 142 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 7 signal and 116 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 159 signal and 602 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 2 signal and 111 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 0 signal and 111 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 2 signal and 110 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 449 signal and 1001 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 148 signal and 673 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 7 signal and 111 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 6 signal and 110 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 19 signal and 130 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 7 signal and 116 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 3 signal and 110 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 4 signal and 10 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 1578 signal and 1867 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 126 signal and 523 cover from userspace component
2023/04/02 01:13:20 ------- fuzzer executor 0 receive 10 signal and 51 cover from userspace component
before receive testcase: 0 0
time breakdown 0: 120, 3254, 0
before receive testcase: 0 0
2023/04/02 01:13:20 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:13:20 failure smash: true false
2023/04/02 01:13:20 HasCrashFail: true, .HasNetFail: false
2023/04/02 01:13:20 disable threaded and collide
2023/04/02 01:13:20 prog length: 6
2023/04/02 01:13:20 prog length: 20
2023/04/02 01:13:20 send to channel: true, false
2023/04/02 01:13:20 HasCrashFail:true HasNetFail:false
01:13:20 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-463
executor 0: prog_data_offset 1312, prog_size 248
Node-0:/root/daemon-log.24407
remove dir time 54
-----finish removing dir
receive_execute: 60, 87
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-464 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-464
receive_execute: 28, 87
receive_execute: 27, 88
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
receive_execute: 101, 92
execute_one time: 2, 3
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5820, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 5820, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 2, 0, 5
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5755, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 5755, flag collect 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 4, 0, 4
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8482, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 8482, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 17, 0, 7
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 3489, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 3489, flag collect 1
----- executor 3 cover number : 948, signal number : 549
----- completed 8
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 195
----- completed 9
execute_call 0, 92, 0, 8
execute_one loop: 0, 0, 100
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 14
execute_call 0, 75, 0, 17
execute_one loop: 0, 0, 92
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 241, 0, 0
execute_one loop: 0, 0, 241
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 1
----- executor 0 cover number : 34, signal number : 36
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1421
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1688, signal number : 1855
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 190, signal number : 135
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1001, signal number : 597
----- executor 0 executes write_coverage_signal cov->size 1330, flag collect 1
----- executor 0 cover number : 570, signal number : 128
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 31
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 421
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
executor 0 server cover_cnt 27 output_pos_value 10276
-----executor 0 collect shmids 75
----- directly resend shmid 75
-----executor 0 collect shmids 78
----- directly resend shmid 78
-----executor 0 collect shmids 67
----- directly resend shmid 67
-----executor 0 collect shmids 70
----- directly resend shmid 70
execute_call 0, 147, 0, 0
execute_one loop: 0, 0, 147
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 148, 0, 0
execute_one loop: 0, 0, 148
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 49
----- directly resend shmid 49
-----executor 0 collect shmids 50
----- directly resend shmid 50
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
==24407==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2904, 0, 0
execute_one loop: 0, 0, 2904
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3295, 0
execute_one time: 16, 3296
----- executor 3 write_call_output, size 0, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 2906, 0, 1
execute_one loop: 0, 0, 2907
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12614, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 12614, flag collect 1
----- executor 3 cover number : 1327, signal number : 313
----- completed 19
execute_call 0, 37, 0, 8
execute_one loop: 0, 0, 45
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1294, write pid:1294
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 46
----- completed 20
execute_call 0, 88, 0, 12
execute_one loop: 0, 0, 100
executor 3, execute_one inner time: 0, 3454, 0
execute_one time: 1, 3454
2023/04/02 01:13:24 for select break: 1
2023/04/02 01:13:24 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
time breakdown 3: 193, 3457, 0
before receive testcase: 0 0
----- executor 0 cover number : 501, signal number : 42
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 739, flag collect 1
----- executor 2 cover number : 278, signal number : 315
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 27609, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 753, flag collect 1
----- executor 1 cover number : 278, signal number : 315
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2242, signal number : 2774
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 919, flag collect 1
----- executor 0 cover number : 387, signal number : 211
----- executor 0 executes write_coverage_signal cov->size 256, flag collect 1
----- executor 0 cover number : 139, signal number : 27
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1974, signal number : 2384
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 2584, flag collect 1
----- executor 2 cover number : 558, signal number : 223
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 410, signal number : 229
----- executor 1 executes write_coverage_signal cov->size 20198, flag collect 1
----- executor 0 cover number : 1141, signal number : 1270
----- executor 0 executes write_coverage_signal cov->size 218, flag collect 1
----- executor 0 cover number : 109, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
Node-0:/root/daemon-log.24480
----- executor 1 cover number : 1785, signal number : 1116
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1918, signal number : 1287
----- executor 2 executes write_coverage_signal cov->size 31509, flag collect 1
----- executor 2 cover number : 2421, signal number : 3053
----- executor 2 executes write_coverage_signal cov->size 757, flag collect 1
----- executor 2 cover number : 269, signal number : 131
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3058, flag collect 1
----- executor 2 cover number : 665, signal number : 312
----- executor 2 executes write_coverage_signal cov->size 1626, flag collect 1
----- executor 2 cover number : 518, signal number : 128
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1820, signal number : 1340
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1151, signal number : 1325
----- executor 2 executes write_coverage_signal cov->size 31164, flag collect 1
----- executor 1 cover number : 2071, signal number : 2538
----- executor 1 executes write_coverage_signal cov->size 753, flag collect 1
----- executor 1 cover number : 269, signal number : 141
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 146
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 3468, flag collect 1
----- executor 1 cover number : 775, signal number : 351
----- executor 1 executes write_coverage_signal cov->size 2002, flag collect 1
----- executor 1 cover number : 657, signal number : 178
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1688, signal number : 1806
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2167, signal number : 1319
----- executor 2 executes write_coverage_signal cov->size 25652, flag collect 1
----- executor 1 cover number : 1201, signal number : 1283
----- executor 1 executes write_coverage_signal cov->size 4650, flag collect 1
----- executor 1 cover number : 759, signal number : 136
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 190, signal number : 109
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 1178, flag collect 1
----- executor 0 cover number : 499, signal number : 192
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2121, signal number : 800
----- executor 1 cover number : 2219, signal number : 1659
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 server cover_cnt 14 output_pos_value 25374
----- executor 0 cover number : 1001, signal number : 460
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1966, signal number : 1122
2023/04/02 01:13:24 for select break: 1
2023/04/02 01:13:24 --------- executor 2 receive reply, reply.done 1
executor 1 server cover_cnt 17 output_pos_value 27218
time breakdown 2: 148, 3518, 0
before receive testcase: 0 0
2023/04/02 01:13:24 for select break: 1
2023/04/02 01:13:24 --------- executor 1 receive reply, reply.done 1
----- executor 0 cover number : 1460, signal number : 897
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 16
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 13
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
time breakdown 1: 115, 3522, 0
before receive testcase: 0 1
----- executor 0 cover number : 526, signal number : 294
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 28
----- executor 0 executes write_coverage_signal cov->size 35, flag collect 1
----- executor 0 cover number : 9, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 721, flag collect 1
----- executor 0 cover number : 276, signal number : 70
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 0 cover number : 525, signal number : 111
----- executor 0 executes write_coverage_signal cov->size 25896, flag collect 1
----- executor 0 cover number : 1439, signal number : 1366
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 890, signal number : 393
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 1
----- executor 0 cover number : 243, signal number : 36
executor 0 server cover_cnt 90 output_pos_value 34797
2023/04/02 01:13:24 for select break: 1
2023/04/02 01:13:24 --------- executor 0 receive reply, reply.done 1
2023/04/02 01:13:24 wg wait finish
2023/04/02 01:13:24 ------ all executors finish execution
2023/04/02 01:13:24 exec time: 3644
2023/04/02 01:13:24 ----- PS len: 4
2023/04/02 01:13:24 [CLIENT] executor 3 has 20 replies
2023/04/02 01:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 549 signal and 948 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 195 signal and 601 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 313 signal and 1327 cover from executor 3
2023/04/02 01:13:24 fuzzer receive 46 signal and 601 cover from executor 3
2023/04/02 01:13:24 [SERVER] executor 0 has 90 replies
2023/04/02 01:13:24 [SERVER] executor 2 has 14 replies
time breakdown 0: 116, 3555, 0
2023/04/02 01:13:24 [SERVER] executor 1 has 17 replies
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 315 signal and 278 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 2774 signal and 2242 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 229 signal and 410 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 315 signal and 278 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 1116 signal and 1785 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 2538 signal and 2071 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 36 signal and 34 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 141 signal and 269 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 2384 signal and 1974 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1421 signal and 1141 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1855 signal and 1688 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 223 signal and 558 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 1287 signal and 1918 cover from userspace component
before receive testcase: 0 0
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 3053 signal and 2421 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 131 signal and 269 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 312 signal and 665 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 135 signal and 190 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 6 signal and 7 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 128 signal and 518 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 1325 signal and 1151 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 1319 signal and 2167 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 2 receive 800 signal and 2121 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 597 signal and 1001 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 128 signal and 570 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 31 signal and 51 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 421 signal and 523 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 5 signal and 142 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 3 signal and 7 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 51 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 42 signal and 501 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 4 signal and 126 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1 signal and 9 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 146 signal and 526 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 211 signal and 387 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 27 signal and 139 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1270 signal and 1141 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 8 signal and 109 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 351 signal and 775 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 178 signal and 657 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 1283 signal and 1201 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 136 signal and 759 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1340 signal and 1820 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1806 signal and 1688 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 1659 signal and 2219 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 2 signal and 3 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 109 signal and 190 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 2 signal and 7 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 1 receive 1122 signal and 1966 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 192 signal and 499 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 460 signal and 1001 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 897 signal and 1460 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 4 signal and 8 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 16 signal and 27 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 6 signal and 13 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 13 signal and 51 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 294 signal and 526 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 28 signal and 142 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 5 signal and 9 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 70 signal and 276 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 6 signal and 51 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 111 signal and 525 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 1366 signal and 1439 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 393 signal and 890 cover from userspace component
2023/04/02 01:13:24 ------- fuzzer executor 0 receive 36 signal and 243 cover from userspace component
2023/04/02 01:13:24 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:13:24 disable threaded and collide
2023/04/02 01:13:24 prog length: 6
2023/04/02 01:13:24 prog length: 20
2023/04/02 01:13:24 HasCrashFail:true HasNetFail:false
01:13:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-464
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 50
-----finish removing dir
receive_execute: 33, 78
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-465 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-465
receive_execute: 71, 78
receive_execute: 68, 78
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 4, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 128, 86
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 1, 0, 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5824, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 1
----- executor 3 cover number : 950, signal number : 1149
----- completed 4
execute_call 0, 5, 0, 4
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 1
----- executor 3 cover number : 919, signal number : 13
----- completed 5
execute_call 0, 5, 0, 5
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 8482, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 8482, flag collect 1
----- executor 3 cover number : 1136, signal number : 308
----- completed 7
execute_call 0, 13, 0, 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 3474, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 3474, flag collect 1
----- executor 3 cover number : 941, signal number : 548
----- completed 8
execute_call 0, 18, 0, 3
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 196
----- completed 9
execute_call 0, 75, 0, 16
execute_one loop: 0, 0, 91
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 59
----- directly resend shmid 59
-----executor 0 collect shmids 61
----- directly resend shmid 61
----- executor 3 write_call_output, size 32765, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 44
----- completed 14
execute_call 0, 86, 0, 16
execute_one loop: 0, 0, 102
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 273, 0, 0
execute_one loop: 0, 0, 273
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 41, flag collect 1
----- executor 0 cover number : 35, signal number : 38
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1421
----- executor 0 executes write_coverage_signal cov->size 11999, flag collect 1
----- executor 0 cover number : 1666, signal number : 1723
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 517, signal number : 410
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1402, signal number : 1385
----- executor 0 executes write_coverage_signal cov->size 696, flag collect 1
----- executor 0 cover number : 355, signal number : 243
----- executor 0 executes write_coverage_signal cov->size 3366, flag collect 1
----- executor 0 cover number : 837, signal number : 724
----- executor 0 executes write_coverage_signal cov->size 3981, flag collect 1
----- executor 0 cover number : 1170, signal number : 882
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 51, signal number : 55
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 0 cover number : 526, signal number : 503
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 73
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 51, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 854, flag collect 1
----- executor 0 cover number : 409, signal number : 307
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 0 cover number : 525, signal number : 67
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1182, signal number : 715
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 1
----- executor 0 cover number : 243, signal number : 98
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1562, signal number : 1716
----- executor 0 executes write_coverage_signal cov->size 20364, flag collect 1
----- executor 0 cover number : 1248, signal number : 1711
----- executor 0 executes write_coverage_signal cov->size 18577, flag collect 1
----- executor 0 cover number : 1132, signal number : 1215
----- executor 0 executes write_coverage_signal cov->size 7293, flag collect 1
----- executor 0 cover number : 1155, signal number : 403
----- executor 0 executes write_coverage_signal cov->size 7288, flag collect 1
----- executor 0 cover number : 1155, signal number : 275
executor 0 server cover_cnt 30 output_pos_value 30686
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
execute_call 0, 177, 0, 0
execute_one loop: 0, 0, 177
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 176, 0, 0
execute_one loop: 0, 0, 176
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
-----executor 0 collect shmids 49
----- directly resend shmid 49
-----executor 0 collect shmids 64
----- directly resend shmid 64
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
==24480==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.24515
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
==24515==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.24532
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
execute_call 0, 2710, 0, 0
execute_one loop: 0, 0, 2710
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3160, 0
execute_one time: 1, 3160
----- executor 3 write_call_output, size 0, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 2710, 0, 0
execute_one loop: 0, 0, 2710
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12587, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 12587, flag collect 1
----- executor 3 cover number : 1326, signal number : 313
----- completed 19
execute_call 0, 29, 0, 3
execute_one loop: 0, 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1296, write pid:1296
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 46
----- completed 20
execute_call 0, 81, 0, 20
execute_one loop: 0, 0, 101
executor 3, execute_one inner time: 1, 3279, 1
execute_one time: 5, 3282
2023/04/02 01:13:27 for select break: 1
2023/04/02 01:13:27 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 2 cover number : 65, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 24129, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 65, signal number : 74
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 24008, flag collect 1
----- executor 0 cover number : 501, signal number : 217
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1759, signal number : 2156
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 66, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 2238, flag collect 1
----- executor 2 cover number : 1758, signal number : 2154
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 856, flag collect 1
----- executor 2 cover number : 271, signal number : 277
----- executor 2 executes write_coverage_signal cov->size 5476, flag collect 1
----- executor 1 cover number : 273, signal number : 283
----- executor 1 executes write_coverage_signal cov->size 4003, flag collect 1
----- executor 0 cover number : 126, signal number : 30
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 157
----- executor 0 executes write_coverage_signal cov->size 46, flag collect 1
----- executor 0 cover number : 35, signal number : 29
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 282, signal number : 32
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 14042, flag collect 1
----- executor 2 cover number : 280, signal number : 40
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 15635, flag collect 1
----- executor 1 cover number : 1246, signal number : 779
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1143, signal number : 669
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 214, 3290, 0
before receive testcase: 0 0
----- executor 0 cover number : 1141, signal number : 1487
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 40
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 410, signal number : 97
----- executor 1 executes write_coverage_signal cov->size 27416, flag collect 1
----- executor 2 cover number : 1613, signal number : 798
----- executor 2 executes write_coverage_signal cov->size 27410, flag collect 1
----- executor 0 cover number : 1819, signal number : 1807
----- executor 0 executes write_coverage_signal cov->size 11999, flag collect 1
----- executor 0 cover number : 1666, signal number : 1972
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1267, signal number : 1236
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1267, signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 517, signal number : 517
----- executor 0 executes write_coverage_signal cov->size 212, flag collect 1
----- executor 0 cover number : 109, signal number : 48
----- executor 0 executes write_coverage_signal cov->size 1176, flag collect 1
----- executor 0 cover number : 497, signal number : 264
----- executor 0 executes write_coverage_signal cov->size 54, flag collect 1
----- executor 0 cover number : 34, signal number : 28
----- executor 0 executes write_coverage_signal cov->size 179, flag collect 1
----- executor 0 cover number : 34, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2071, signal number : 2140
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 133, flag collect 1
----- executor 1 cover number : 31, signal number : 15
----- executor 1 executes write_coverage_signal cov->size 1038, flag collect 1
----- executor 1 cover number : 280, signal number : 170
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2203, flag collect 1
----- executor 1 cover number : 596, signal number : 295
----- executor 1 executes write_coverage_signal cov->size 2487, flag collect 1
----- executor 1 cover number : 743, signal number : 239
----- executor 1 executes write_coverage_signal cov->size 10178, flag collect 1
----- executor 1 cover number : 1177, signal number : 947
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2658, signal number : 2968
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 133, flag collect 1
----- executor 2 cover number : 31, signal number : 15
----- executor 2 executes write_coverage_signal cov->size 1040, flag collect 1
----- executor 2 cover number : 280, signal number : 169
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 1943, flag collect 1
----- executor 2 cover number : 551, signal number : 267
----- executor 2 executes write_coverage_signal cov->size 2735, flag collect 1
----- executor 2 cover number : 649, signal number : 318
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1189, signal number : 1077
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1703, signal number : 1618
----- executor 2 executes write_coverage_signal cov->size 24322, flag collect 1
----- executor 0 cover number : 1402, signal number : 1443
----- executor 0 executes write_coverage_signal cov->size 696, flag collect 1
----- executor 0 cover number : 355, signal number : 206
----- executor 0 executes write_coverage_signal cov->size 17646, flag collect 1
----- executor 2 cover number : 1046, signal number : 522
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 957, signal number : 1684
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2540, signal number : 1894
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2219, signal number : 1729
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1688, signal number : 2743
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 51, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 1 cover number : 1496, signal number : 745
----- executor 0 cover number : 526, signal number : 423
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 1 server cover_cnt 21 output_pos_value 27784
2023/04/02 01:13:27 for select break: 1
2023/04/02 01:13:27 --------- executor 1 receive reply, reply.done 1
----- executor 0 cover number : 142, signal number : 75
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 51, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 1
----- executor 0 cover number : 10, signal number : 13
----- executor 0 executes write_coverage_signal cov->size 806, flag collect 1
----- executor 2 cover number : 2053, signal number : 1014
----- executor 0 cover number : 275, signal number : 135
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 server cover_cnt 21 output_pos_value 31661
time breakdown 1: 148, 3343, 0
before receive testcase: 0 0
2023/04/02 01:13:27 for select break: 1
2023/04/02 01:13:27 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 149, 3350, 0
before receive testcase: 0 0
----- executor 0 cover number : 1130, signal number : 2096
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1192, signal number : 1538
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 0 cover number : 525, signal number : 175
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1182, signal number : 1031
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 1
----- executor 0 cover number : 243, signal number : 102
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1562, signal number : 1810
----- executor 0 executes write_coverage_signal cov->size 20364, flag collect 1
----- executor 0 cover number : 1248, signal number : 1547
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1361, signal number : 2240
----- executor 0 executes write_coverage_signal cov->size 7293, flag collect 1
----- executor 0 cover number : 1155, signal number : 642
----- executor 0 executes write_coverage_signal cov->size 7288, flag collect 1
----- executor 0 cover number : 1155, signal number : 333
executor 0 server cover_cnt 94 output_pos_value 81402
2023/04/02 01:13:27 for select break: 1
2023/04/02 01:13:27 --------- executor 0 receive reply, reply.done 1
2023/04/02 01:13:27 wg wait finish
2023/04/02 01:13:27 ------ all executors finish execution
2023/04/02 01:13:27 exec time: 3459
2023/04/02 01:13:27 ----- PS len: 4
2023/04/02 01:13:27 [CLIENT] executor 3 has 20 replies
2023/04/02 01:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:27 [SERVER] executor 2 has 21 replies
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
2023/04/02 01:13:27 [SERVER] executor 0 has 94 replies
2023/04/02 01:13:27 [SERVER] executor 1 has 21 replies
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 74 signal and 65 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 2156 signal and 1759 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 3 signal and 66 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 283 signal and 273 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 32 signal and 282 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 2154 signal and 1758 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 3 signal and 66 cover from userspace component
2023/04/02 01:13:27 fuzzer receive 1149 signal and 950 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 13 signal and 919 cover from executor 3
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 277 signal and 271 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 779 signal and 1246 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 97 signal and 410 cover from userspace component
2023/04/02 01:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 308 signal and 1136 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 548 signal and 941 cover from executor 3
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 1236 signal and 1267 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 2140 signal and 2071 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 15 signal and 31 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 170 signal and 280 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 295 signal and 596 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 239 signal and 743 cover from userspace component
2023/04/02 01:13:27 fuzzer receive 196 signal and 600 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 947 signal and 1177 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 1077 signal and 1189 cover from userspace component
2023/04/02 01:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 44 signal and 600 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 1894 signal and 2540 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 1 receive 745 signal and 1496 cover from userspace component
2023/04/02 01:13:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 313 signal and 1326 cover from executor 3
2023/04/02 01:13:27 fuzzer receive 46 signal and 600 cover from executor 3
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 40 signal and 280 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 669 signal and 1143 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 798 signal and 1613 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 1262 signal and 1267 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 38 signal and 35 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 2968 signal and 2658 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 15 signal and 31 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 169 signal and 280 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1421 signal and 1141 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1723 signal and 1666 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 410 signal and 517 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 267 signal and 551 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 318 signal and 649 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1385 signal and 1402 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 243 signal and 355 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 1618 signal and 1703 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 522 signal and 1046 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 1729 signal and 2219 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 724 signal and 837 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 2 receive 1014 signal and 2053 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 882 signal and 1170 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 55 signal and 51 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 503 signal and 526 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 73 signal and 142 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1 signal and 51 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 307 signal and 409 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1 signal and 6 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 67 signal and 525 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 715 signal and 1182 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 98 signal and 243 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1716 signal and 1562 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1711 signal and 1248 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1215 signal and 1132 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 403 signal and 1155 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 275 signal and 1155 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 217 signal and 501 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 30 signal and 126 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 3 signal and 9 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 157 signal and 286 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 29 signal and 35 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1487 signal and 1141 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 40 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1807 signal and 1819 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1972 signal and 1666 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 517 signal and 517 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 48 signal and 109 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 264 signal and 497 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 28 signal and 34 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 2 signal and 34 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1443 signal and 1402 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 206 signal and 355 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1684 signal and 957 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 2743 signal and 1688 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 4 signal and 13 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 54 signal and 51 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 423 signal and 526 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 75 signal and 142 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 4 signal and 51 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 13 signal and 10 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 135 signal and 275 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 2096 signal and 1130 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1538 signal and 1192 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 175 signal and 525 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1031 signal and 1182 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 102 signal and 243 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1810 signal and 1562 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 1547 signal and 1248 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 2240 signal and 1361 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 642 signal and 1155 cover from userspace component
2023/04/02 01:13:27 ------- fuzzer executor 0 receive 333 signal and 1155 cover from userspace component
time breakdown 0: 111, 3381, 0
before receive testcase: 0 0
2023/04/02 01:13:27 fsMds: [map[] map[] map[] map[]]
==24532==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
2023/04/02 01:13:27 failure smash: true false
2023/04/02 01:13:27 HasCrashFail: true, .HasNetFail: false
2023/04/02 01:13:27 disable threaded and collide
2023/04/02 01:13:27 prog length: 6
2023/04/02 01:13:27 prog length: 20
2023/04/02 01:13:27 send to channel: true, false
2023/04/02 01:13:27 HasCrashFail:true HasNetFail:false
01:13:27 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
syz_failure_sync(0x0, 0x3)
fchmod(r2, 0x20)
syz_failure_sync(0x1, 0x3)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-465
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 44
-----finish removing dir
receive_execute: 61, 72
receive_execute: 30, 72
receive_execute: 66, 72
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-466 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-466
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 7, 1
receive_execute: 113, 83
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5832, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 5832, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
Node-0:/root/daemon-log.24557
----- executor 3 write_call_output, size 5758, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 6, 0, 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8494, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 8494, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 18, 0, 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 3482, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 3482, flag collect 1
----- executor 3 cover number : 942, signal number : 548
----- completed 8
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 196
----- completed 9
execute_call 0, 64, 0, 9
execute_one loop: 0, 0, 73
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 14
execute_call 0, 68, 0, 11
execute_one loop: 0, 0, 79
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 213, 0, 0
execute_one loop: 0, 0, 213
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2783, flag collect 1
----- executor 0 cover number : 417, signal number : 498
----- executor 0 executes write_coverage_signal cov->size 151, flag collect 1
----- executor 0 cover number : 85, signal number : 62
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1944, signal number : 2362
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5778, flag collect 1
----- executor 0 cover number : 533, signal number : 442
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 68
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 2517, flag collect 1
----- executor 0 cover number : 807, signal number : 386
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 894, signal number : 460
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 20 output_pos_value 9319
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
execute_call 0, 128, 0, 0
execute_one loop: 0, 0, 128
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 128, 0, 1
execute_one loop: 0, 0, 129
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
==24557==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
execute_call 0, 2764, 0, 0
execute_one loop: 0, 0, 2764
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3107, 0
execute_one time: 2, 3107
----- executor 3 write_call_output, size 0, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 2765, 0, 0
execute_one loop: 0, 0, 2765
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 12627, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 12627, flag collect 1
----- executor 3 cover number : 1329, signal number : 317
----- completed 19
execute_call 0, 20, 0, 4
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1297, write pid:1297
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 46
----- completed 20
execute_call 0, 60, 0, 14
execute_one loop: 0, 0, 74
executor 3, execute_one inner time: 0, 3196, 0
execute_one time: 1, 3197
2023/04/02 01:13:31 for select break: 1
2023/04/02 01:13:31 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 832, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 818, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 1 cover number : 287, signal number : 329
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 287, signal number : 329
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 525, signal number : 36
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 539, signal number : 616
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 196, 3205, 0
before receive testcase: 0 0
----- executor 0 cover number : 142, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 206
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2164, signal number : 2580
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 116, signal number : 85
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 1 cover number : 66, signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32025, flag collect 1
----- executor 0 cover number : 1404, signal number : 1357
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2165, signal number : 2588
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 2 cover number : 116, signal number : 91
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 2 cover number : 66, signal number : 5
----- executor 2 executes write_coverage_signal cov->size 1870, flag collect 1
----- executor 2 cover number : 567, signal number : 293
----- executor 2 executes write_coverage_signal cov->size 16001, flag collect 1
----- executor 1 cover number : 409, signal number : 413
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 410, signal number : 106
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 200, signal number : 66
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1265, flag collect 1
----- executor 0 cover number : 435, signal number : 105
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 33
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 410, signal number : 196
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2205, signal number : 2677
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 901, flag collect 1
----- executor 2 cover number : 270, signal number : 143
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 102
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 1 cover number : 2091, signal number : 2684
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 899, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 1412, flag collect 1
----- executor 1 cover number : 270, signal number : 149
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 540, signal number : 153
----- executor 2 executes write_coverage_signal cov->size 4064, flag collect 1
----- executor 1 cover number : 526, signal number : 167
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 5476, flag collect 1
----- executor 2 cover number : 930, signal number : 378
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1944, signal number : 2918
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 992, signal number : 517
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 950, signal number : 1085
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 520, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 5993, flag collect 1
----- executor 2 cover number : 1143, signal number : 1423
----- executor 2 executes write_coverage_signal cov->size 2539, flag collect 1
----- executor 2 cover number : 534, signal number : 45
----- executor 2 executes write_coverage_signal cov->size 30412, flag collect 1
----- executor 0 cover number : 549, signal number : 281
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1214, signal number : 659
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 58
----- executor 0 executes write_coverage_signal cov->size 228, flag collect 1
----- executor 0 cover number : 115, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 1327, flag collect 1
----- executor 0 cover number : 602, signal number : 192
----- executor 0 executes write_coverage_signal cov->size 220, flag collect 1
----- executor 0 cover number : 111, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 220, flag collect 1
----- executor 0 cover number : 111, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 219, flag collect 1
----- executor 2 cover number : 1988, signal number : 1047
----- executor 2 executes write_coverage_signal cov->size 21810, flag collect 1
----- executor 0 cover number : 110, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 2525, flag collect 1
----- executor 0 cover number : 810, signal number : 307
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1789, signal number : 1117
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2123, signal number : 1284
executor 2 server cover_cnt 22 output_pos_value 25763
----- executor 0 cover number : 894, signal number : 384
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 51, signal number : 20
----- executor 0 executes write_coverage_signal cov->size 4683, flag collect 1
----- executor 0 cover number : 339, signal number : 89
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 51, signal number : 1
executor 0 server cover_cnt 72 output_pos_value 27346
----- executor 1 cover number : 2259, signal number : 1390
2023/04/02 01:13:31 for select break: 1
2023/04/02 01:13:31 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 133, 3274, 1
before receive testcase: 0 0
executor 1 server cover_cnt 21 output_pos_value 26195
time breakdown 1: 138, 3277, 0
before receive testcase: 0 1
2023/04/02 01:13:31 for select break: 1
2023/04/02 01:13:31 --------- executor 1 receive reply, reply.done 1
2023/04/02 01:13:31 for select break: 1
2023/04/02 01:13:31 --------- executor 0 receive reply, reply.done 1
2023/04/02 01:13:31 wg wait finish
2023/04/02 01:13:31 ------ all executors finish execution
2023/04/02 01:13:31 exec time: 3351
2023/04/02 01:13:31 ----- PS len: 4
2023/04/02 01:13:31 [CLIENT] executor 3 has 20 replies
2023/04/02 01:13:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:31 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:13:31 [SERVER] executor 0 has 72 replies
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 498 signal and 417 cover from userspace component
2023/04/02 01:13:31 [SERVER] executor 1 has 21 replies
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 329 signal and 287 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 62 signal and 85 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 616 signal and 539 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 2580 signal and 2164 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 2362 signal and 1944 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 2 signal and 6 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 85 signal and 116 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 442 signal and 533 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 5 signal and 66 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 68 signal and 142 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 413 signal and 409 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 196 signal and 410 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 386 signal and 807 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 2684 signal and 2091 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:31 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 460 signal and 894 cover from userspace component
2023/04/02 01:13:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/04/02 01:13:31 [SERVER] executor 2 has 22 replies
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 329 signal and 287 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 149 signal and 270 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 167 signal and 526 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 517 signal and 992 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 2588 signal and 2165 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 1085 signal and 950 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 659 signal and 1214 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 91 signal and 116 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 5 signal and 66 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 293 signal and 567 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 1117 signal and 1789 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 1 receive 1390 signal and 2259 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 106 signal and 410 cover from userspace component
time breakdown 0: 102, 3276, 0
before receive testcase: 0 1
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 2677 signal and 2205 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 143 signal and 270 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 102 signal and 526 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:31 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 36 signal and 525 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 4 signal and 142 cover from userspace component
2023/04/02 01:13:31 fuzzer receive 548 signal and 942 cover from executor 3
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 9 cover from userspace component
2023/04/02 01:13:31 fuzzer receive 196 signal and 601 cover from executor 3
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 206 signal and 286 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 153 signal and 540 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 378 signal and 930 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 1357 signal and 1404 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 1423 signal and 1143 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 45 signal and 534 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 1047 signal and 1988 cover from userspace component
2023/04/02 01:13:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:31 ------- fuzzer executor 2 receive 1284 signal and 2123 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 66 signal and 200 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 2 signal and 8 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 3 signal and 10 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 105 signal and 435 cover from userspace component
2023/04/02 01:13:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 2 signal and 165 cover from userspace component
2023/04/02 01:13:31 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:13:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 33 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:31 fuzzer receive 317 signal and 1329 cover from executor 3
2023/04/02 01:13:31 fuzzer receive 46 signal and 601 cover from executor 3
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 2918 signal and 1944 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 444 signal and 520 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 281 signal and 549 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 58 signal and 142 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 4 signal and 115 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 192 signal and 602 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 2 signal and 111 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 0 signal and 111 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 3 signal and 110 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 307 signal and 810 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 384 signal and 894 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 4 signal and 8 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 4 signal and 13 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 20 signal and 51 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 89 signal and 339 cover from userspace component
2023/04/02 01:13:31 ------- fuzzer executor 0 receive 1 signal and 51 cover from userspace component
2023/04/02 01:13:31 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:13:31 disable threaded and collide
2023/04/02 01:13:31 prog length: 6
2023/04/02 01:13:31 prog length: 20
2023/04/02 01:13:31 HasCrashFail:true HasNetFail:false
01:13:31 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="cb7ee857caba085bff7aa5fd1ab712efc6d0ecc083e40e22353381ae0529e549b4b3c225e9e7dd3309c66c1a7bab8814b0e6c48855b801b5dfb13a69efd0d6f699259bc0ea6452ba6fba1c3ee14eda11c6df5db4d9deee4e769d8df68fa73e07ea220aafd52c5551443fc4906f30e274d3f9f84034deeacc4f2d807fd47f2ef9f52f7960545f007cb50c19a957ce7f4ae2fd56c3a82e6733b0c4afba39264467588d62f356893abc9c186962872525ce571a5ad6e7ee2e02fcab095e3cbe9335703cd66910900071696cb0e740610af5cb1d711720646b2137f14caaf49ce7b88c62afa4fba83db25195616b19c0db64bd5eec5331ff325468d193eaf8def4ffbfb6eaf8069dcf864003d327ed67a3ef351b107b1eb30c7de25d803debc6507cacefe63c88b8a10b9b2ce48272f84ab5f69a0f9d99534efb5dfff362f03f7253caa55cc12ae2e238c05eee10cfa5f146dd18033a2bf64e1aae1e33bf8386bbee03319829eee147f74b749806f05fba16c165ef6b2e33a43935fdd47be314aacb142eba14aea5396077dcf0225428664ab59fe6a9f55a738b6dde9dec2e387be91a932b607042386923b25db40605962b66bc6b1bdf59402bda51de81152b9a4756ff7983c5e8610a69d362969d2583890d485e953543536b3d63b0c5d165597ea8e0a1ed73f5307d15ad804be791486afadd349f9e7627f760e9a773a0599593ed069a549126a3159065c75925cb457f415f00d3427d77ba55bfc73b9f16326021b6a573530f0822f91a164a1dc55f80268be2186b8a700804fbaf252fc028bdf25aa03ef7b9a01a68eaeba81d2d9c00078ee423de313387a2b60e5d503621bdc4c56fcdf534524d94541b4d76957681beeff11b0efd047d2acc239d30d6a86ec9848ad9530b66ae00a11750276b285ab1d9b710cdb05a1912b245e0f22a1fff6f505fd10e4815e345891c7e3a084941c87847043e5f90af07b0a9ed5b450c804d706c404834ab846a9fe14eb1f7a06e404f3fad62afb5b137e9533615cb1e79b887a8b3f536c00977560d079351b03b7bfea44a1bdb28e041c568b9722cf9a0f85cd08b28d833c410ca4b2f99c627edad47dd8242c029a0c09ac40418b800b5bb18c8106443efe02605a6089caa0bfe7e92cec6d8be303f1446c40be6057dece2d630ddc0a83cc29e6666c9e60a24e51bdeaed23e290e08ecfcd4e486122c5bb7f287ebc0aeb7738a75ddfbc5f32656d8d4418e8102b135ab14920713c7122371a42c7ad3af099fa90e4f95967b8b9e08d822242ca107c4aef30308909abef2000d9be2f3afe81a7700c21585e471fc18738b8bc85c62c3027848a005f6f74d7260a136e58656dc23a0b7994d155bcee63ddc9a74ec6ee0813e1ac4625cc2b59dfb63ee529b102d8d280ba75f7b16d3189f309e0d68c12de815423b3f0f3acacea65f158c54444c939f7a6ebe09575f5d6378afe468030d15ef4c605a330d7dec27cba26aa3ca92742330612a9c410dfe1aadfe54b8ae2c43d7ca786ef528b4df208042bb083c46ed9491ac9c2f6f77c91775ce54e8a09dab45d907227b9d12ecb63340f9e23f9f6db355faafcc926ebab8c5ca6937680c3351b17d11f854470d7e48949d8924ab4fc25eafcc734739af53bc970444b70d9a59347e55be397ef9a91719deccbb6fae999b21352c9ac681e5307a1326368bd0855e134ba7a136c2884181bf1aaaf7181dc6be357c78b53d637caf33ea0481a8473de870f584255370162fa6da9b6e82998e41308ab6738e550b309eacb522dfd308fed27e7b862477713ee6224b07b604937d448950034216ab9e741c034cfc3c8dd5b4cb89a4cfcaa4c0e490ed6eacf73dfd58fba14ecc2cd42d522054027cc75a452d4815fa94a6cda23415c1268351de5ec91e31a3b3846a9b1de3e97d0c554d04d895d067d49aa29da787acb068f67472ce49684b59ca3875002382003932b86eb2b0824e8683c8290d58178f11da594e271df6d2dadb442053cec938f114cd45b54a60290fdf317d404006567301221a887aa4545da87c5643ecd5a86c837d2234628851b809d0f129ca9ac001ae81230671fd7a0b0316c283714f560baa25d98548a0e95a69de4f5f3c89ae90f8dcd363fb948cfe759543d0ae9e496286a11fdbef7db7812a37fedf87c72c23a2e98ee2447a93f9b0033a9b49e64d80ffa599743bd6c363e44d9124cbf927ecb4d6daeb0f9a70e2ab6518ac52706facc6bc9f591ab03e4a301a27c9624ee22a886fb9c1431c2e9ac545db0bf642a93bc68d1e6d04e9004a1299f6f061307d1d86c40c0d2ff52dcb4c498706ab94c29fb456cfa5dcc75572256ca319cab6f7246994e20af4bd806834821de1bc855b66dc52c7444fd2d5f25a1d00298f15b6cd83c0697424c2294184ad8565e0deb19c4d084495268c910a90e87639828c435bc27d2defc6d043097ed43a2891d7ce11b32c921c5ab80af95398b44ba81c9f186a59f14ccc814f3d1701e294164a2407c47632929c7a8e36168e73108c1d4ce3fda7d74b76b5ff9cb2a54b25161298b282b53435847a3d1b3a31c2544640fe6b46bdda16ecf11327e094817b294da26e299c46d06f35ede1f9db0cf248c1f3093b08ec2a108e3f935660b8d37e852db6338642383cca41a50c042bfd57fef9aecf43d1a8be072c17f5b00e13f3ae2cb9aa5c78d797d4c4f86f0c2e17f41940b9ddb2aeca472b94814752bfc36ecc32bf7eafc12a20ef522736d6b732a3e208ad443a1ce675f385595df53ae4130d220b1b8898ff448c96c4e322540c119146a710bfd68efe71e65b4306e899bc83c675143030dd721457c7d2a7e1934020e9a86b0153b0122d92e63e74eb8315e10eb3e5af0e3cadf6902e6e9541239a6cbe252adefeac36f1d736b36cd160e5348ad06120db3ad4c86e086da3ce15bfd6144633a6bba633ff854032fdb533a49c4ca8911f4323b6d64b7d052ff3be04d7dd9a4bfd004265fc3362763cacba90912379aa5ae3dca7c81069ca54403f9baba9d09fc16986b3d0c3f1a8469f75e4a57ef85468b70c7f816b106486d5da0c1b9ae1908548877207b6705d87b9808863c607767c0cc97b8575c49b6e1c221250f7ba2e387105474e89186c11e2ae754d1dcf3a63a820cf753d97f354e59c14902ba9cf2795c8f47257e30e6a2800a1d331fafee064b35653e40bc8e61fb34fb3a73009f63b249bf27c8b49f0899e189c86c5fb3245a282e81fed043e9d7b98cbae92734f2433fed63714dcf4fa22014c090b2d6f742439c8fc681e29a554ec28904c4e8e10a10a17d1ecdca7cc60ed8de8c773c6c2165f3ef8d9d9e6495d5043b5b602836c10a40513637ee7c40a0929dea1107d909dbdf33349f0e94c38d8dd74212082a65992a664c20f157a5652335e2b85d4f7ed01f0ecfe236b9be6b6e311c4b62f7fa4fe93a94ba5e601fe27ae89c47dd755b7bd5fe8b04b697a01417b6d021063a71c58ba19cb2554429aa740062a417171aecf88f4951c980f39ac6ffced130c0c6727fb8c33480167d94a414ad60547ff2c9db96ac7f03c821d19e28d0eacadabacdeead42b5e87aa8d7f827226dfcb215b13ee19b36200232d802149cb001718ba9607427ce23f22b188bbd6ca1a0c4f69c0949b1b3731010cb448f41acb04fd729620233f6e06c261d8b29ea47c7e6b82b561dea494be3a0c81d63653c8c677d443f225364dc4695e3f5ef69a6611bf1907343482f8c00b5e77c84e08800f2ac78f9429e6b6c24a316d62aed541fcbc7a2100afd265dd2b3a2d677a92d1417a2bec87311efcd89f4082028ba2e4f952357a4a10ae7b98a406d50449d5c27e1abbb4f0c15eecf8230b9364f4175cf33f4ee56824e4206594dd465110a6ecaaf7247f937a9ddbbb0df3de2a685055ca188be8920cf1ba1ddc74f4e522da5b4dcf7134542ac84fa9bc0a81dfea038bb877263154ae709a7aa9bcde773ca15f51d068aa9d0686c444ae987a9ef0842fa938e830d49f35d0c8dc3741b464a5f1afd544dc1877a9866031a3e0e642f2fa30b854c57b2beb268db912157fe2a79bb8a2077532ed28951e5c53a9089c31860e69fabd63df2975eb400229eef06aea8a44bdf03e491177f3e30daa80d37b77f434638f8bfd48105b17375afeaefc63529dc792f3ec8c79313d19c8162fed589357da69e5600a044536ef8337b98e255109f63b8ead8f963fa3ae2fb4a65953521bd7aee73ab2483930fbe90786149a034dd1f5492a33fa9abce711a47c957ae497f8146b929d0877a2c4d6efef1e7fd56f171e92deb2d7bb1c03237ea9a0b2b1058cd01c047631c9abfe85eee1fa6732d5d0e04a20d3c4dd1551fce5a27d12d0ffa0f19e32221ed47e5b07768b03903b1060e4bd07e73738a227788b8a6aecf1dc72fd46df67e5087d4a856df4efa0a6dc963e99a68a73d01b399487a6c272bc14b6f58ee64f29b84bdd75f3d39c499fc9ff02ffe0c268989cc9bdffb80b7639f405528c5a804278ff97559f9a9f807566ca84b2cb6b4fd2bdefeaf8a32b7acfd453297198814ab43ebeeffe6af7b3d0689bcc8e1baecf6ea3764e7ad21f9fe46b102a7010a650a19e1a767dbd27687d19aa6cd8cef074926a9e5d97ddc811567e6fd1a41b901026d4e94e8b364ed7f50f848046898e76a7b724c66292d418d10be9612f40594b7cc2f2086c546b1ecc6cb97d927bf06e55d43e6379063eeea681ba38042e403958bb5ba20c8b8e2809f47e336b3b0ede2cc75c866fc6e1cea9c7f9f3f1afc10513ad970c9a66e5b8bc6210c6280f2f11a213fe2a6f7180a718cc0debed0941041d8cf9b1d12805144325be53fc15aa94d850c57c657703458188f9d4a135b18b45cfde7d21a5aaba4b7ed01dc935e0e1741bdf7d979195cf38c92c45af9ef1f809e5d26fcda03ee31dd7498616992d9fa707e8c78b2ff0061dca25feabb8919a0f70cd643fe5bdaae4a25c4f7481889933ae499a49f9351b9ce1a8366921de4c8bcac59d0c94411aaf1e1163be3095c24e3f9d007d788fe12ecf7869e0508ed3ac973b5c7ff0b72621c746780ebfd698ee2af2a6afc6a7bd3aa31ba1b744c4299f51bd46e98ea0423c787604633729dbf53fccff1fa20572bf0209eac508448580f09e4c758e46b63ec0e68bd1a3867d2117d016b53a1896bd48332dca9e41f8bda098ed0c6ad9b37de8ad580bc1ce1e196e88de534f3ad613e4165c861e337e1233583c0869083e55e26cb6db896dea2d6c4769078c929b97be7b17fd311ae95ebea14d7286323babcf08c6ec3a11c21442795a159012faf7d4ccd86c66c3e6ea857cdb9a287990cf1dcc25df6e212a36d82dcd1c4a5cf79ee9f4e8aaf5c40098cb03e834e97aab8267655b02d470b1097ab4bd40370f10ee034782fc407b49010d2e9b6a752c5f4aca9c07858f20fd7722e5b52f9f909c9232f2b789b50f783608a07064d62e24d7e50ff46fa7b957943daf5523b19ff7c0ab4a1b20f4484fb0df8e57356d79fb8143825073547fec3ca5b601de4aa617c1272115cb2aee0340131f3d6a2159e40377c5c6a9bb0c96cdfb0412f34a587f353820b2874cfa26da74119569e27744cb9218829894fd5f466eb9c803e938b1054ed55d659d8e8197c578e2d0ec444efea884a3262c43bcfc5de911bef32e4a08b9baf5d02e3e2e4e0df44b821ba4561fb528c9ed17fa9b36b002e2539e6dfb18c8f16e5b90f966f915564f72c705a7756e07be1e8bd6381c78499b7acab8b374afad15f9f4", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
syz_failure_sync(0x0, 0x3)
fchmod(r2, 0x20)
syz_failure_sync(0x1, 0x3)
fcntl$setown(r1, 0x8, 0x0)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-466
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 34
-----finish removing dir
mkdir time 34
executor 3 create dir /root/glusterfs-client/dfs-0-467 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-467
receive_execute: 47, 69
receive_execute: 49, 69
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
Node-0:/root/daemon-log.24626
receive_execute: 47, 77
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 108, 80
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5824, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 1
----- executor 3 cover number : 950, signal number : 1149
----- completed 4
execute_call 0, 4, 0, 5
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 1
----- executor 3 cover number : 919, signal number : 13
----- completed 5
execute_call 0, 7, 0, 4
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8482, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 8482, flag collect 1
----- executor 3 cover number : 1136, signal number : 308
----- completed 7
execute_call 0, 12, 0, 4
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 3474, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 3474, flag collect 1
----- executor 3 cover number : 941, signal number : 548
----- completed 8
execute_call 0, 10, 0, 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 196
----- completed 9
execute_call 0, 68, 0, 7
execute_one loop: 0, 0, 75
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
execute_call 0, 209, 0, 0
execute_one loop: 0, 0, 209
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 27739, flag collect 1
----- executor 3 cover number : 600, signal number : 44
----- completed 14
execute_call 0, 65, 0, 7
execute_one loop: 0, 0, 72
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 cover number : 1341, signal number : 1687
----- executor 0 executes write_coverage_signal cov->size 142, flag collect 1
----- executor 0 cover number : 66, signal number : 41
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1922, signal number : 2177
----- executor 0 executes write_coverage_signal cov->size 5778, flag collect 1
----- executor 0 cover number : 533, signal number : 433
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 69
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1002, signal number : 575
----- executor 0 executes write_coverage_signal cov->size 1327, flag collect 1
----- executor 0 cover number : 570, signal number : 130
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 6
executor 0 server cover_cnt 20 output_pos_value 10957
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
execute_call 0, 110, 0, 0
execute_one loop: 0, 0, 110
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 110, 0, 0
execute_one loop: 0, 0, 110
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 59
----- directly resend shmid 59
-----executor 0 collect shmids 60
----- directly resend shmid 60
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
==24626==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
execute_call 0, 2856, 0, 0
execute_one loop: 0, 0, 2856
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3175, 0
execute_one time: 1, 3176
----- executor 3 write_call_output, size 0, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 2856, 0, 0
execute_one loop: 0, 0, 2856
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12600, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 12600, flag collect 1
----- executor 3 cover number : 1326, signal number : 313
----- completed 19
execute_call 0, 20, 0, 6
execute_one loop: 0, 0, 27
cover_reset in execute_call
Node-0:/root/daemon-log.24707
----- executor 3 write_call_output, size 32765, pid 1298, write pid:1298
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 600, signal number : 46
----- completed 20
execute_call 0, 78, 0, 7
execute_one loop: 0, 0, 85
executor 3, execute_one inner time: 1, 3274, 0
execute_one time: 2, 3276
2023/04/02 01:13:34 for select break: 1
2023/04/02 01:13:34 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
time breakdown 3: 189, 3281, 0
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 1 cover number : 7, signal number : 7
before receive testcase: 0 0
----- executor 2 cover number : 7, signal number : 7
----- executor 0 cover number : 51, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1265, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 435, signal number : 227
----- executor 0 executes write_coverage_signal cov->size 461, flag collect 1
----- executor 0 cover number : 163, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 0 cover number : 501, signal number : 63
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 519, signal number : 661
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 1 cover number : 49, signal number : 66
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 379, signal number : 76
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1404, signal number : 1529
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1662, signal number : 2104
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9801, flag collect 1
----- executor 2 cover number : 1595, signal number : 1865
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1160, signal number : 856
----- executor 1 executes write_coverage_signal cov->size 25349, flag collect 1
----- executor 0 cover number : 559, signal number : 452
----- executor 0 executes write_coverage_signal cov->size 5634, flag collect 1
----- executor 0 cover number : 529, signal number : 100
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 2 cover number : 1793, signal number : 1586
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1614, signal number : 884
----- executor 1 executes write_coverage_signal cov->size 25018, flag collect 1
----- executor 1 cover number : 2272, signal number : 2760
----- executor 1 executes write_coverage_signal cov->size 40, flag collect 1
----- executor 1 cover number : 35, signal number : 35
----- executor 1 executes write_coverage_signal cov->size 832, flag collect 1
----- executor 1 cover number : 269, signal number : 185
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 151
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 3468, flag collect 1
----- executor 2 cover number : 410, signal number : 95
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 775, signal number : 404
----- executor 1 executes write_coverage_signal cov->size 2002, flag collect 1
----- executor 1 cover number : 657, signal number : 190
----- executor 1 executes write_coverage_signal cov->size 8685, flag collect 1
----- executor 0 cover number : 142, signal number : 13
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 25
----- executor 0 executes write_coverage_signal cov->size 25774, flag collect 1
----- executor 1 cover number : 943, signal number : 765
----- executor 1 executes write_coverage_signal cov->size 22140, flag collect 1
----- executor 1 cover number : 1140, signal number : 552
----- executor 1 executes write_coverage_signal cov->size 22025, flag collect 1
----- executor 2 cover number : 1788, signal number : 2118
----- executor 2 executes write_coverage_signal cov->size 40, flag collect 1
----- executor 2 cover number : 35, signal number : 35
----- executor 2 executes write_coverage_signal cov->size 834, flag collect 1
----- executor 2 cover number : 269, signal number : 187
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 195
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 5060, flag collect 1
----- executor 0 cover number : 1532, signal number : 1474
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 883, signal number : 455
----- executor 2 executes write_coverage_signal cov->size 410, flag collect 1
----- executor 2 cover number : 226, signal number : 113
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1673, signal number : 1060
----- executor 1 executes write_coverage_signal cov->size 30816, flag collect 1
----- executor 0 cover number : 890, signal number : 319
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 13
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 1201, signal number : 1285
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2343, signal number : 1081
executor 1 server cover_cnt 19 output_pos_value 26303
2023/04/02 01:13:34 for select break: 1
2023/04/02 01:13:34 --------- executor 1 receive reply, reply.done 1
----- executor 0 cover number : 1922, signal number : 2456
----- executor 0 executes write_coverage_signal cov->size 5993, flag collect 1
----- executor 2 cover number : 991, signal number : 351
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 549, signal number : 269
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 1: 124, 3328, 0
before receive testcase: 0 0
----- executor 0 cover number : 142, signal number : 60
----- executor 0 executes write_coverage_signal cov->size 228, flag collect 1
----- executor 0 cover number : 115, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 1328, flag collect 1
----- executor 0 cover number : 602, signal number : 222
----- executor 0 executes write_coverage_signal cov->size 220, flag collect 1
----- executor 0 cover number : 111, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 220, flag collect 1
----- executor 0 cover number : 111, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 0 cover number : 10, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2260, signal number : 1598
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1002, signal number : 472
----- executor 0 executes write_coverage_signal cov->size 5009, flag collect 1
----- executor 0 cover number : 962, signal number : 528
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 29
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 161
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2218, signal number : 1483
executor 2 server cover_cnt 19 output_pos_value 26832
----- executor 0 cover number : 142, signal number : 24
executor 0 server cover_cnt 81 output_pos_value 34584
2023/04/02 01:13:34 for select break: 1
2023/04/02 01:13:34 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 118, 3354, 0
before receive testcase: 0 0
2023/04/02 01:13:34 for select break: 1
2023/04/02 01:13:34 --------- executor 0 receive reply, reply.done 1
2023/04/02 01:13:34 wg wait finish
time breakdown 0: 116, 3356, 0
before receive testcase: 0 0
2023/04/02 01:13:34 ------ all executors finish execution
2023/04/02 01:13:34 exec time: 3426
2023/04/02 01:13:34 ----- PS len: 4
2023/04/02 01:13:34 [SERVER] executor 1 has 19 replies
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 7 signal and 7 cover from userspace component
2023/04/02 01:13:34 [SERVER] executor 0 has 81 replies
2023/04/02 01:13:34 [SERVER] executor 2 has 19 replies
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 1687 signal and 1341 cover from userspace component
2023/04/02 01:13:34 [CLIENT] executor 3 has 20 replies
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 7 signal and 7 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 41 signal and 66 cover from userspace component
2023/04/02 01:13:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 2177 signal and 1922 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 66 signal and 49 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 2104 signal and 1662 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 661 signal and 519 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:34 fuzzer receive 1149 signal and 950 cover from executor 3
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 856 signal and 1160 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 433 signal and 533 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 69 signal and 142 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 1865 signal and 1595 cover from userspace component
2023/04/02 01:13:34 fuzzer receive 13 signal and 919 cover from executor 3
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 884 signal and 1614 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 2760 signal and 2272 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 35 signal and 35 cover from userspace component
2023/04/02 01:13:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:34 fuzzer receive 308 signal and 1136 cover from executor 3
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 1586 signal and 1793 cover from userspace component
2023/04/02 01:13:34 fuzzer receive 548 signal and 941 cover from executor 3
2023/04/02 01:13:34 fuzzer receive 196 signal and 600 cover from executor 3
2023/04/02 01:13:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 185 signal and 269 cover from userspace component
2023/04/02 01:13:34 fuzzer receive 44 signal and 600 cover from executor 3
2023/04/02 01:13:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 95 signal and 410 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 2118 signal and 1788 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 35 signal and 35 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 187 signal and 269 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 195 signal and 526 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 151 signal and 526 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 575 signal and 1002 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 455 signal and 883 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 130 signal and 570 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 113 signal and 226 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:34 fuzzer receive 313 signal and 1326 cover from executor 3
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:34 fuzzer receive 46 signal and 600 cover from executor 3
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 404 signal and 775 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 190 signal and 657 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 765 signal and 943 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 552 signal and 1140 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 1060 signal and 1673 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 1285 signal and 1201 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 6 signal and 51 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 51 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 3 signal and 10 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 227 signal and 435 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 1 receive 1081 signal and 2343 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 351 signal and 991 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 5 signal and 163 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 63 signal and 501 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 1598 signal and 2260 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 76 signal and 379 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 10 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 1529 signal and 1404 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 452 signal and 559 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 100 signal and 529 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 13 signal and 142 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 2 signal and 10 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 25 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 1474 signal and 1532 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 319 signal and 890 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 13 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 2 receive 1483 signal and 2218 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 2456 signal and 1922 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 269 signal and 549 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 60 signal and 142 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 5 signal and 115 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 222 signal and 602 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 3 signal and 111 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 0 signal and 111 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 6 signal and 10 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 472 signal and 1002 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 528 signal and 962 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 5 signal and 8 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 18 signal and 27 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 6 signal and 13 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 29 signal and 51 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 161 signal and 523 cover from userspace component
2023/04/02 01:13:34 ------- fuzzer executor 0 receive 24 signal and 142 cover from userspace component
2023/04/02 01:13:34 fsMds: [map[] map[] map[] map[]]
=================================================================
==24707==ERROR: AddressSanitizer: heap-use-after-free on address 0x6180000101a4 at pc 0x7fffeed76108 bp 0x7fffef717270 sp 0x7fffef717260
READ of size 4 at 0x6180000101a4 thread T7
    #0 0x7fffeed76107 in afr_notify /root/glusterfs/xlators/cluster/afr/src/afr-common.c:6396
    #1 0x7fffeed76626 in notify /root/glusterfs/xlators/cluster/afr/src/afr.c:42
    #2 0x7ffff72e7474 in xlator_notify /root/glusterfs/libglusterfs/src/xlator.c:709
    #3 0x7ffff74f4833 in default_notify /root/glusterfs/libglusterfs/src/defaults.c:3387
    #4 0x7fffeee01eda in client_notify_dispatch /root/glusterfs/xlators/protocol/client/src/client.c:146
    #5 0x7fffeee021d9 in client_notify_dispatch_uniq /root/glusterfs/xlators/protocol/client/src/client.c:118
    #6 0x7fffeee02a81 in client_rpc_notify /root/glusterfs/xlators/protocol/client/src/client.c:2275
    #7 0x7ffff722438a in rpc_clnt_handle_disconnect /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:785
    #8 0x7ffff722438a in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:846
    #9 0x7ffff721e983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #10 0x7ffff009e600 in socket_event_poll_err /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:1366
    #11 0x7ffff00a1599 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2821
    #12 0x7ffff00a1599 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #13 0x7ffff73ff6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #14 0x7ffff73ff6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #15 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477
    #16 0x7ffff70e9102 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x122102)

0x6180000101a4 is located 292 bytes inside of 812-byte region [0x618000010080,0x6180000103ac)
freed by thread T8 here:
    #0 0x7ffff76a07cf in __interceptor_free (/lib/x86_64-linux-gnu/libasan.so.5+0x10d7cf)
    #1 0x7ffff735ae39 in __gf_free /root/glusterfs/libglusterfs/src/mem-pool.c:383
    #2 0x7fffeed60c87 in afr_priv_destroy /root/glusterfs/xlators/cluster/afr/src/afr-common.c:6653
    #3 0x7fffeed60c87 in afr_priv_destroy /root/glusterfs/xlators/cluster/afr/src/afr-common.c:6623
    #4 0x7fffeed61105 in fini /root/glusterfs/xlators/cluster/afr/src/afr.c:745
    #5 0x7ffff738015c in glusterfs_graph_fini /root/glusterfs/libglusterfs/src/graph.c:1249
    #6 0x7ffff73804c8 in glusterfs_graph_cleanup /root/glusterfs/libglusterfs/src/graph.c:1459
    #7 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

previously allocated by thread T7 here:
    #0 0x7ffff76a0dc6 in calloc (/lib/x86_64-linux-gnu/libasan.so.5+0x10ddc6)
    #1 0x7ffff735a226 in __gf_calloc /root/glusterfs/libglusterfs/src/mem-pool.c:177
    #2 0x7fffeed773db in init /root/glusterfs/xlators/cluster/afr/src/afr.c:442
    #3 0x7ffff72ea208 in __xlator_init /root/glusterfs/libglusterfs/src/xlator.c:610
    #4 0x7ffff72ea208 in xlator_init /root/glusterfs/libglusterfs/src/xlator.c:635
    #5 0x7ffff737d672 in glusterfs_graph_init /root/glusterfs/libglusterfs/src/graph.c:474
    #6 0x7ffff7382f4c in glusterfs_process_svc_attach_volfp /root/glusterfs/libglusterfs/src/graph.c:1770
    #7 0x55555557478a in mgmt_process_volfile /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:112
    #8 0x555555584f47 in mgmt_getspec_cbk /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:2350
    #9 0x7ffff7224fca in rpc_clnt_handle_reply /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:723
    #10 0x7ffff7224fca in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:890
    #11 0x7ffff721e983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #12 0x7ffff00935a6 in socket_event_poll_in_async /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2358
    #13 0x7ffff00a3b39 in gf_async ../../../../libglusterfs/src/glusterfs/async.h:187
    #14 0x7ffff00a3b39 in socket_event_poll_in /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2399
    #15 0x7ffff00a3b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2790
    #16 0x7ffff00a3b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #17 0x7ffff73ff6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #18 0x7ffff73ff6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #19 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

Thread T7 created by T0 here:
    #0 0x7ffff75cd805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72fdb97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730f28d in gf_thread_create /root/glusterfs/libglusterfs/src/common-utils.c:3284
    #3 0x7ffff73fdaf2 in event_dispatch_epoll /root/glusterfs/libglusterfs/src/event-epoll.c:797
    #4 0x7ffff7358f89 in gf_event_dispatch /root/glusterfs/libglusterfs/src/event.c:115
    #5 0x7ffff7466b7f in gf_io_main /root/glusterfs/libglusterfs/src/gf-io.c:431
    #6 0x7ffff7466b7f in gf_io_run /root/glusterfs/libglusterfs/src/gf-io.c:516
    #7 0x55555556c37a in main /root/glusterfs/glusterfsd/src/glusterfsd.c:2774
    #8 0x7ffff6fee0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)

Thread T8 created by T7 here:
    #0 0x7ffff75cd805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72fdb97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730f4f2 in gf_thread_create_detached /root/glusterfs/libglusterfs/src/common-utils.c:3308
    #3 0x7ffff73836af in glusterfs_process_svc_attach_volfp /root/glusterfs/libglusterfs/src/graph.c:1840
    #4 0x55555557478a in mgmt_process_volfile /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:112
    #5 0x555555584f47 in mgmt_getspec_cbk /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:2350
    #6 0x7ffff7224fca in rpc_clnt_handle_reply /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:723
    #7 0x7ffff7224fca in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:890
    #8 0x7ffff721e983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #9 0x7ffff00935a6 in socket_event_poll_in_async /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2358
    #10 0x7ffff00a3b39 in gf_async ../../../../libglusterfs/src/glusterfs/async.h:187
    #11 0x7ffff00a3b39 in socket_event_poll_in /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2399
    #12 0x7ffff00a3b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2790
    #13 0x7ffff00a3b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #14 0x7ffff73ff6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #15 0x7ffff73ff6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #16 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

SUMMARY: AddressSanitizer: heap-use-after-free /root/glusterfs/xlators/cluster/afr/src/afr-common.c:6396 in afr_notify
Shadow bytes around the buggy address:
  0x0c307fff9fe0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c307fff9ff0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c307fffa000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c307fffa010: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c307fffa020: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
=>0x0c307fffa030: fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd fd
  0x0c307fffa040: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c307fffa050: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c307fffa060: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c307fffa070: fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa
  0x0c307fffa080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==24707==ABORTING
2023/04/02 01:13:34 failure smash: true false
2023/04/02 01:13:34 HasCrashFail: true, .HasNetFail: false
2023/04/02 01:13:34 disable threaded and collide
2023/04/02 01:13:34 prog length: 6
2023/04/02 01:13:34 send to channel: true, false
2023/04/02 01:13:34 prog length: 20
2023/04/02 01:13:34 HasCrashFail:true HasNetFail:false
01:13:34 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
syz_failure_sync(0x0, 0x3)
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
syz_failure_sync(0x1, 0x3)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-467
Node-0:/root/daemon-log.24701
==24701==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
remove dir time 139
-----finish removing dir
receive_execute: 74, 170
receive_execute: 71, 170
mkdir time 30
executor 3 create dir /root/glusterfs-client/dfs-0-468 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-468
receive_execute: 91, 170
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
receive_execute: 134, 174
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 6, 1
----- executor 3 write_call_output, size 5822, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 5822, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 5755, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 5755, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8488, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 8488, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 10, 0, 5
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 3476, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 3476, flag collect 1
----- executor 3 cover number : 942, signal number : 548
----- completed 8
execute_call 0, 18, 0, 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 196
----- completed 9
execute_call 0, 76, 0, 20
execute_one loop: 0, 0, 96
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 44
----- completed 14
execute_call 0, 72, 0, 11
execute_one loop: 0, 0, 83
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 232, 0, 0
execute_one loop: 0, 0, 232
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 1
----- executor 0 cover number : 34, signal number : 36
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1421
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1785, signal number : 2003
----- executor 0 executes write_coverage_signal cov->size 2750, flag collect 1
----- executor 0 cover number : 384, signal number : 274
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 69
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 2517, flag collect 1
----- executor 0 cover number : 807, signal number : 383
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 894, signal number : 462
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 54
executor 0 server cover_cnt 19 output_pos_value 10148
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
execute_call 0, 85, 0, 0
execute_one loop: 0, 0, 85
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 86, 0, 0
execute_one loop: 0, 0, 86
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
----- executor 3 write_call_output, size 0, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 2839, 0, 0
execute_one loop: 0, 0, 2839
cover_reset in execute_call
execute_call 0, 2839, 0, 0
execute_one loop: 0, 0, 2839
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3157, 0
execute_one time: 1, 3158
----- executor 3 write_call_output, size 12570, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 12570, flag collect 1
----- executor 3 cover number : 1327, signal number : 313
----- completed 19
execute_call 0, 34, 0, 8
execute_one loop: 0, 0, 42
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1300, write pid:1300
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 46
----- completed 20
execute_call 0, 84, 0, 17
execute_one loop: 0, 0, 101
executor 3, execute_one inner time: 0, 3297, 0
execute_one time: 1, 3297
2023/04/02 01:13:38 for select break: 1
2023/04/02 01:13:38 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 93, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
time breakdown 3: 308, 3302, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 93, flag collect 1
----- executor 2 cover number : 65, signal number : 75
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 65, signal number : 75
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 28155, flag collect 1
----- executor 0 cover number : 525, signal number : 198
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2191, signal number : 2795
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 66, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 142, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 12492, flag collect 1
----- executor 2 cover number : 133, signal number : 152
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 44
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 411, signal number : 231
----- executor 1 executes write_coverage_signal cov->size 5376, flag collect 1
----- executor 1 cover number : 576, signal number : 64
----- executor 1 executes write_coverage_signal cov->size 22029, flag collect 1
----- executor 0 cover number : 126, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1904, flag collect 1
----- executor 0 cover number : 497, signal number : 299
----- executor 0 executes write_coverage_signal cov->size 71, flag collect 1
----- executor 0 cover number : 36, signal number : 28
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1674, signal number : 1872
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1119, flag collect 1
----- executor 1 cover number : 280, signal number : 173
----- executor 2 cover number : 1798, signal number : 2189
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 416, flag collect 1
----- executor 1 cover number : 227, signal number : 78
----- executor 1 executes write_coverage_signal cov->size 4274, flag collect 1
----- executor 1 cover number : 720, signal number : 352
----- executor 1 executes write_coverage_signal cov->size 28603, flag collect 1
----- executor 0 cover number : 1141, signal number : 1276
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 35
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1151, signal number : 1293
----- executor 1 executes write_coverage_signal cov->size 7015, flag collect 1
----- executor 2 cover number : 410, signal number : 229
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 859, signal number : 81
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1818, signal number : 1340
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2186, signal number : 1343
----- executor 1 executes write_coverage_signal cov->size 29965, flag collect 1
----- executor 2 cover number : 576, signal number : 70
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1785, signal number : 1977
----- executor 0 executes write_coverage_signal cov->size 2750, flag collect 1
----- executor 0 cover number : 384, signal number : 160
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2566, signal number : 1346
executor 1 server cover_cnt 17 output_pos_value 22774
----- executor 0 cover number : 142, signal number : 67
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1113, flag collect 1
----- executor 0 cover number : 499, signal number : 204
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 2517, flag collect 1
----- executor 0 cover number : 807, signal number : 277
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2486, signal number : 3005
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1121, flag collect 1
----- executor 2 cover number : 280, signal number : 197
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
2023/04/02 01:13:38 for select break: 1
----- executor 2 cover number : 526, signal number : 203
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3474, flag collect 1
2023/04/02 01:13:38 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 261, 3344, 0
----- executor 2 cover number : 774, signal number : 404
----- executor 2 executes write_coverage_signal cov->size 2002, flag collect 1
before receive testcase: 0 0
----- executor 2 cover number : 657, signal number : 182
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 894, signal number : 390
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 45
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 10
----- executor 0 executes write_coverage_signal cov->size 5359, flag collect 1
----- executor 0 cover number : 426, signal number : 143
executor 0 server cover_cnt 81 output_pos_value 29502
2023/04/02 01:13:38 for select break: 1
2023/04/02 01:13:38 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 950, signal number : 1068
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 241, 3351, 0
before receive testcase: 0 0
----- executor 2 cover number : 1189, signal number : 676
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1979, signal number : 1165
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1789, signal number : 767
executor 2 server cover_cnt 20 output_pos_value 24176
2023/04/02 01:13:38 for select break: 1
2023/04/02 01:13:38 --------- executor 2 receive reply, reply.done 1
2023/04/02 01:13:38 wg wait finish
2023/04/02 01:13:38 ------ all executors finish execution
2023/04/02 01:13:38 exec time: 3548
2023/04/02 01:13:38 ----- PS len: 4
2023/04/02 01:13:38 [CLIENT] executor 3 has 20 replies
2023/04/02 01:13:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 548 signal and 942 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 196 signal and 601 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:38 [SERVER] executor 1 has 17 replies
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 75 signal and 65 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 2795 signal and 2191 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 0 signal and 66 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 231 signal and 411 cover from userspace component
2023/04/02 01:13:38 [SERVER] executor 2 has 20 replies
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 64 signal and 576 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 1872 signal and 1674 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 173 signal and 280 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 75 signal and 65 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 78 signal and 227 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 152 signal and 133 cover from userspace component
2023/04/02 01:13:38 [SERVER] executor 0 has 81 replies
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 36 signal and 34 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 1421 signal and 1141 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 352 signal and 720 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 2003 signal and 1785 cover from userspace component
time breakdown 2: 244, 3378, 0
before receive testcase: 0 0
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 274 signal and 384 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 69 signal and 142 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 383 signal and 807 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 462 signal and 894 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 54 signal and 51 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 198 signal and 525 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 4 signal and 142 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 9 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 1293 signal and 1151 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 81 signal and 859 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 1343 signal and 2186 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 1 receive 1346 signal and 2566 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 2189 signal and 1798 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 3 signal and 66 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 229 signal and 410 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 70 signal and 576 cover from userspace component
2023/04/02 01:13:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 3005 signal and 2486 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 197 signal and 280 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 203 signal and 526 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 404 signal and 774 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 182 signal and 657 cover from userspace component
2023/04/02 01:13:38 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 1068 signal and 950 cover from userspace component
2023/04/02 01:13:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 676 signal and 1189 cover from userspace component
2023/04/02 01:13:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 313 signal and 1327 cover from executor 3
2023/04/02 01:13:38 fuzzer receive 46 signal and 601 cover from executor 3
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 1165 signal and 1979 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 44 signal and 501 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 4 signal and 126 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 2 receive 767 signal and 1789 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 10 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 299 signal and 497 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 28 signal and 36 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 1276 signal and 1141 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 35 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 1340 signal and 1818 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 1977 signal and 1785 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 160 signal and 384 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 67 signal and 142 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 8 signal and 10 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 204 signal and 499 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 277 signal and 807 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 390 signal and 894 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 4 signal and 8 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 18 signal and 27 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 6 signal and 13 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 45 signal and 51 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 10 signal and 51 cover from userspace component
2023/04/02 01:13:38 ------- fuzzer executor 0 receive 143 signal and 426 cover from userspace component
2023/04/02 01:13:38 fsMds: [map[] map[] map[] map[]]
Node-0:/root/daemon-log.24780
2023/04/02 01:13:38 disable threaded and collide
2023/04/02 01:13:38 prog length: 6
2023/04/02 01:13:38 prog length: 20
2023/04/02 01:13:38 HasCrashFail:true HasNetFail:false
01:13:38 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="", 0x1000}, {&(0x7f0000001740)="dce9815d7e1b2de838895d1c2adf2351e9d4bacb5a7b4a2a6fc947bf1629306d4487249bec49743eef826639114e43277fa3ea6a99f2cb067f1c78154df4442159dbbbe964cb4f15d10f094cb5b6968e4ddf0bd0c44fa8cafaac63a102272b83780236f19571c8df08a030d5a2c3dd2e32bace0311df93881e187d0a6ee4ace88b41eda1948c94f8ab3c84eab027f066a67431376f54", 0x96}], 0x3)
chdir(&(0x7f0000001840)='./file0\x00')
syz_failure_sync(0x0, 0x3)
fchmod(r2, 0x20)
fcntl$setown(r1, 0x8, 0x0)
syz_failure_sync(0x1, 0x3)
lremovexattr(&(0x7f0000001880)='./file0\x00', &(0x7f00000018c0)=@known='trusted.overlay.redirect\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000001900)='./file0\x00', &(0x7f0000001940), &(0x7f0000001980)={'L-', 0x8}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9256
remove dir: /root/glusterfs-client/dfs-0-468
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 40
-----finish removing dir
receive_execute: 71, 64
mkdir time 23
executor 3 create dir /root/glusterfs-client/dfs-0-469 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-469
receive_execute: 77, 64
receive_execute: 43, 65
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 1
receive_execute: 116, 79
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5828, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 5828, flag collect 1
----- executor 3 cover number : 952, signal number : 1153
----- completed 4
execute_call 0, 5, 0, 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5755, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 5755, flag collect 1
----- executor 3 cover number : 920, signal number : 12
----- completed 5
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8482, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 8482, flag collect 1
----- executor 3 cover number : 1137, signal number : 308
----- completed 7
execute_call 0, 13, 0, 6
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 3489, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 3489, flag collect 1
----- executor 3 cover number : 948, signal number : 549
----- completed 8
execute_call 0, 16, 0, 3
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 195
----- completed 9
execute_call 0, 79, 0, 17
execute_one loop: 0, 0, 96
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 69
----- directly resend shmid 69
-----executor 0 collect shmids 70
----- directly resend shmid 70
----- executor 3 write_call_output, size 32765, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
execute_call 0, 282, 0, 0
execute_one loop: 0, 0, 282
executor 0 write_server_output
----- executor 3 cover number : 601, signal number : 44
----- completed 14
execute_call 0, 101, 0, 18
execute_one loop: 0, 0, 119
cover_reset in execute_call
----- executor 0 executes write_coverage_signal cov->size 71, flag collect 1
----- executor 0 cover number : 36, signal number : 41
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 3 waits for recv msg
----- executor 0 cover number : 1141, signal number : 1421
----- executor 0 executes write_coverage_signal cov->size 16296, flag collect 1
----- executor 0 cover number : 1755, signal number : 1858
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 9603, flag collect 1
----- executor 0 cover number : 877, signal number : 662
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 48, flag collect 1
----- executor 0 cover number : 34, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 108, flag collect 1
----- executor 0 cover number : 34, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1002, signal number : 728
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1460, signal number : 674
----- executor 0 executes write_coverage_signal cov->size 17593, flag collect 1
----- executor 0 cover number : 957, signal number : 981
----- executor 0 executes write_coverage_signal cov->size 10109, flag collect 1
----- executor 0 cover number : 1462, signal number : 1259
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 0 cover number : 526, signal number : 446
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 60
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 1
----- executor 0 cover number : 10, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 8360, flag collect 1
----- executor 0 cover number : 886, signal number : 756
----- executor 0 executes write_coverage_signal cov->size 12413, flag collect 1
----- executor 0 cover number : 862, signal number : 394
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1548, signal number : 1354
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 890, signal number : 334
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 0 cover number : 525, signal number : 136
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 1
----- executor 0 cover number : 243, signal number : 84
----- executor 0 executes write_coverage_signal cov->size 20339, flag collect 1
----- executor 0 cover number : 1248, signal number : 1327
----- executor 0 executes write_coverage_signal cov->size 7263, flag collect 1
----- executor 0 cover number : 1155, signal number : 240
----- executor 0 executes write_coverage_signal cov->size 14282, flag collect 1
----- executor 0 cover number : 1240, signal number : 1053
----- executor 0 executes write_coverage_signal cov->size 7241, flag collect 1
----- executor 0 cover number : 1155, signal number : 276
----- executor 0 executes write_coverage_signal cov->size 14730, flag collect 1
----- executor 0 cover number : 1223, signal number : 456
executor 0 server cover_cnt 35 output_pos_value 35366
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
execute_call 0, 161, 0, 0
execute_one loop: 0, 0, 161
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 161, 0, 0
execute_one loop: 0, 0, 161
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
==24780==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.24833
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
==24833==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.24816
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 2762, 0, 0
execute_one loop: 0, 0, 2762
cover_reset in execute_call
execute_call 0, 2763, 0, 0
execute_one loop: 0, 0, 2763
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3206, 0
execute_one time: 3, 3206
----- executor 3 write_call_output, size 12622, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 12622, flag collect 1
----- executor 3 cover number : 1327, signal number : 313
----- completed 19
execute_call 0, 27, 0, 2
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 3 write_call_output, size 32765, pid 1301, write pid:1301
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 3 cover number : 601, signal number : 46
----- completed 20
execute_call 0, 78, 0, 7
execute_one loop: 0, 0, 85
executor 3, execute_one inner time: 0, 3306, 0
execute_one time: 2, 3306
2023/04/02 01:13:41 for select break: 1
2023/04/02 01:13:41 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 cover number : 65, signal number : 74
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 24347, flag collect 1
----- executor 0 cover number : 501, signal number : 179
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 65, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 24028, flag collect 1
time breakdown 3: 195, 3310, 0
before receive testcase: 0 0
----- executor 1 cover number : 1725, signal number : 2114
----- executor 1 executes write_coverage_signal cov->size 669, flag collect 1
----- executor 1 cover number : 248, signal number : 241
----- executor 0 cover number : 126, signal number : 25
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 27
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 2635, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 919, flag collect 1
----- executor 1 cover number : 351, signal number : 150
----- executor 1 executes write_coverage_signal cov->size 126, flag collect 1
----- executor 0 cover number : 387, signal number : 156
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 286, flag collect 1
----- executor 0 cover number : 140, signal number : 44
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 66, signal number : 57
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1723, signal number : 2108
----- executor 2 executes write_coverage_signal cov->size 8480, flag collect 1
----- executor 2 cover number : 351, signal number : 405
----- executor 2 executes write_coverage_signal cov->size 5833, flag collect 1
----- executor 2 cover number : 275, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 1
----- executor 2 cover number : 66, signal number : 57
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1490
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 15
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1609, signal number : 1172
----- executor 1 executes write_coverage_signal cov->size 19342, flag collect 1
----- executor 1 cover number : 1201, signal number : 461
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1818, signal number : 1810
----- executor 0 executes write_coverage_signal cov->size 16296, flag collect 1
----- executor 2 cover number : 1342, signal number : 951
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1755, signal number : 2361
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 9603, flag collect 1
----- executor 1 cover number : 1303, signal number : 1162
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 877, signal number : 762
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 1176, flag collect 1
----- executor 0 cover number : 497, signal number : 276
----- executor 0 executes write_coverage_signal cov->size 119, flag collect 1
----- executor 0 cover number : 34, signal number : 41
----- executor 0 executes write_coverage_signal cov->size 114, flag collect 1
----- executor 0 cover number : 34, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 410, signal number : 192
----- executor 2 executes write_coverage_signal cov->size 29999, flag collect 1
----- executor 0 cover number : 1002, signal number : 610
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2635, signal number : 2971
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 130, flag collect 1
----- executor 1 cover number : 31, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 719, flag collect 1
----- executor 1 cover number : 266, signal number : 161
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1216, flag collect 1
----- executor 1 cover number : 390, signal number : 210
----- executor 1 executes write_coverage_signal cov->size 3474, flag collect 1
----- executor 1 cover number : 774, signal number : 374
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1460, signal number : 1019
----- executor 0 executes write_coverage_signal cov->size 20577, flag collect 1
----- executor 2 cover number : 1271, signal number : 1198
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1007, signal number : 1743
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1755, signal number : 1655
----- executor 1 executes write_coverage_signal cov->size 23015, flag collect 1
----- executor 0 cover number : 1622, signal number : 2749
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 1
----- executor 0 cover number : 29, signal number : 16
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 52
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 0 cover number : 526, signal number : 418
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1633, signal number : 578
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2229, signal number : 2212
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 1
----- executor 2 cover number : 31, signal number : 15
----- executor 2 executes write_coverage_signal cov->size 714, flag collect 1
----- executor 2 cover number : 266, signal number : 156
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3278, flag collect 1
----- executor 2 cover number : 767, signal number : 457
----- executor 2 executes write_coverage_signal cov->size 1412, flag collect 1
----- executor 2 cover number : 540, signal number : 85
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 79
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 1
----- executor 0 cover number : 51, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 718, flag collect 1
----- executor 0 cover number : 272, signal number : 130
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1994, signal number : 1414
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1214, signal number : 1358
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1449, signal number : 2620
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2523, signal number : 1409
executor 1 server cover_cnt 20 output_pos_value 32893
2023/04/02 01:13:41 for select break: 1
2023/04/02 01:13:41 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 141, 3378, 0
before receive testcase: 0 0
----- executor 0 cover number : 1467, signal number : 1440
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1681, signal number : 1031
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1548, signal number : 1981
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1789, signal number : 1062
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 890, signal number : 751
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 1
----- executor 2 cover number : 2230, signal number : 1308
----- executor 0 cover number : 525, signal number : 241
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 1
----- executor 0 cover number : 243, signal number : 101
----- executor 0 executes write_coverage_signal cov->size 20339, flag collect 1
executor 2 server cover_cnt 20 output_pos_value 29028
2023/04/02 01:13:41 for select break: 1
2023/04/02 01:13:41 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 108, 3396, 0
before receive testcase: 0 0
----- executor 0 cover number : 1248, signal number : 1473
----- executor 0 executes write_coverage_signal cov->size 7263, flag collect 1
----- executor 0 cover number : 1155, signal number : 414
----- executor 0 executes write_coverage_signal cov->size 25859, flag collect 1
----- executor 0 cover number : 1423, signal number : 2429
----- executor 0 executes write_coverage_signal cov->size 20429, flag collect 1
----- executor 0 cover number : 1271, signal number : 1704
----- executor 0 executes write_coverage_signal cov->size 21381, flag collect 1
----- executor 0 cover number : 1299, signal number : 1389
executor 0 server cover_cnt 103 output_pos_value 92620
2023/04/02 01:13:41 for select break: 1
2023/04/02 01:13:41 --------- executor 0 receive reply, reply.done 1
2023/04/02 01:13:41 wg wait finish
2023/04/02 01:13:41 ------ all executors finish execution
2023/04/02 01:13:41 exec time: 3482
2023/04/02 01:13:41 ----- PS len: 4
2023/04/02 01:13:41 [CLIENT] executor 3 has 20 replies
2023/04/02 01:13:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:41 [SERVER] executor 0 has 103 replies
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 41 signal and 36 cover from userspace component
2023/04/02 01:13:41 [SERVER] executor 2 has 20 replies
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1421 signal and 1141 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:41 [SERVER] executor 1 has 20 replies
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1858 signal and 1755 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 2108 signal and 1723 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 405 signal and 351 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 662 signal and 877 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 4 signal and 275 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 57 signal and 66 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 951 signal and 1342 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 192 signal and 410 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 74 signal and 65 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 1198 signal and 1271 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 2114 signal and 1725 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 241 signal and 248 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 150 signal and 351 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 57 signal and 66 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 1172 signal and 1609 cover from userspace component
2023/04/02 01:13:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:41 fuzzer receive 1153 signal and 952 cover from executor 3
2023/04/02 01:13:41 fuzzer receive 12 signal and 920 cover from executor 3
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 461 signal and 1201 cover from userspace component
2023/04/02 01:13:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 1162 signal and 1303 cover from userspace component
2023/04/02 01:13:41 fuzzer receive 308 signal and 1137 cover from executor 3
2023/04/02 01:13:41 fuzzer receive 549 signal and 948 cover from executor 3
2023/04/02 01:13:41 fuzzer receive 195 signal and 601 cover from executor 3
2023/04/02 01:13:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 2971 signal and 2635 cover from userspace component
2023/04/02 01:13:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 16 signal and 31 cover from userspace component
2023/04/02 01:13:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:41 fuzzer receive 44 signal and 601 cover from executor 3
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 161 signal and 266 cover from userspace component
2023/04/02 01:13:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 6 signal and 7 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 210 signal and 390 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 24 signal and 34 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 3 signal and 34 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 2212 signal and 2229 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 15 signal and 31 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 156 signal and 266 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 457 signal and 767 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 85 signal and 540 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 374 signal and 774 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 1358 signal and 1214 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 1031 signal and 1681 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 728 signal and 1002 cover from userspace component
2023/04/02 01:13:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 674 signal and 1460 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 981 signal and 957 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1259 signal and 1462 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 1655 signal and 1755 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:41 fuzzer receive 313 signal and 1327 cover from executor 3
2023/04/02 01:13:41 fuzzer receive 46 signal and 601 cover from executor 3
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 578 signal and 1633 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 1414 signal and 1994 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 1 receive 1409 signal and 2523 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 1062 signal and 1789 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 2 receive 1308 signal and 2230 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 54 signal and 51 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 446 signal and 526 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 60 signal and 142 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 2 signal and 51 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 8 signal and 10 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 756 signal and 886 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 394 signal and 862 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1354 signal and 1548 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 334 signal and 890 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 136 signal and 525 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 84 signal and 243 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1327 signal and 1248 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 240 signal and 1155 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1053 signal and 1240 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 276 signal and 1155 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 456 signal and 1223 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 179 signal and 501 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 25 signal and 126 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 4 signal and 9 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 27 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 156 signal and 387 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 44 signal and 140 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1490 signal and 1141 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 15 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1810 signal and 1818 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 2361 signal and 1755 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 762 signal and 877 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 3 signal and 7 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 276 signal and 497 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 41 signal and 34 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 17 signal and 34 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 610 signal and 1002 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1019 signal and 1460 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1743 signal and 1007 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 2749 signal and 1622 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 17 signal and 27 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 4 signal and 13 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 16 signal and 29 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 52 signal and 51 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 418 signal and 526 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 79 signal and 142 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 3 signal and 51 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 130 signal and 272 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 2620 signal and 1449 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1440 signal and 1467 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1981 signal and 1548 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 751 signal and 890 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 241 signal and 525 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 101 signal and 243 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1473 signal and 1248 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 414 signal and 1155 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 2429 signal and 1423 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1704 signal and 1271 cover from userspace component
2023/04/02 01:13:41 ------- fuzzer executor 0 receive 1389 signal and 1299 cover from userspace component
time breakdown 0: 135, 3417, 0
before receive testcase: 0 0
2023/04/02 01:13:41 fsMds: [map[] map[] map[] map[]]
2023/04/02 01:13:41 failure smash: true false
2023/04/02 01:13:41 HasCrashFail: true, .HasNetFail: false
2023/04/02 01:13:41 send to channel: true, false
2023/04/02 01:13:41 disable threaded and collide
2023/04/02 01:13:41 prog length: 6
2023/04/02 01:13:41 prog length: 20
2023/04/02 01:13:41 HasCrashFail:true HasNetFail:false
01:13:41 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000)=0x1)
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x200, 0xa4)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
setxattr$trusted_overlay_origin(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="2a036c1cb4d06bc23283a8ffe0e715233ac53ec97ec493b22ec862d87b625d9fea337108aafefee2a929aa548971bc4fb94ecad30a07e2ef9fddc63e51803e20b316ae04384f9065ff45ecd35aa7c73ad1442a6bc407af5ac347ebed953f21c91bde3982aafbe78d8fab8a3d516eb720d3", 0x71, 0x2)
read(r0, &(0x7f0000000240)=""/105, 0x69)
symlink(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)='./file0\x00')
lremovexattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='system.posix_acl_access\x00')
setxattr$incfs_metadata(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)="09afea79a1db08a91c865ed592e28861e6f5356f37fd242d959d9343843b8fdc2c2e01a2b209df173335bdb45b2e2c154f7b553019758e03abd441b46b9b9cf3f5a2f23b7a3b0b4bf874694d8d4ea7dba9192fd05fd87098d5b5fccbdc5119a71cf1f0103039a18831a13349f2a14eaf12ba9425ea8aa3ae24b30b5ee4b2bb44aa2707caad0a21a2839941421d5fbaca7614f08e8362d18dac86f00d58c7cd6147f8586208b194c9c6a7b6fa8f81e1", 0xaf, 0x3)
r2 = dup(r1)
write$binfmt_script(r2, &(0x7f0000000500)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'y\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'system.posix_acl_access\x00'}, {0x20, '\'}/&'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, ':%+'}, {0x20, 'trusted.overlay.origin\x00'}, {0x20, '(}'}], 0xa, "74875e0698eeac996abc29164fc835bcfd78f6b101c3f321cface65cdb7469671d2af52cf5d6c3c7cbb6f575fda18c29360b7e3cd666b6216fe67ede9f6b0be9c7f4af79a345a56d14f16ab8cb3a086908"}, 0xfc)
rmdir(&(0x7f0000000600)='./file0\x00')
writev(0xffffffffffffffff, &(0x7f0000001800)=[{&(0x7f0000000640)="b895b653a479e8a05bc01b6e715a76aa8cc3a2d454e71bbca9b72f9506138bf02891d284e1ac69cfb02d0aad9a0a02f00299044ccb6fe6fe64ddb8eb03b7f01db4c517b2a4742188a75e29ee0173dc66d7b78d3ee8c4f5d8d822becc33c36acbfa4414ea24f773b215837b5bd4cb12f4768efe3c9dab824150d2eff97a7fb9ae9711113540d4b788493b683df5a4e33cfdf5c53ad3678a42a049e94a76daeace7fc4687729cbbd31818a63d7f154157c37b9cadfd9992faadef2312e01b867f8608340ac4e30723d64062f591f4dcb6d8cecb5bb3c5c8db4c43ec71d0650a46af5af6f", 0xe3}, {&(0x7f0000000740)="cb7ee857caba085bff7aa5fd1ab712efc6d0ecc083e40e22353381ae0529e549b4b3c225e9e7dd3309c66c1a7bab8814b0e6c48855b801b5dfb13a69efd0d6f699259bc0ea6452ba6fba1c3ee14eda11c6df5db4d9deee4e769d8df68fa73e07ea220aafd52c5551443fc4906f30e274d3f9f84034deeacc4f2d807fd47f2ef9f52f7960545f007cb50c19a957ce7f4ae2fd56c3a82e6733b0c4afba39264467588d62f356893abc9c186962872525ce571a5ad6e7ee2e02fcab095e3cbe9335703cd66910900071696cb0e740610af5cb1d711720646b2137f14caaf49ce7b88c62afa4fba83db25195616b19c0db64bd5eec5331ff325468d193eaf8def4ffbfb6eaf8069dcf864003d327ed67a3ef351b107b1eb30c7de25d803debc6507cacefe63c88b8a10b9b2ce48272f84ab5f69a0f9d99534efb5dfff362f03f7253caa55cc12ae2e238c05eee10cfa5f146dd18033a2bf64e1aae1e33bf8386bbee03319829eee147f74b749806f05fba16c165ef6b2e33a43935fdd47be314aacb142eba14aea5396077dcf0225428664ab59fe6a9f55a738b6dde9dec2e387be91a932b607042386923b25db40605962b66bc6b1bdf59402bda51de81152b9a4756ff7983c5e8610a69d362969d2583890d485e953543536b3d63b0c5d165597ea8e0a1ed73f5307d15ad804be791486afadd349f9e7627f760e9a773a0599593ed069a549126a3159065c75925cb457f415f00d3427d77ba55bfc73b9f16326021b6a573530f0822f91a164a1dc55f80268be2186b8a700804fbaf252fc028bdf25aa03ef7b9a01a68eaeba81d2d9c00078ee423de313387a2b60e5d503621bdc4c56fcdf534524d94541b4d76957681beeff11b0efd047d2acc239d30d6a86ec9848ad9530b66ae00a11750276b285ab1d9b710cdb05a1912b245e0f22a1fff6f505fd10e4815e345891c7e3a084941c87847043e5f90af07b0a9ed5b450c804d706c404834ab846a9fe14eb1f7a06e404f3fad62afb5b137e9533615cb1e79b887a8b3f536c00977560d079351b03b7bfea44a1bdb28e041c568b9722cf9a0f85cd08b28d833c410ca4b2f99c627edad47dd8242c029a0c09ac40418b800b5bb18c8106443efe02605a6089caa0bfe7e92cec6d8be303f1446c40be6057dece2d630ddc0a83cc29e6666c9e60a24e51bdeaed23e290e08ecfcd4e486122c5bb7f287ebc0aeb7738a75ddfbc5f32656d8d4418e8102b135ab14920713c7122371a42c7ad3af099fa90e4f95967b8b9e08d822242ca107c4aef30308909abef2000d9be2f3afe81a7700c21585e471fc18738b8bc85c62c3027848a005f6f74d7260a136e58656dc23a0b7994d155bcee63ddc9a74ec6ee0813e1ac4625cc2b59dfb63ee529b102d8d280ba75f7b16d3189f309e0d68c12de815423b3f0f3acacea65f158c54444c939f7a6ebe09575f5d6378afe468030d15ef4c605a330d7dec27cba26aa3ca92742330612a9c410dfe1aadfe54b8ae2c43d7ca786ef528b4df208042bb083c46ed9491ac9c2f6f77c91775ce54e8a09dab45d907227b9d12ecb63340f9e23f9f6db355faafcc926ebab8c5ca6937680c3351b17d11f854470d7e48949d8924ab4fc25eafcc734739af53bc970444b70d9a59347e55be397ef9a91719deccbb6fae999b21352c9ac681e5307a1326368bd0855e134ba7a136c2884181bf1aaaf7181dc6be357c78b53d637caf33ea0481a8473de870f584255370162fa6da9b6e82998e41308ab6738e550b309eacb522dfd308fed27e7b862477713ee6224b07b604937d448950034216ab9e741c034cfc3c8dd5b4cb89a4cfcaa4c0e490ed6eacf73dfd58fba14ecc2cd42d522054027cc75a452d4815fa94a6cda23415c1268351de5ec91e31a3b3846a9b1de3e97d0c554d04d895d067d49aa29da787acb068f67472ce49684b59ca3875002382003932b86eb2b0824e8683c8290d58178f11da594e271df6d2dadb442053cec938f114cd45b54a60290fdf317d404006567301221a887aa4545da87c5643ecd5a86c837d2234628851b809d0f129ca9ac001ae81230671fd7a0b0316c283714f560baa25d98548a0e95a69de4f5f3c89ae90f8dcd363fb948cfe759543d0ae9e496286a11fdbef7db7812a37fedf87c72c23a2e98ee2447a93f9b0033a9b49e64d80ffa599743bd6c363e44d9124cbf927ecb4d6daeb0f9a70e2ab6518ac52706facc6bc9f591ab03e4a301a27c9624ee22a886fb9c1431c2e9ac545db0bf642a93bc68d1e6d04e9004a1299f6f061307d1d86c40c0d2ff52dcb4c498706ab94c29fb456cfa5dcc75572256ca319cab6f7246994e20af4bd806834821de1bc855b66dc52c7444fd2d5f25a1d00298f15b6cd83c0697424c2294184ad8565e0deb19c4d084495268c910a90e87639828c435bc27d2defc6d043097ed43a2891d7ce11b32c921c5ab80af95398b44ba81c9f186a59f14ccc814f3d1701e294164a2407c47632929c7a8e36168e73108c1d4ce3fda7d74b76b5ff9cb2a54b25161298b282b53435847a3d1b3a31c2544640fe6b46bdda16ecf11327e094817b294da26e299c46d06f35ede1f9db0cf248c1f3093b08ec2a108e3f935660b8d37e852db6338642383cca41a50c042bfd57fef9aecf43d1a8be072c17f5b00e13f3ae2cb9aa5c78d797d4c4f86f0c2e17f41940b9ddb2aeca472b94814752bfc36ecc32bf7eafc12a20ef522736d6b732a3e208ad443a1ce675f385595df53ae4130d220b1b8898ff448c96c4e322540c119146a710bfd68efe71e65b4306e899bc83c675143030dd721457c7d2a7e1934020e9a86b0153b0122d92e63e74eb8315e10eb3e5af0e3cadf6902e6e9541239a6cbe252adefeac36f1d736b36cd160e5348ad06120db3ad4c86e086da3ce15bfd6144633a6bba633ff854032fdb533a49c4ca8911f4323b6d64b7d052ff3be04d7dd9a4bfd004265fc3362763cacba90912379aa5ae3dca7c81069ca54403f9baba9d09fc16986b3d0c3f1a8469f75e4a57ef85468b70c7f816b106486d5da0c1b9ae1908548877207b6705d87b9808863c607767c0cc97b8575c49b6e1c221250f7ba2e387105474e89186c11e2ae754d1dcf3a63a820cf753d97f354e59c14902ba9cf2795c8f47257e30e6a2800a1d331fafee064b35653e40bc8e61fb34fb3a73009f63b249bf27c8b49f0899e189c86c5fb3245a282e81fed043e9d7b98cbae92734f2433fed63714dcf4fa22014c090b2d6f742439c8fc681e29a554ec28904c4e8e10a10a17d1ecdca7cc60ed8de8c773c6c2165f3ef8d9d9e6495d5043b5b602836c10a40513637ee7c40a0929dea1107d909dbdf33349f0e94c38d8dd74212082a65992a664c20f157a5652335e2b85d4f7ed01f0ecfe236b9be6b6e311c4b62f7fa4fe93a94ba5e601fe27ae89c47dd755b7bd5fe8b04b697a01417b6d021063a71c58ba19cb2554429aa740062a417171aecf88f4951c980f39ac6ffced130c0c6727fb8c33480167d94a414ad60547ff2c9db96ac7f03c821d19e28d0eacadabacdeead42b5e87aa8d7f827226dfcb215b13ee19b36200232d802149cb001718ba9607427ce23f22b188bbd6ca1a0c4f69c0949b1b3731010cb448f41acb04fd729620233f6e06c261d8b29ea47c7e6b82b561dea494be3a0c81d63653c8c677d443f225364dc4695e3f5ef69a6611bf1907343482f8c00b5e77c84e08800f2ac78f9429e6b6c24a316d62aed541fcbc7a2100afd265dd2b3a2d677a92d1417a2bec87311efcd89f4082028ba2e4f952357a4a10ae7b98a406d50449d5c27e1abbb4f0c15eecf8230b9364f4175cf33f4ee56824e4206594dd465110a6ecaaf7247f937a9ddbbb0df3de2a685055ca188be8920cf1ba1ddc74f4e522da5b4dcf7134542ac84fa9bc0a81dfea038bb877263154ae709a7aa9bcde773ca15f51d068aa9d0686c444ae987a9ef0842fa938e830d49f35d0c8dc3741b464a5f1afd544dc1877a9866031a3e0e642f2fa30b854c57b2beb268db912157fe2a79bb8a2077532ed28951e5c53a9089c31860e69fabd63df2975eb400229eef06aea8a44bdf03e491177f3e30daa80d37b77f434638f8bfd48105b17375afeaefc63529dc792f3ec8c79313d19c8162fed589357da69e5600a044536ef8337b98e255109f63b8ead8f963fa3ae2fb4a65953521bd7aee73ab2483930fbe90786149a034dd1f5492a33fa9abce711a47c957ae497f8146b929d0877a2c4d6efef1e7fd56f171e92deb2d7bb1c03237ea9a0b2b1058cd01c047631c9abfe85eee1fa6732d5d0e04a20d3c4dd1551fce5a27d12d0ffa0f19e32221ed47e5b07768b03903b1060e4bd07e73738a227788b8a6aecf1dc72fd46df67e5087d4a856df4efa0a6dc963e99a68a73d01b399487a6c272bc14b6f58ee64f29b84bdd75f3d39c499fc9ff02ffe0c268989cc9bdffb80b7639f405528c5a804278ff97559f9a9f807566ca84b2cb6b4fd2bdefeaf8a32b7acfd453297198814ab43ebeeffe6af7b3d0689bcc8e1baecf6ea3764e7ad21f9fe46b102a7010a650a19e1a767dbd27687d19aa6cd8cef074926a9e5d97ddc811567e6fd1a41b901026d4e94e8b364ed7f50f848046898e76a7b724c66292d418d10be9612f40594b7cc2f2086c546b1ecc6cb97d927bf06e55d43e6379063eeea681ba38042e403958bb5ba20c8b8e2809f47e336b3b0ede2cc75c866fc6e1cea9c7f9f3f1afc10513ad970c9a66e5b8bc6210c6280f2f11a213fe2a6f7180a718cc0debed0941041d8cf9b1d12805144325be53fc15aa94d850c57c657703458188f9d4a135b18b45cfde7d21a5aaba4b7ed01dc935e0e1741bdf7d979195cf38c92c45af9ef1f809e5d26fcda03ee31dd7498616992d9fa707e8c78b2ff0061dca25feabb8919a0f70cd643fe5bdaae4a25c4f7481889933ae499a49f9351b9ce1a8366921de4c8bcac59d0c94411aaf1e1163be3095c24e3f9d007d788fe12ecf7869e0508ed3ac973b5c7ff0b72621c746780ebfd698ee2af2a6afc6a7bd3aa31ba1b744c4299f51bd46e98ea0423c787604633729dbf53fccff1fa20572bf0209eac508448580f09e4c758e46b63ec0e68bd1a3867d2117d016b53a1896bd48332dca9e41f8bda098ed0c6ad9b37de8ad580bc1ce1e196e88de534f3ad613e4165c861
VM DIAGNOSIS:
01:13:34  Registers:
info registers vcpu 0
RAX=0000000000000015 RBX=ffffffffffffffeb RCX=ffffffffffffffff RDX=000000000000001c
RSI=00000000fffffffb RDI=ff110002bfffd4c0 RBP=ff110002bfffa000 RSP=ff110001104475b8
R8 =ffffffff8152345b R9 =0000000000000000 R10=0000000000000001 R11=fffa7c0000988e90
R12=0000000000032211 R13=0000000000000000 R14=0000000000000069 R15=dffffc0000000000
RIP=ffffffff81560082 RFL=00000086 [--S--P-] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0000 0000000000000000 ffffffff 00c00000
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=0000555555670110 CR3=0000000004810004 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000ffffffffffffff00 XMM01=25252525252525252525252525252525
XMM02=00000000000000000000000000000000 XMM03=00000000000000000000000000000000
XMM04=0000000000000000ffffffffffffff00 XMM05=00000000000000000000000000000003
XMM06=00000000000013880000000000000032 XMM07=00000000000001d30000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=0000000000000000 RBX=0000000000000000 RCX=0000000000000000 RDX=00007ffff71c3000
RSI=00007fffffffba00 RDI=00007ffff7ffd310 RBP=00007fffffffe4c0 RSP=00007fffffffe090
R8 =000000000000001d R9 =000000000000001d R10=00000000ffffffff R11=0000000000000000
R12=00007ffff732e270 R13=0000000000000000 R14=0000000000000000 R15=0000000000000000
RIP=00007ffff73029c2 RFL=00000246 [---Z-P-] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff980 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff0d575d8 CR3=000000010d5ca003 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000ffffffffffffff00 XMM01=25252525252525252525252525252525
XMM02=00000000000000000000000000000000 XMM03=00000000000000000000000000000000
XMM04=0000000000000000ffffffffffffff00 XMM05=00000000000000000000000000000003
XMM06=00000000000013880000000000000032 XMM07=00000000000001d30000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
